

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jun 04 14:38:27 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F876
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.32
    29                           ; Generated 02/02/2021 GMT
    30                           ; 
    31                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F876 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000D                     	;# 
   129  000E                     	;# 
   130  000E                     	;# 
   131  000F                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0015                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001B                     	;# 
   145  001B                     	;# 
   146  001C                     	;# 
   147  001D                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  0081                     	;# 
   151  0085                     	;# 
   152  0086                     	;# 
   153  0087                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  0091                     	;# 
   158  0092                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0098                     	;# 
   162  0099                     	;# 
   163  009E                     	;# 
   164  009F                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010F                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  0007                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0015                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  001A                     	;# 
   198  001B                     	;# 
   199  001B                     	;# 
   200  001C                     	;# 
   201  001D                     	;# 
   202  001E                     	;# 
   203  001F                     	;# 
   204  0081                     	;# 
   205  0085                     	;# 
   206  0086                     	;# 
   207  0087                     	;# 
   208  008C                     	;# 
   209  008D                     	;# 
   210  008E                     	;# 
   211  0091                     	;# 
   212  0092                     	;# 
   213  0093                     	;# 
   214  0094                     	;# 
   215  0098                     	;# 
   216  0099                     	;# 
   217  009E                     	;# 
   218  009F                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  018C                     	;# 
   278  018D                     	;# 
   279  0000                     	;# 
   280  0001                     	;# 
   281  0002                     	;# 
   282  0003                     	;# 
   283  0004                     	;# 
   284  0005                     	;# 
   285  0006                     	;# 
   286  0007                     	;# 
   287  000A                     	;# 
   288  000B                     	;# 
   289  000C                     	;# 
   290  000D                     	;# 
   291  000E                     	;# 
   292  000E                     	;# 
   293  000F                     	;# 
   294  0010                     	;# 
   295  0011                     	;# 
   296  0012                     	;# 
   297  0013                     	;# 
   298  0014                     	;# 
   299  0015                     	;# 
   300  0015                     	;# 
   301  0016                     	;# 
   302  0017                     	;# 
   303  0018                     	;# 
   304  0019                     	;# 
   305  001A                     	;# 
   306  001B                     	;# 
   307  001B                     	;# 
   308  001C                     	;# 
   309  001D                     	;# 
   310  001E                     	;# 
   311  001F                     	;# 
   312  0081                     	;# 
   313  0085                     	;# 
   314  0086                     	;# 
   315  0087                     	;# 
   316  008C                     	;# 
   317  008D                     	;# 
   318  008E                     	;# 
   319  0091                     	;# 
   320  0092                     	;# 
   321  0093                     	;# 
   322  0094                     	;# 
   323  0098                     	;# 
   324  0099                     	;# 
   325  009E                     	;# 
   326  009F                     	;# 
   327  010C                     	;# 
   328  010D                     	;# 
   329  010E                     	;# 
   330  010F                     	;# 
   331  018C                     	;# 
   332  018D                     	;# 
   333  0000                     	;# 
   334  0001                     	;# 
   335  0002                     	;# 
   336  0003                     	;# 
   337  0004                     	;# 
   338  0005                     	;# 
   339  0006                     	;# 
   340  0007                     	;# 
   341  000A                     	;# 
   342  000B                     	;# 
   343  000C                     	;# 
   344  000D                     	;# 
   345  000E                     	;# 
   346  000E                     	;# 
   347  000F                     	;# 
   348  0010                     	;# 
   349  0011                     	;# 
   350  0012                     	;# 
   351  0013                     	;# 
   352  0014                     	;# 
   353  0015                     	;# 
   354  0015                     	;# 
   355  0016                     	;# 
   356  0017                     	;# 
   357  0018                     	;# 
   358  0019                     	;# 
   359  001A                     	;# 
   360  001B                     	;# 
   361  001B                     	;# 
   362  001C                     	;# 
   363  001D                     	;# 
   364  001E                     	;# 
   365  001F                     	;# 
   366  0081                     	;# 
   367  0085                     	;# 
   368  0086                     	;# 
   369  0087                     	;# 
   370  008C                     	;# 
   371  008D                     	;# 
   372  008E                     	;# 
   373  0091                     	;# 
   374  0092                     	;# 
   375  0093                     	;# 
   376  0094                     	;# 
   377  0098                     	;# 
   378  0099                     	;# 
   379  009E                     	;# 
   380  009F                     	;# 
   381  010C                     	;# 
   382  010D                     	;# 
   383  010E                     	;# 
   384  010F                     	;# 
   385  018C                     	;# 
   386  018D                     	;# 
   387  0000                     	;# 
   388  0001                     	;# 
   389  0002                     	;# 
   390  0003                     	;# 
   391  0004                     	;# 
   392  0005                     	;# 
   393  0006                     	;# 
   394  0007                     	;# 
   395  000A                     	;# 
   396  000B                     	;# 
   397  000C                     	;# 
   398  000D                     	;# 
   399  000E                     	;# 
   400  000E                     	;# 
   401  000F                     	;# 
   402  0010                     	;# 
   403  0011                     	;# 
   404  0012                     	;# 
   405  0013                     	;# 
   406  0014                     	;# 
   407  0015                     	;# 
   408  0015                     	;# 
   409  0016                     	;# 
   410  0017                     	;# 
   411  0018                     	;# 
   412  0019                     	;# 
   413  001A                     	;# 
   414  001B                     	;# 
   415  001B                     	;# 
   416  001C                     	;# 
   417  001D                     	;# 
   418  001E                     	;# 
   419  001F                     	;# 
   420  0081                     	;# 
   421  0085                     	;# 
   422  0086                     	;# 
   423  0087                     	;# 
   424  008C                     	;# 
   425  008D                     	;# 
   426  008E                     	;# 
   427  0091                     	;# 
   428  0092                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009E                     	;# 
   434  009F                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  010F                     	;# 
   439  018C                     	;# 
   440  018D                     	;# 
   441  0000                     	;# 
   442  0001                     	;# 
   443  0002                     	;# 
   444  0003                     	;# 
   445  0004                     	;# 
   446  0005                     	;# 
   447  0006                     	;# 
   448  0007                     	;# 
   449  000A                     	;# 
   450  000B                     	;# 
   451  000C                     	;# 
   452  000D                     	;# 
   453  000E                     	;# 
   454  000E                     	;# 
   455  000F                     	;# 
   456  0010                     	;# 
   457  0011                     	;# 
   458  0012                     	;# 
   459  0013                     	;# 
   460  0014                     	;# 
   461  0015                     	;# 
   462  0015                     	;# 
   463  0016                     	;# 
   464  0017                     	;# 
   465  0018                     	;# 
   466  0019                     	;# 
   467  001A                     	;# 
   468  001B                     	;# 
   469  001B                     	;# 
   470  001C                     	;# 
   471  001D                     	;# 
   472  001E                     	;# 
   473  001F                     	;# 
   474  0081                     	;# 
   475  0085                     	;# 
   476  0086                     	;# 
   477  0087                     	;# 
   478  008C                     	;# 
   479  008D                     	;# 
   480  008E                     	;# 
   481  0091                     	;# 
   482  0092                     	;# 
   483  0093                     	;# 
   484  0094                     	;# 
   485  0098                     	;# 
   486  0099                     	;# 
   487  009E                     	;# 
   488  009F                     	;# 
   489  010C                     	;# 
   490  010D                     	;# 
   491  010E                     	;# 
   492  010F                     	;# 
   493  018C                     	;# 
   494  018D                     	;# 
   495  0019                     _TXREG	set	25
   496  0018                     _RCSTAbits	set	24
   497  001A                     _RCREG	set	26
   498  0018                     _RCSTA	set	24
   499  0001                     _TMR0	set	1
   500  0015                     _CCPR1L	set	21
   501  0012                     _T2CON	set	18
   502  0017                     _CCP1CON	set	23
   503  0007                     _PORTC	set	7
   504  0006                     _PORTB	set	6
   505  0005                     _PORTA	set	5
   506  0007                     _PORTCbits	set	7
   507  0005                     _PORTAbits	set	5
   508  0006                     _PORTBbits	set	6
   509  000C                     _PIR1bits	set	12
   510  000B                     _INTCONbits	set	11
   511  0099                     _SPBRG	set	153
   512  0098                     _TXSTA	set	152
   513  0092                     _PR2	set	146
   514  0081                     _OPTION_REG	set	129
   515  009F                     _ADCON1	set	159
   516  0087                     _TRISC	set	135
   517  0086                     _TRISB	set	134
   518  0085                     _TRISA	set	133
   519  008C                     _PIE1bits	set	140
   520                           
   521                           	psect	cinit
   522  0011                     start_initialization:	
   523                           ; #config settings
   524                           
   525  0011                     __initialization:
   526                           
   527                           ; Clear objects allocated to COMMON
   528  0011  01F6               	clrf	__pbssCOMMON& (0+127)
   529  0012  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   530  0013  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   531  0014  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   532                           
   533                           ; Clear objects allocated to BANK0
   534  0015  1383               	bcf	3,7	;select IRP bank0
   535  0016  3020               	movlw	low __pbssBANK0
   536  0017  0084               	movwf	4
   537  0018  3036               	movlw	low (__pbssBANK0+22)
   538  0019  120A  118A  23D0  120A  118A  	fcall	clear_ram0
   539  001E                     end_of_initialization:	
   540                           ;End of C runtime variable initialization code
   541                           
   542  001E                     __end_of__initialization:
   543  001E  0183               	clrf	3
   544  001F  120A  118A  2822   	ljmp	_main	;jump to C main() function
   545                           
   546                           	psect	bssCOMMON
   547  0076                     __pbssCOMMON:
   548  0076                     _estado:
   549  0076                     	ds	2
   550  0078                     _rxCount:
   551  0078                     	ds	1
   552  0079                     _comunicacao:
   553  0079                     	ds	1
   554                           
   555                           	psect	bssBANK0
   556  0020                     __pbssBANK0:
   557  0020                     _rxBuffer:
   558  0020                     	ds	3
   559  0023                     _pwm_atual:
   560  0023                     	ds	2
   561  0025                     _pwm_setado:
   562  0025                     	ds	2
   563  0027                     _timer:
   564  0027                     	ds	2
   565  0029                     _timerbotao2:
   566  0029                     	ds	2
   567  002B                     _timerbotao1:
   568  002B                     	ds	2
   569  002D                     _estagio@main$F574:
   570  002D                     	ds	1
   571  002E                     _estagio@main$F453:
   572  002E                     	ds	1
   573  002F                     _estagio@main$F376:
   574  002F                     	ds	1
   575  0030                     _estagio:
   576  0030                     	ds	1
   577  0031                     _endereco:
   578  0031                     	ds	1
   579  0032                     _timerpwm:
   580  0032                     	ds	1
   581  0033                     _timerchaveNA:
   582  0033                     	ds	1
   583  0034                     _timerchaveNF:
   584  0034                     	ds	1
   585  0035                     _timerfimcurso:
   586  0035                     	ds	1
   587                           
   588                           	psect	clrtext
   589  03D0                     clear_ram0:	
   590                           ;	Called with FSR containing the base address, and
   591                           ;	W with the last address+1
   592                           
   593  03D0  0064               	clrwdt	;clear the watchdog before getting into this loop
   594  03D1                     clrloop0:
   595  03D1  0180               	clrf	0	;clear RAM location pointed to by FSR
   596  03D2  0A84               	incf	4,f	;increment pointer
   597  03D3  0604               	xorwf	4,w	;XOR with final address
   598  03D4  1903               	btfsc	3,2	;have we reached the end yet?
   599  03D5  3400               	retlw	0	;all done for this memory range, return
   600  03D6  0604               	xorwf	4,w	;XOR again to restore value
   601  03D7  2BD1               	goto	clrloop0	;do the next byte
   602                           
   603                           	psect	cstackCOMMON
   604  0070                     __pcstackCOMMON:
   605  0070                     ?_TMR0_ISR:
   606  0070                     ??_TMR0_ISR:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_USART_RX_ISR:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ??_USART_RX_ISR:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_PinManager_Initialize:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_TMR0_Initialize:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_PWM_Initialize:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_USART_Initialize:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_USART_Write:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_USART_RX_Clear_Buffer:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_USART_RX_Ready:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_USART_Read:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_InterruptManager:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_Interrupt_Enable:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_main:	
   646                           ; 1 bytes @ 0x0
   647                           
   648                           
   649                           ; 1 bytes @ 0x0
   650  0070                     	ds	1
   651  0071                     ??_InterruptManager:
   652                           
   653                           ; 1 bytes @ 0x1
   654  0071                     	ds	3
   655  0074                     ??_PinManager_Initialize:
   656  0074                     ??_TMR0_Initialize:	
   657                           ; 1 bytes @ 0x4
   658                           
   659  0074                     ??_USART_Initialize:	
   660                           ; 1 bytes @ 0x4
   661                           
   662  0074                     ?_PWM_LoadDutyValue:	
   663                           ; 1 bytes @ 0x4
   664                           
   665  0074                     ??_USART_Write:	
   666                           ; 1 bytes @ 0x4
   667                           
   668  0074                     ??_USART_RX_Clear_Buffer:	
   669                           ; 1 bytes @ 0x4
   670                           
   671  0074                     ??_USART_RX_Ready:	
   672                           ; 1 bytes @ 0x4
   673                           
   674  0074                     ??_USART_Read:	
   675                           ; 1 bytes @ 0x4
   676                           
   677  0074                     ??_Interrupt_Enable:	
   678                           ; 1 bytes @ 0x4
   679                           
   680  0074                     USART_Write@data:	
   681                           ; 1 bytes @ 0x4
   682                           
   683  0074                     PWM_LoadDutyValue@dutyValue:	
   684                           ; 1 bytes @ 0x4
   685                           
   686                           
   687                           ; 2 bytes @ 0x4
   688  0074                     	ds	1
   689  0075                     USART_Read@data:
   690                           
   691                           ; 1 bytes @ 0x5
   692  0075                     	ds	1
   693  0076                     ??_PWM_Initialize:
   694                           
   695                           	psect	cstackBANK0
   696  0036                     __pcstackBANK0:	
   697                           ; 1 bytes @ 0x6
   698                           
   699  0036                     ??_PWM_LoadDutyValue:
   700                           
   701                           ; 1 bytes @ 0x0
   702  0036                     	ds	2
   703  0038                     ??_main:
   704                           
   705                           ; 1 bytes @ 0x2
   706  0038                     	ds	2
   707                           
   708                           	psect	maintext
   709  0022                     __pmaintext:	
   710 ;;
   711 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   712 ;;
   713 ;; *************** function _main *****************
   714 ;; Defined at:
   715 ;;		line 19 in file "main.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;		None
   718 ;; Auto vars:     Size  Location     Type
   719 ;;		None
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   724 ;; Tracked objects:
   725 ;;		On entry : B00/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   729 ;;      Params:         0       0       0       0       0
   730 ;;      Locals:         0       0       0       0       0
   731 ;;      Temps:          0       2       0       0       0
   732 ;;      Totals:         0       2       0       0       0
   733 ;;Total ram usage:        2 bytes
   734 ;; Hardware stack levels required when called: 4
   735 ;; This function calls:
   736 ;;		_Interrupt_Enable
   737 ;;		_PWM_Initialize
   738 ;;		_PWM_LoadDutyValue
   739 ;;		_PinManager_Initialize
   740 ;;		_TMR0_Initialize
   741 ;;		_USART_Initialize
   742 ;;		_USART_RX_Clear_Buffer
   743 ;;		_USART_RX_Ready
   744 ;;		_USART_Read
   745 ;;		_USART_Write
   746 ;; This function is called by:
   747 ;;		Startup code after reset
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           
   752                           ;psect for function _main
   753  0022                     _main:
   754  0022                     l1709:	
   755                           ;incstack = 0
   756                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   757                           
   758                           
   759                           ;main.c: 21:     PinManager_Initialize();
   760  0022  120A  118A  2391  120A  118A  	fcall	_PinManager_Initialize
   761                           
   762                           ;main.c: 22:     TMR0_Initialize();
   763  0027  120A  118A  23C6  120A  118A  	fcall	_TMR0_Initialize
   764                           
   765                           ;main.c: 23:     PWM_Initialize();
   766  002C  120A  118A  237C  120A  118A  	fcall	_PWM_Initialize
   767                           
   768                           ;main.c: 24:     USART_Initialize();
   769  0031  120A  118A  23A3  120A  118A  	fcall	_USART_Initialize
   770  0036                     l1711:
   771                           
   772                           ;main.c: 25:     Interrupt_Enable();
   773  0036  120A  118A  23D8  120A  118A  	fcall	_Interrupt_Enable
   774  003B                     l1713:
   775                           
   776                           ;main.c: 27:     estagio = INTERROMPIDO;
   777  003B  1283               	bcf	3,5	;RP0=0, select bank0
   778  003C  1303               	bcf	3,6	;RP1=0, select bank0
   779  003D  01B0               	clrf	_estagio
   780  003E                     l1715:
   781                           
   782                           ;main.c: 28:     estado.botao1 = 0;
   783  003E  1076               	bcf	_estado,0
   784  003F                     l1717:
   785                           
   786                           ;main.c: 29:     estado.botao2 = 0;
   787  003F  10F6               	bcf	_estado,1
   788  0040                     l1719:
   789                           
   790                           ;main.c: 30:     estado.fimcurso = 0;
   791  0040  1176               	bcf	_estado,2
   792  0041                     l1721:
   793                           
   794                           ;main.c: 31:     estado.chaveNF = 0;
   795  0041  11F6               	bcf	_estado,3
   796  0042                     l1723:
   797                           
   798                           ;main.c: 32:     estado.chaveNA = 0;
   799  0042  1276               	bcf	_estado,4
   800  0043                     l1725:
   801                           
   802                           ;main.c: 33:     timerbotao1 = 0;
   803  0043  01AB               	clrf	_timerbotao1
   804  0044  01AC               	clrf	_timerbotao1+1
   805  0045                     l1727:
   806                           
   807                           ;main.c: 34:     timerbotao2 = 0;
   808  0045  01A9               	clrf	_timerbotao2
   809  0046  01AA               	clrf	_timerbotao2+1
   810  0047                     l1729:
   811                           
   812                           ;main.c: 35:     timerfimcurso = 0;
   813  0047  01B5               	clrf	_timerfimcurso
   814  0048                     l1731:
   815                           
   816                           ;main.c: 36:     timerchaveNF = 0;
   817  0048  01B4               	clrf	_timerchaveNF
   818  0049                     l1733:
   819                           
   820                           ;main.c: 37:     timerchaveNA = 0;
   821  0049  01B3               	clrf	_timerchaveNA
   822  004A                     l1735:
   823                           
   824                           ;main.c: 38:     timerpwm = 0;
   825  004A  01B2               	clrf	_timerpwm
   826  004B                     l1737:
   827                           
   828                           ;main.c: 39:     pwm_setado = 0;
   829  004B  01A5               	clrf	_pwm_setado
   830  004C  01A6               	clrf	_pwm_setado+1
   831  004D                     l80:	
   832                           ;main.c: 41:     while(1)
   833                           
   834  004D  0064               	clrwdt	;# 
   835  004E                     l1739:
   836                           
   837                           ;main.c: 45:         if(PORTBbits.RB0 == 0)
   838  004E  1283               	bcf	3,5	;RP0=0, select bank0
   839  004F  1303               	bcf	3,6	;RP1=0, select bank0
   840  0050  1806               	btfsc	6,0	;volatile
   841  0051  2853               	goto	u1081
   842  0052  2854               	goto	u1080
   843  0053                     u1081:
   844  0053  2863               	goto	l1747
   845  0054                     u1080:
   846  0054                     l1741:
   847                           
   848                           ;main.c: 46:         {;main.c: 47:             if(estado.botao1 == 0)
   849  0054  1876               	btfsc	_estado,0
   850  0055  2857               	goto	u1091
   851  0056  2858               	goto	u1090
   852  0057                     u1091:
   853  0057  2866               	goto	l1751
   854  0058                     u1090:
   855  0058                     l1743:
   856                           
   857                           ;main.c: 48:             {;main.c: 49:                 if(timerbotao1 > 100)
   858  0058  3000               	movlw	0
   859  0059  022C               	subwf	_timerbotao1+1,w
   860  005A  3065               	movlw	101
   861  005B  1903               	skipnz
   862  005C  022B               	subwf	_timerbotao1,w
   863  005D  1C03               	skipc
   864  005E  2860               	goto	u1101
   865  005F  2861               	goto	u1100
   866  0060                     u1101:
   867  0060  2866               	goto	l1751
   868  0061                     u1100:
   869  0061                     l1745:
   870                           
   871                           ;main.c: 50:                     estado.botao1 = 1;
   872  0061  1476               	bsf	_estado,0
   873  0062  2866               	goto	l1751
   874  0063                     l1747:
   875                           
   876                           ;main.c: 54:         {;main.c: 55:             timerbotao1 = 0;
   877  0063  01AB               	clrf	_timerbotao1
   878  0064  01AC               	clrf	_timerbotao1+1
   879  0065                     l1749:
   880                           
   881                           ;main.c: 56:             estado.botao1 = 0;
   882  0065  1076               	bcf	_estado,0
   883  0066                     l1751:
   884                           
   885                           ;main.c: 59:         if(PORTBbits.RB1 == 0)
   886  0066  1886               	btfsc	6,1	;volatile
   887  0067  2869               	goto	u1111
   888  0068  286A               	goto	u1110
   889  0069                     u1111:
   890  0069  2879               	goto	l1759
   891  006A                     u1110:
   892  006A                     l1753:
   893                           
   894                           ;main.c: 60:         {;main.c: 61:             if(estado.botao2 == 0)
   895  006A  18F6               	btfsc	_estado,1
   896  006B  286D               	goto	u1121
   897  006C  286E               	goto	u1120
   898  006D                     u1121:
   899  006D  287C               	goto	l1763
   900  006E                     u1120:
   901  006E                     l1755:
   902                           
   903                           ;main.c: 62:             {;main.c: 63:                 if(timerbotao2 > 100)
   904  006E  3000               	movlw	0
   905  006F  022A               	subwf	_timerbotao2+1,w
   906  0070  3065               	movlw	101
   907  0071  1903               	skipnz
   908  0072  0229               	subwf	_timerbotao2,w
   909  0073  1C03               	skipc
   910  0074  2876               	goto	u1131
   911  0075  2877               	goto	u1130
   912  0076                     u1131:
   913  0076  287C               	goto	l1763
   914  0077                     u1130:
   915  0077                     l1757:
   916                           
   917                           ;main.c: 64:                     estado.botao2 = 1;
   918  0077  14F6               	bsf	_estado,1
   919  0078  287C               	goto	l1763
   920  0079                     l1759:
   921                           
   922                           ;main.c: 68:         {;main.c: 69:             timerbotao2 = 0;
   923  0079  01A9               	clrf	_timerbotao2
   924  007A  01AA               	clrf	_timerbotao2+1
   925  007B                     l1761:
   926                           
   927                           ;main.c: 70:             estado.botao2 = 0;
   928  007B  10F6               	bcf	_estado,1
   929  007C                     l1763:
   930                           
   931                           ;main.c: 73:         if(PORTBbits.RB2 == 0)
   932  007C  1906               	btfsc	6,2	;volatile
   933  007D  287F               	goto	u1141
   934  007E  2880               	goto	u1140
   935  007F                     u1141:
   936  007F  288C               	goto	l1771
   937  0080                     u1140:
   938  0080                     l1765:
   939                           
   940                           ;main.c: 74:         {;main.c: 75:             if(estado.fimcurso == 0)
   941  0080  1976               	btfsc	_estado,2
   942  0081  2883               	goto	u1151
   943  0082  2884               	goto	u1150
   944  0083                     u1151:
   945  0083  288E               	goto	l1775
   946  0084                     u1150:
   947  0084                     l1767:
   948                           
   949                           ;main.c: 76:             {;main.c: 77:                 if(timerfimcurso > 100)
   950  0084  3065               	movlw	101
   951  0085  0235               	subwf	_timerfimcurso,w
   952  0086  1C03               	skipc
   953  0087  2889               	goto	u1161
   954  0088  288A               	goto	u1160
   955  0089                     u1161:
   956  0089  288E               	goto	l1775
   957  008A                     u1160:
   958  008A                     l1769:
   959                           
   960                           ;main.c: 78:                     estado.fimcurso = 1;
   961  008A  1576               	bsf	_estado,2
   962  008B  288E               	goto	l1775
   963  008C                     l1771:
   964                           
   965                           ;main.c: 82:         {;main.c: 83:             timerfimcurso = 0;
   966  008C  01B5               	clrf	_timerfimcurso
   967  008D                     l1773:
   968                           
   969                           ;main.c: 84:             estado.fimcurso = 0;
   970  008D  1176               	bcf	_estado,2
   971  008E                     l1775:
   972                           
   973                           ;main.c: 87:         if(PORTBbits.RB3 == 0)
   974  008E  1986               	btfsc	6,3	;volatile
   975  008F  2891               	goto	u1171
   976  0090  2892               	goto	u1170
   977  0091                     u1171:
   978  0091  289E               	goto	l1783
   979  0092                     u1170:
   980  0092                     l1777:
   981                           
   982                           ;main.c: 88:         {;main.c: 89:             if(estado.chaveNF == 0)
   983  0092  19F6               	btfsc	_estado,3
   984  0093  2895               	goto	u1181
   985  0094  2896               	goto	u1180
   986  0095                     u1181:
   987  0095  28A0               	goto	l1787
   988  0096                     u1180:
   989  0096                     l1779:
   990                           
   991                           ;main.c: 90:             {;main.c: 91:                 if(timerchaveNF > 100)
   992  0096  3065               	movlw	101
   993  0097  0234               	subwf	_timerchaveNF,w
   994  0098  1C03               	skipc
   995  0099  289B               	goto	u1191
   996  009A  289C               	goto	u1190
   997  009B                     u1191:
   998  009B  28A0               	goto	l1787
   999  009C                     u1190:
  1000  009C                     l1781:
  1001                           
  1002                           ;main.c: 92:                     estado.chaveNF = 1;
  1003  009C  15F6               	bsf	_estado,3
  1004  009D  28A0               	goto	l1787
  1005  009E                     l1783:
  1006                           
  1007                           ;main.c: 96:         {;main.c: 97:             timerchaveNF = 0;
  1008  009E  01B4               	clrf	_timerchaveNF
  1009  009F                     l1785:
  1010                           
  1011                           ;main.c: 98:             estado.chaveNF = 0;
  1012  009F  11F6               	bcf	_estado,3
  1013  00A0                     l1787:
  1014                           
  1015                           ;main.c: 101:         if(PORTBbits.RB4 == 0)
  1016  00A0  1A06               	btfsc	6,4	;volatile
  1017  00A1  28A3               	goto	u1201
  1018  00A2  28A4               	goto	u1200
  1019  00A3                     u1201:
  1020  00A3  28B0               	goto	l1795
  1021  00A4                     u1200:
  1022  00A4                     l1789:
  1023                           
  1024                           ;main.c: 102:         {;main.c: 103:             if(estado.chaveNA == 0)
  1025  00A4  1A76               	btfsc	_estado,4
  1026  00A5  28A7               	goto	u1211
  1027  00A6  28A8               	goto	u1210
  1028  00A7                     u1211:
  1029  00A7  28B2               	goto	l1799
  1030  00A8                     u1210:
  1031  00A8                     l1791:
  1032                           
  1033                           ;main.c: 104:             {;main.c: 105:                 if(timerchaveNA > 100)
  1034  00A8  3065               	movlw	101
  1035  00A9  0233               	subwf	_timerchaveNA,w
  1036  00AA  1C03               	skipc
  1037  00AB  28AD               	goto	u1221
  1038  00AC  28AE               	goto	u1220
  1039  00AD                     u1221:
  1040  00AD  28B2               	goto	l1799
  1041  00AE                     u1220:
  1042  00AE                     l1793:
  1043                           
  1044                           ;main.c: 106:                     estado.chaveNA = 1;
  1045  00AE  1676               	bsf	_estado,4
  1046  00AF  28B2               	goto	l1799
  1047  00B0                     l1795:
  1048                           
  1049                           ;main.c: 110:         {;main.c: 111:             timerchaveNA = 0;
  1050  00B0  01B3               	clrf	_timerchaveNA
  1051  00B1                     l1797:
  1052                           
  1053                           ;main.c: 112:             estado.chaveNA = 0;
  1054  00B1  1276               	bcf	_estado,4
  1055  00B2                     l1799:
  1056                           
  1057                           ;main.c: 115:         if(pwm_setado == 150)
  1058  00B2  3096               	movlw	150
  1059  00B3  0625               	xorwf	_pwm_setado,w
  1060  00B4  0426               	iorwf	_pwm_setado+1,w
  1061  00B5  1D03               	btfss	3,2
  1062  00B6  28B8               	goto	u1231
  1063  00B7  28B9               	goto	u1230
  1064  00B8                     u1231:
  1065  00B8  28C8               	goto	l1805
  1066  00B9                     u1230:
  1067  00B9                     l1801:
  1068                           
  1069                           ;main.c: 116:         {;main.c: 117:             PWM_LoadDutyValue(150);
  1070  00B9  3096               	movlw	150
  1071  00BA  00F4               	movwf	PWM_LoadDutyValue@dutyValue
  1072  00BB  3000               	movlw	0
  1073  00BC  00F5               	movwf	PWM_LoadDutyValue@dutyValue+1
  1074  00BD  120A  118A  2360  120A  118A  	fcall	_PWM_LoadDutyValue
  1075  00C2                     l1803:
  1076                           
  1077                           ;main.c: 118:             pwm_atual = 150;
  1078  00C2  3096               	movlw	150
  1079  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  1080  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  1081  00C5  00A3               	movwf	_pwm_atual
  1082  00C6  3000               	movlw	0
  1083  00C7  00A4               	movwf	_pwm_atual+1
  1084  00C8                     l1805:
  1085                           
  1086                           ;main.c: 120:         if(pwm_setado == 0)
  1087  00C8  0825               	movf	_pwm_setado,w
  1088  00C9  0426               	iorwf	_pwm_setado+1,w
  1089  00CA  1D03               	btfss	3,2
  1090  00CB  28CD               	goto	u1241
  1091  00CC  28CE               	goto	u1240
  1092  00CD                     u1241:
  1093  00CD  28DA               	goto	l1811
  1094  00CE                     u1240:
  1095  00CE                     l1807:
  1096                           
  1097                           ;main.c: 121:         {;main.c: 122:             PWM_LoadDutyValue(0);
  1098  00CE  3000               	movlw	0
  1099  00CF  00F4               	movwf	PWM_LoadDutyValue@dutyValue
  1100  00D0  00F5               	movwf	PWM_LoadDutyValue@dutyValue+1
  1101  00D1  120A  118A  2360  120A  118A  	fcall	_PWM_LoadDutyValue
  1102  00D6                     l1809:
  1103                           
  1104                           ;main.c: 123:             pwm_atual = 0;
  1105  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1106  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1107  00D8  01A3               	clrf	_pwm_atual
  1108  00D9  01A4               	clrf	_pwm_atual+1
  1109  00DA                     l1811:
  1110                           
  1111                           ;main.c: 125:         if(timerpwm > 10)
  1112  00DA  300B               	movlw	11
  1113  00DB  0232               	subwf	_timerpwm,w
  1114  00DC  1C03               	skipc
  1115  00DD  28DF               	goto	u1251
  1116  00DE  28E0               	goto	u1250
  1117  00DF                     u1251:
  1118  00DF  2A96               	goto	l1971
  1119  00E0                     u1250:
  1120  00E0                     l1813:
  1121                           
  1122                           ;main.c: 126:         {;main.c: 127:             timerpwm = 0;
  1123  00E0  01B2               	clrf	_timerpwm
  1124  00E1                     l1815:
  1125                           
  1126                           ;main.c: 128:             if(pwm_atual != pwm_setado)
  1127  00E1  0826               	movf	_pwm_setado+1,w
  1128  00E2  0624               	xorwf	_pwm_atual+1,w
  1129  00E3  1D03               	skipz
  1130  00E4  28E7               	goto	u1265
  1131  00E5  0825               	movf	_pwm_setado,w
  1132  00E6  0623               	xorwf	_pwm_atual,w
  1133  00E7                     u1265:
  1134  00E7  1903               	skipnz
  1135  00E8  28EA               	goto	u1261
  1136  00E9  28EB               	goto	u1260
  1137  00EA                     u1261:
  1138  00EA  2A96               	goto	l1971
  1139  00EB                     u1260:
  1140  00EB                     l1817:
  1141                           
  1142                           ;main.c: 129:             {;main.c: 130:                 if(pwm_atual < pwm_setado)
  1143  00EB  0826               	movf	_pwm_setado+1,w
  1144  00EC  0224               	subwf	_pwm_atual+1,w
  1145  00ED  1D03               	skipz
  1146  00EE  28F1               	goto	u1275
  1147  00EF  0825               	movf	_pwm_setado,w
  1148  00F0  0223               	subwf	_pwm_atual,w
  1149  00F1                     u1275:
  1150  00F1  1803               	skipnc
  1151  00F2  28F4               	goto	u1271
  1152  00F3  28F5               	goto	u1270
  1153  00F4                     u1271:
  1154  00F4  2905               	goto	l1823
  1155  00F5                     u1270:
  1156  00F5                     l1819:
  1157                           
  1158                           ;main.c: 131:                 {;main.c: 132:                     pwm_atual++;
  1159  00F5  3001               	movlw	1
  1160  00F6  07A3               	addwf	_pwm_atual,f
  1161  00F7  1803               	skipnc
  1162  00F8  0AA4               	incf	_pwm_atual+1,f
  1163  00F9  3000               	movlw	0
  1164  00FA  07A4               	addwf	_pwm_atual+1,f
  1165  00FB                     l1821:
  1166                           
  1167                           ;main.c: 133:                     PWM_LoadDutyValue(pwm_atual);
  1168  00FB  0824               	movf	_pwm_atual+1,w
  1169  00FC  00F5               	movwf	PWM_LoadDutyValue@dutyValue+1
  1170  00FD  0823               	movf	_pwm_atual,w
  1171  00FE  00F4               	movwf	PWM_LoadDutyValue@dutyValue
  1172  00FF  120A  118A  2360  120A  118A  	fcall	_PWM_LoadDutyValue
  1173                           
  1174                           ;main.c: 134:                 }
  1175  0104  2A96               	goto	l1971
  1176  0105                     l1823:
  1177                           
  1178                           ;main.c: 136:                 {;main.c: 137:                     pwm_atual--;
  1179  0105  3001               	movlw	1
  1180  0106  02A3               	subwf	_pwm_atual,f
  1181  0107  3000               	movlw	0
  1182  0108  1C03               	skipc
  1183  0109  03A4               	decf	_pwm_atual+1,f
  1184  010A  02A4               	subwf	_pwm_atual+1,f
  1185  010B  28FB               	goto	l1821
  1186  010C                     l1827:
  1187                           
  1188                           ;main.c: 146:             {;main.c: 147:                 if(timer > 500)
  1189  010C  3001               	movlw	1
  1190  010D  0228               	subwf	_timer+1,w
  1191  010E  30F5               	movlw	245
  1192  010F  1903               	skipnz
  1193  0110  0227               	subwf	_timer,w
  1194  0111  1C03               	skipc
  1195  0112  2914               	goto	u1281
  1196  0113  2915               	goto	u1280
  1197  0114                     u1281:
  1198  0114  2955               	goto	l1841
  1199  0115                     u1280:
  1200  0115                     l1829:
  1201                           
  1202                           ;main.c: 148:                 {;main.c: 149:                     timer = 0;
  1203  0115  01A7               	clrf	_timer
  1204  0116  01A8               	clrf	_timer+1
  1205  0117                     l1831:
  1206                           
  1207                           ;main.c: 150:                     PORTAbits.RA1 ^= 1;
  1208  0117  0C05               	rrf	5,w	;volatile
  1209  0118  3901               	andlw	1
  1210  0119  00B8               	movwf	??_main
  1211  011A  3001               	movlw	1
  1212  011B  06B8               	xorwf	??_main,f
  1213  011C  0DB8               	rlf	??_main,f
  1214  011D  0805               	movf	5,w	;volatile
  1215  011E  0638               	xorwf	??_main,w
  1216  011F  39FD               	andlw	-3
  1217  0120  0638               	xorwf	??_main,w
  1218  0121  0085               	movwf	5	;volatile
  1219  0122                     l1833:
  1220                           
  1221                           ;main.c: 151:                     PORTAbits.RA3 ^= 1;
  1222  0122  0C05               	rrf	5,w	;volatile
  1223  0123  00B8               	movwf	??_main
  1224  0124  0CB8               	rrf	??_main,f
  1225  0125  0C38               	rrf	??_main,w
  1226  0126  3901               	andlw	1
  1227  0127  00B8               	movwf	??_main
  1228  0128  3001               	movlw	1
  1229  0129  06B8               	xorwf	??_main,f
  1230  012A  0DB8               	rlf	??_main,f
  1231  012B  0DB8               	rlf	??_main,f
  1232  012C  0DB8               	rlf	??_main,f
  1233  012D  0805               	movf	5,w	;volatile
  1234  012E  0638               	xorwf	??_main,w
  1235  012F  39F7               	andlw	-9
  1236  0130  0638               	xorwf	??_main,w
  1237  0131  0085               	movwf	5	;volatile
  1238  0132                     l1835:
  1239                           
  1240                           ;main.c: 152:                     PORTAbits.RA2 ^= 1;
  1241  0132  0C05               	rrf	5,w	;volatile
  1242  0133  00B8               	movwf	??_main
  1243  0134  0C38               	rrf	??_main,w
  1244  0135  3901               	andlw	1
  1245  0136  00B8               	movwf	??_main
  1246  0137  3001               	movlw	1
  1247  0138  06B8               	xorwf	??_main,f
  1248  0139  0DB8               	rlf	??_main,f
  1249  013A  0DB8               	rlf	??_main,f
  1250  013B  0805               	movf	5,w	;volatile
  1251  013C  0638               	xorwf	??_main,w
  1252  013D  39FB               	andlw	-5
  1253  013E  0638               	xorwf	??_main,w
  1254  013F  0085               	movwf	5	;volatile
  1255  0140                     l1837:
  1256                           
  1257                           ;main.c: 153:                     PORTCbits.RC0 ^= 1;
  1258  0140  0807               	movf	7,w	;volatile
  1259  0141  3901               	andlw	1
  1260  0142  00B8               	movwf	??_main
  1261  0143  3001               	movlw	1
  1262  0144  06B8               	xorwf	??_main,f
  1263  0145  0807               	movf	7,w	;volatile
  1264  0146  0638               	xorwf	??_main,w
  1265  0147  39FE               	andlw	-2
  1266  0148  0638               	xorwf	??_main,w
  1267  0149  0087               	movwf	7	;volatile
  1268  014A                     l1839:
  1269                           
  1270                           ;main.c: 154:                     PORTCbits.RC1 ^= 1;
  1271  014A  0C07               	rrf	7,w	;volatile
  1272  014B  3901               	andlw	1
  1273  014C  00B8               	movwf	??_main
  1274  014D  3001               	movlw	1
  1275  014E  06B8               	xorwf	??_main,f
  1276  014F  0DB8               	rlf	??_main,f
  1277  0150  0807               	movf	7,w	;volatile
  1278  0151  0638               	xorwf	??_main,w
  1279  0152  39FD               	andlw	-3
  1280  0153  0638               	xorwf	??_main,w
  1281  0154  0087               	movwf	7	;volatile
  1282  0155                     l1841:
  1283                           
  1284                           ;main.c: 156:                 if((estado.botao1 == 1) && (estado.botao2 == 1))
  1285  0155  1C76               	btfss	_estado,0
  1286  0156  2958               	goto	u1291
  1287  0157  2959               	goto	u1290
  1288  0158                     u1291:
  1289  0158  284D               	goto	l80
  1290  0159                     u1290:
  1291  0159                     l1843:
  1292  0159  1CF6               	btfss	_estado,1
  1293  015A  295C               	goto	u1301
  1294  015B  295D               	goto	u1300
  1295  015C                     u1301:
  1296  015C  284D               	goto	l80
  1297  015D                     u1300:
  1298  015D                     l1845:
  1299                           
  1300                           ;main.c: 157:                     estagio = TESTE_BOTOES;
  1301  015D  01B0               	clrf	_estagio
  1302  015E  0AB0               	incf	_estagio,f
  1303  015F  284D               	goto	l80
  1304  0160                     l112:	
  1305                           ;main.c: 161:             case TESTE_BOTOES:
  1306                           
  1307                           
  1308                           ;main.c: 162:             {;main.c: 163:                 if((estado.botao1 == 1) && (est
      +                          ado.botao2 == 1))
  1309  0160  1C76               	btfss	_estado,0
  1310  0161  2963               	goto	u1311
  1311  0162  2964               	goto	u1310
  1312  0163                     u1311:
  1313  0163  297E               	goto	l1855
  1314  0164                     u1310:
  1315  0164                     l1847:
  1316  0164  1CF6               	btfss	_estado,1
  1317  0165  2967               	goto	u1321
  1318  0166  2968               	goto	u1320
  1319  0167                     u1321:
  1320  0167  297E               	goto	l1855
  1321  0168                     u1320:
  1322  0168                     l1849:
  1323                           
  1324                           ;main.c: 164:                 {;main.c: 165:                     if((timerbotao1 < 500) 
      +                          && (timerbotao2 < 500))
  1325  0168  3001               	movlw	1
  1326  0169  022C               	subwf	_timerbotao1+1,w
  1327  016A  30F4               	movlw	244
  1328  016B  1903               	skipnz
  1329  016C  022B               	subwf	_timerbotao1,w
  1330  016D  1803               	skipnc
  1331  016E  2970               	goto	u1331
  1332  016F  2971               	goto	u1330
  1333  0170                     u1331:
  1334  0170  297E               	goto	l1855
  1335  0171                     u1330:
  1336  0171                     l1851:
  1337  0171  3001               	movlw	1
  1338  0172  022A               	subwf	_timerbotao2+1,w
  1339  0173  30F4               	movlw	244
  1340  0174  1903               	skipnz
  1341  0175  0229               	subwf	_timerbotao2,w
  1342  0176  1803               	skipnc
  1343  0177  2979               	goto	u1341
  1344  0178  297A               	goto	u1340
  1345  0179                     u1341:
  1346  0179  297E               	goto	l1855
  1347  017A                     u1340:
  1348  017A                     l1853:
  1349                           
  1350                           ;main.c: 166:                         estagio = INICIA_TESTE;
  1351  017A  3002               	movlw	2
  1352  017B  00B8               	movwf	??_main
  1353  017C  0838               	movf	??_main,w
  1354  017D  00B0               	movwf	_estagio
  1355  017E                     l1855:
  1356                           
  1357                           ;main.c: 168:                 if(estado.chaveNF == 1)
  1358  017E  1DF6               	btfss	_estado,3
  1359  017F  2981               	goto	u1351
  1360  0180  2982               	goto	u1350
  1361  0181                     u1351:
  1362  0181  2988               	goto	l115
  1363  0182                     u1350:
  1364  0182                     l1857:
  1365                           
  1366                           ;main.c: 169:                 {;main.c: 170:                     if(estado.tipo != 1)
  1367  0182  1AF6               	btfsc	_estado,5
  1368  0183  2985               	goto	u1361
  1369  0184  2986               	goto	u1360
  1370  0185                     u1361:
  1371  0185  2AD2               	goto	l111
  1372  0186                     u1360:
  1373  0186                     l1859:
  1374                           
  1375                           ;main.c: 171:                         estado.tipo = 1;
  1376  0186  16F6               	bsf	_estado,5
  1377  0187  284D               	goto	l80
  1378  0188                     l115:	
  1379                           ;main.c: 173:                 else
  1380                           
  1381                           
  1382                           ;main.c: 174:                 {;main.c: 175:                     if(estado.tipo != 0)
  1383  0188  1EF6               	btfss	_estado,5
  1384  0189  298B               	goto	u1371
  1385  018A  298C               	goto	u1370
  1386  018B                     u1371:
  1387  018B  2AD2               	goto	l111
  1388  018C                     u1370:
  1389  018C                     l1861:
  1390                           
  1391                           ;main.c: 176:                         estado.tipo = 0;
  1392  018C  12F6               	bcf	_estado,5
  1393  018D  284D               	goto	l80
  1394  018E                     l119:	
  1395                           ;main.c: 181:             case INICIA_TESTE:
  1396                           
  1397                           
  1398                           ;main.c: 182:             {;main.c: 183:                 PORTAbits.RA1 = 0;
  1399  018E  1085               	bcf	5,1	;volatile
  1400                           
  1401                           ;main.c: 184:                 PORTAbits.RA3 = 0;
  1402  018F  1185               	bcf	5,3	;volatile
  1403                           
  1404                           ;main.c: 185:                 PORTAbits.RA2 = 1;
  1405  0190  1505               	bsf	5,2	;volatile
  1406                           
  1407                           ;main.c: 186:                 PORTAbits.RA0 = 0;
  1408  0191  1005               	bcf	5,0	;volatile
  1409                           
  1410                           ;main.c: 187:                 PORTAbits.RA5 = 1;
  1411  0192  1685               	bsf	5,5	;volatile
  1412                           
  1413                           ;main.c: 188:                 estado.reteste = 0;
  1414  0193  1376               	bcf	_estado,6
  1415                           
  1416                           ;main.c: 189:                 estado.falha = 0;
  1417  0194  13F6               	bcf	_estado,7
  1418  0195                     l1863:
  1419                           
  1420                           ;main.c: 190:                 endereco = 0;
  1421  0195  01B1               	clrf	_endereco
  1422                           
  1423                           ;main.c: 191:                 timer = 0;
  1424  0196  01A7               	clrf	_timer
  1425  0197  01A8               	clrf	_timer+1
  1426  0198                     l1865:
  1427                           
  1428                           ;main.c: 192:                 estagio = TESTE_TAMPA_FECHADA;
  1429  0198  3003               	movlw	3
  1430  0199  00B8               	movwf	??_main
  1431  019A  0838               	movf	??_main,w
  1432  019B  00B0               	movwf	_estagio
  1433                           
  1434                           ;main.c: 193:             };main.c: 194:             break;
  1435  019C  284D               	goto	l80
  1436  019D                     l1867:
  1437                           
  1438                           ;main.c: 197:             {;main.c: 198:                 if(timer > 5000)
  1439  019D  3013               	movlw	19
  1440  019E  0228               	subwf	_timer+1,w
  1441  019F  3089               	movlw	137
  1442  01A0  1903               	skipnz
  1443  01A1  0227               	subwf	_timer,w
  1444  01A2  1C03               	skipc
  1445  01A3  29A5               	goto	u1381
  1446  01A4  29A6               	goto	u1380
  1447  01A5                     u1381:
  1448  01A5  29AB               	goto	l121
  1449  01A6                     u1380:
  1450  01A6                     l1869:
  1451                           
  1452                           ;main.c: 199:                     estagio = FALHA;
  1453  01A6  300D               	movlw	13
  1454  01A7  00B8               	movwf	??_main
  1455  01A8  0838               	movf	??_main,w
  1456  01A9  00B0               	movwf	_estagio
  1457  01AA  284D               	goto	l80
  1458  01AB                     l121:	
  1459                           ;main.c: 200:                 else
  1460                           
  1461                           
  1462                           ;main.c: 201:                 {;main.c: 202:                     if(estado.fimcurso == 1
      +                          )
  1463  01AB  1D76               	btfss	_estado,2
  1464  01AC  29AE               	goto	u1391
  1465  01AD  29AF               	goto	u1390
  1466  01AE                     u1391:
  1467  01AE  2AD2               	goto	l111
  1468  01AF                     u1390:
  1469  01AF                     l1871:
  1470                           
  1471                           ;main.c: 203:                         estagio = ALIMENTA_PLACA;
  1472  01AF  3004               	movlw	4
  1473  01B0  00B8               	movwf	??_main
  1474  01B1  0838               	movf	??_main,w
  1475  01B2  00B0               	movwf	_estagio
  1476  01B3  284D               	goto	l80
  1477  01B4                     l124:	
  1478                           ;main.c: 208:             case ALIMENTA_PLACA:
  1479                           
  1480                           
  1481                           ;main.c: 209:             {;main.c: 210:                 PORTCbits.RC5 = 1;
  1482  01B4  1687               	bsf	7,5	;volatile
  1483  01B5                     l1873:
  1484                           
  1485                           ;main.c: 211:                 pwm_setado = 150;
  1486  01B5  3096               	movlw	150
  1487  01B6  00A5               	movwf	_pwm_setado
  1488  01B7  3000               	movlw	0
  1489  01B8  00A6               	movwf	_pwm_setado+1
  1490  01B9                     l1875:
  1491                           
  1492                           ;main.c: 212:                 comunicacao.endereco = 0;
  1493  01B9  30F0               	movlw	-16
  1494  01BA  05F9               	andwf	_comunicacao,f
  1495  01BB                     l1877:
  1496                           
  1497                           ;main.c: 213:                 comunicacao.resposta = 5;
  1498  01BB  0879               	movf	_comunicacao,w
  1499  01BC  391F               	andlw	-225
  1500  01BD  38A0               	iorlw	160
  1501  01BE  00F9               	movwf	_comunicacao
  1502  01BF                     l1879:
  1503                           
  1504                           ;main.c: 214:                 USART_Write(comunicacao.byte);
  1505  01BF  0879               	movf	_comunicacao,w
  1506  01C0  120A  118A  23BC  120A  118A  	fcall	_USART_Write
  1507  01C5                     l1881:
  1508                           
  1509                           ;main.c: 215:                 timer = 0;
  1510  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  1511  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  1512  01C7  01A7               	clrf	_timer
  1513  01C8  01A8               	clrf	_timer+1
  1514  01C9                     l1883:
  1515                           
  1516                           ;main.c: 216:                 estagio = ESTABILIZACAO;
  1517  01C9  3005               	movlw	5
  1518  01CA  00B8               	movwf	??_main
  1519  01CB  0838               	movf	??_main,w
  1520  01CC  00B0               	movwf	_estagio
  1521                           
  1522                           ;main.c: 217:             };main.c: 218:             break;
  1523  01CD  284D               	goto	l80
  1524  01CE                     l1885:
  1525                           
  1526                           ;main.c: 221:             {;main.c: 222:                 if(timer > 1000)
  1527  01CE  3003               	movlw	3
  1528  01CF  0228               	subwf	_timer+1,w
  1529  01D0  30E9               	movlw	233
  1530  01D1  1903               	skipnz
  1531  01D2  0227               	subwf	_timer,w
  1532  01D3  1C03               	skipc
  1533  01D4  29D6               	goto	u1401
  1534  01D5  29D7               	goto	u1400
  1535  01D6                     u1401:
  1536  01D6  284D               	goto	l80
  1537  01D7                     u1400:
  1538  01D7                     l1887:
  1539                           
  1540                           ;main.c: 223:                     estagio = TESTE_LIGA;
  1541  01D7  3006               	movlw	6
  1542  01D8  00B8               	movwf	??_main
  1543  01D9  0838               	movf	??_main,w
  1544  01DA  00B0               	movwf	_estagio
  1545  01DB  284D               	goto	l80
  1546  01DC                     l1889:
  1547                           
  1548                           ;main.c: 228:             {;main.c: 229:                 pwm_setado = 80;
  1549  01DC  3050               	movlw	80
  1550  01DD  00A5               	movwf	_pwm_setado
  1551  01DE  3000               	movlw	0
  1552  01DF  00A6               	movwf	_pwm_setado+1
  1553  01E0                     l1891:
  1554                           
  1555                           ;main.c: 230:                 timer = 0;
  1556  01E0  01A7               	clrf	_timer
  1557  01E1  01A8               	clrf	_timer+1
  1558  01E2                     l1893:
  1559                           
  1560                           ;main.c: 231:                 estagio = AGUARDA_TEMPO_LIGA;
  1561  01E2  3007               	movlw	7
  1562  01E3  00B8               	movwf	??_main
  1563  01E4  0838               	movf	??_main,w
  1564  01E5  00B0               	movwf	_estagio
  1565                           
  1566                           ;main.c: 232:             };main.c: 233:             break;
  1567  01E6  284D               	goto	l80
  1568  01E7                     l1895:
  1569                           
  1570                           ;main.c: 236:             {;main.c: 237:                 if(timer > 5000)
  1571  01E7  3013               	movlw	19
  1572  01E8  0228               	subwf	_timer+1,w
  1573  01E9  3089               	movlw	137
  1574  01EA  1903               	skipnz
  1575  01EB  0227               	subwf	_timer,w
  1576  01EC  1C03               	skipc
  1577  01ED  29EF               	goto	u1411
  1578  01EE  29F0               	goto	u1410
  1579  01EF                     u1411:
  1580  01EF  284D               	goto	l80
  1581  01F0                     u1410:
  1582  01F0                     l1897:
  1583                           
  1584                           ;main.c: 238:                 {;main.c: 239:                     if(estado.reteste == 1)
  1585  01F0  1F76               	btfss	_estado,6
  1586  01F1  29F3               	goto	u1421
  1587  01F2  29F4               	goto	u1420
  1588  01F3                     u1421:
  1589  01F3  29F9               	goto	l1901
  1590  01F4                     u1420:
  1591  01F4                     l1899:
  1592                           
  1593                           ;main.c: 240:                         estagio = VERIFICA_PLACAS;
  1594  01F4  300B               	movlw	11
  1595  01F5  00B8               	movwf	??_main
  1596  01F6  0838               	movf	??_main,w
  1597  01F7  00B0               	movwf	_estagio
  1598  01F8  284D               	goto	l80
  1599  01F9                     l1901:
  1600                           
  1601                           ;main.c: 242:                         estagio = TESTE_DESLIGA;
  1602  01F9  3008               	movlw	8
  1603  01FA  00B8               	movwf	??_main
  1604  01FB  0838               	movf	??_main,w
  1605  01FC  00B0               	movwf	_estagio
  1606  01FD  284D               	goto	l80
  1607  01FE                     l1903:
  1608                           
  1609                           ;main.c: 248:             {;main.c: 249:                 pwm_setado = 120;
  1610  01FE  3078               	movlw	120
  1611  01FF  00A5               	movwf	_pwm_setado
  1612  0200  3000               	movlw	0
  1613  0201  00A6               	movwf	_pwm_setado+1
  1614  0202                     l1905:
  1615                           
  1616                           ;main.c: 250:                 timer = 0;
  1617  0202  01A7               	clrf	_timer
  1618  0203  01A8               	clrf	_timer+1
  1619  0204                     l1907:
  1620                           
  1621                           ;main.c: 251:                 estagio = AGUARDA_TEMPO_DESLIGA;
  1622  0204  3009               	movlw	9
  1623  0205  00B8               	movwf	??_main
  1624  0206  0838               	movf	??_main,w
  1625  0207  00B0               	movwf	_estagio
  1626                           
  1627                           ;main.c: 252:             };main.c: 253:             break;
  1628  0208  284D               	goto	l80
  1629  0209                     l1909:
  1630                           
  1631                           ;main.c: 256:             {;main.c: 257:                 if(timer > 6000)
  1632  0209  3017               	movlw	23
  1633  020A  0228               	subwf	_timer+1,w
  1634  020B  3071               	movlw	113
  1635  020C  1903               	skipnz
  1636  020D  0227               	subwf	_timer,w
  1637  020E  1C03               	skipc
  1638  020F  2A11               	goto	u1431
  1639  0210  2A12               	goto	u1430
  1640  0211                     u1431:
  1641  0211  284D               	goto	l80
  1642  0212                     u1430:
  1643  0212                     l1911:
  1644                           
  1645                           ;main.c: 258:                     estagio = RETESTE;
  1646  0212  300A               	movlw	10
  1647  0213  00B8               	movwf	??_main
  1648  0214  0838               	movf	??_main,w
  1649  0215  00B0               	movwf	_estagio
  1650  0216  284D               	goto	l80
  1651  0217                     l135:	
  1652                           ;main.c: 262:             case RETESTE:
  1653                           
  1654                           
  1655                           ;main.c: 263:             {;main.c: 264:                 estado.reteste = 1;
  1656  0217  1776               	bsf	_estado,6
  1657  0218  29D7               	goto	l1887
  1658  0219                     l1915:
  1659                           
  1660                           ;main.c: 270:             {;main.c: 271:                 endereco++;
  1661  0219  3001               	movlw	1
  1662  021A  00B8               	movwf	??_main
  1663  021B  0838               	movf	??_main,w
  1664  021C  07B1               	addwf	_endereco,f
  1665  021D                     l1917:
  1666                           
  1667                           ;main.c: 272:                 if(endereco < 10)
  1668  021D  300A               	movlw	10
  1669  021E  0231               	subwf	_endereco,w
  1670  021F  1803               	skipnc
  1671  0220  2A22               	goto	u1441
  1672  0221  2A23               	goto	u1440
  1673  0222                     u1441:
  1674  0222  2A3E               	goto	l137
  1675  0223                     u1440:
  1676  0223                     l1919:
  1677                           
  1678                           ;main.c: 273:                 {;main.c: 274:                     timer = 0;
  1679  0223  01A7               	clrf	_timer
  1680  0224  01A8               	clrf	_timer+1
  1681  0225                     l1921:
  1682                           
  1683                           ;main.c: 275:                     USART_RX_Clear_Buffer();
  1684  0225  120A  118A  23DD  120A  118A  	fcall	_USART_RX_Clear_Buffer
  1685  022A                     l1923:
  1686                           
  1687                           ;main.c: 276:                     comunicacao.endereco = endereco;
  1688  022A  0879               	movf	_comunicacao,w
  1689  022B  1283               	bcf	3,5	;RP0=0, select bank0
  1690  022C  1303               	bcf	3,6	;RP1=0, select bank0
  1691  022D  0631               	xorwf	_endereco,w
  1692  022E  39F0               	andlw	-16
  1693  022F  0631               	xorwf	_endereco,w
  1694  0230  00F9               	movwf	_comunicacao
  1695  0231                     l1925:
  1696                           
  1697                           ;main.c: 277:                     USART_Write(comunicacao.byte);
  1698  0231  0879               	movf	_comunicacao,w
  1699  0232  120A  118A  23BC  120A  118A  	fcall	_USART_Write
  1700  0237                     l1927:
  1701                           
  1702                           ;main.c: 278:                     estagio = MENSAGEM_RETORNO;
  1703  0237  300C               	movlw	12
  1704  0238  1283               	bcf	3,5	;RP0=0, select bank0
  1705  0239  1303               	bcf	3,6	;RP1=0, select bank0
  1706  023A  00B8               	movwf	??_main
  1707  023B  0838               	movf	??_main,w
  1708  023C  00B0               	movwf	_estagio
  1709                           
  1710                           ;main.c: 279:                 }
  1711  023D  284D               	goto	l80
  1712  023E                     l137:	
  1713                           ;main.c: 280:                 else
  1714                           
  1715                           
  1716                           ;main.c: 281:                 {;main.c: 282:                     if(estado.falha == 1)
  1717  023E  1FF6               	btfss	_estado,7
  1718  023F  2A41               	goto	u1451
  1719  0240  2A42               	goto	u1450
  1720  0241                     u1451:
  1721  0241  2A43               	goto	l1931
  1722  0242                     u1450:
  1723  0242  29A6               	goto	l1869
  1724  0243                     l1931:
  1725                           
  1726                           ;main.c: 285:                         estagio = OK;
  1727  0243  300E               	movlw	14
  1728  0244  00B8               	movwf	??_main
  1729  0245  0838               	movf	??_main,w
  1730  0246  00B0               	movwf	_estagio
  1731  0247  284D               	goto	l80
  1732  0248                     l1933:
  1733                           
  1734                           ;main.c: 291:             {;main.c: 292:                 if(timer > 80)
  1735  0248  3000               	movlw	0
  1736  0249  0228               	subwf	_timer+1,w
  1737  024A  3051               	movlw	81
  1738  024B  1903               	skipnz
  1739  024C  0227               	subwf	_timer,w
  1740  024D  1C03               	skipc
  1741  024E  2A50               	goto	u1461
  1742  024F  2A51               	goto	u1460
  1743  0250                     u1461:
  1744  0250  2A53               	goto	l1939
  1745  0251                     u1460:
  1746  0251                     l1935:
  1747                           
  1748                           ;main.c: 293:                 {;main.c: 294:                     estado.falha = 1;
  1749  0251  17F6               	bsf	_estado,7
  1750  0252  29F4               	goto	l1899
  1751  0253                     l1939:
  1752                           
  1753                           ;main.c: 298:                 {;main.c: 299:                     if(USART_RX_Ready() == 
      +                          1)
  1754  0253  120A  118A  23DB  120A  118A  	fcall	_USART_RX_Ready
  1755  0258  3A01               	xorlw	1
  1756  0259  1D03               	skipz
  1757  025A  2A5C               	goto	u1471
  1758  025B  2A5D               	goto	u1470
  1759  025C                     u1471:
  1760  025C  2AD2               	goto	l111
  1761  025D                     u1470:
  1762  025D                     l1941:
  1763                           
  1764                           ;main.c: 300:                     {;main.c: 301:                         comunicacao.byt
      +                          e = USART_Read();
  1765  025D  120A  118A  23B0  120A  118A  	fcall	_USART_Read
  1766  0262  1283               	bcf	3,5	;RP0=0, select bank0
  1767  0263  1303               	bcf	3,6	;RP1=0, select bank0
  1768  0264  00B8               	movwf	??_main
  1769  0265  0838               	movf	??_main,w
  1770  0266  00F9               	movwf	_comunicacao
  1771  0267                     l1943:
  1772                           
  1773                           ;main.c: 302:                         if(comunicacao.endereco == endereco)
  1774  0267  0879               	movf	_comunicacao,w
  1775  0268  390F               	andlw	15
  1776  0269  0631               	xorwf	_endereco,w
  1777  026A  1D03               	skipz
  1778  026B  2A6D               	goto	u1481
  1779  026C  2A6E               	goto	u1480
  1780  026D                     u1481:
  1781  026D  2A51               	goto	l1935
  1782  026E                     u1480:
  1783  026E                     l1945:
  1784                           
  1785                           ;main.c: 303:                         {;main.c: 304:                             if(comu
      +                          nicacao.resposta != 3)
  1786  026E  0E79               	swapf	_comunicacao,w
  1787  026F  00B8               	movwf	??_main
  1788  0270  0C38               	rrf	??_main,w
  1789  0271  3907               	andlw	7
  1790  0272  3A03               	xorlw	3
  1791  0273  1903               	skipnz
  1792  0274  2A76               	goto	u1491
  1793  0275  2A77               	goto	u1490
  1794  0276                     u1491:
  1795  0276  29F4               	goto	l1899
  1796  0277                     u1490:
  1797  0277  2A51               	goto	l1935
  1798  0278                     l1951:
  1799                           
  1800                           ;main.c: 316:             {;main.c: 317:                 pwm_setado = 0;
  1801  0278  01A5               	clrf	_pwm_setado
  1802  0279  01A6               	clrf	_pwm_setado+1
  1803  027A                     l1953:
  1804                           
  1805                           ;main.c: 318:                 PORTAbits.RA1 = 1;
  1806  027A  1485               	bsf	5,1	;volatile
  1807  027B                     l1955:
  1808                           
  1809                           ;main.c: 319:                 PORTAbits.RA0 = 1;
  1810  027B  1405               	bsf	5,0	;volatile
  1811                           
  1812                           ;main.c: 320:                 timer = 0;
  1813  027C  01A7               	clrf	_timer
  1814  027D  01A8               	clrf	_timer+1
  1815  027E                     l1957:
  1816                           
  1817                           ;main.c: 321:                 estagio = TESTE_FINALIZADO;
  1818  027E  300F               	movlw	15
  1819  027F  00B8               	movwf	??_main
  1820  0280  0838               	movf	??_main,w
  1821  0281  00B0               	movwf	_estagio
  1822                           
  1823                           ;main.c: 322:             };main.c: 323:             break;
  1824  0282  284D               	goto	l80
  1825  0283                     l1959:
  1826                           
  1827                           ;main.c: 326:             {;main.c: 327:                 pwm_setado = 0;
  1828  0283  01A5               	clrf	_pwm_setado
  1829  0284  01A6               	clrf	_pwm_setado+1
  1830  0285                     l1961:
  1831                           
  1832                           ;main.c: 328:                 PORTAbits.RA3 = 1;
  1833  0285  1585               	bsf	5,3	;volatile
  1834  0286  2A7E               	goto	l1957
  1835  0287                     l1965:
  1836                           
  1837                           ;main.c: 334:             {;main.c: 335:                 if(timer > 2000)
  1838  0287  3007               	movlw	7
  1839  0288  0228               	subwf	_timer+1,w
  1840  0289  30D1               	movlw	209
  1841  028A  1903               	skipnz
  1842  028B  0227               	subwf	_timer,w
  1843  028C  1C03               	skipc
  1844  028D  2A8F               	goto	u1501
  1845  028E  2A90               	goto	u1500
  1846  028F                     u1501:
  1847  028F  2A93               	goto	l151
  1848  0290                     u1500:
  1849  0290                     l1967:
  1850                           
  1851                           ;main.c: 336:                 {;main.c: 337:                     PORTAbits.RA0 = 0;
  1852  0290  1005               	bcf	5,0	;volatile
  1853                           
  1854                           ;main.c: 338:                     estagio = TESTE_BOTOES;
  1855  0291  01B0               	clrf	_estagio
  1856  0292  0AB0               	incf	_estagio,f
  1857  0293                     l151:	
  1858                           ;main.c: 339:                 }
  1859                           
  1860                           
  1861                           ;main.c: 340:                 PORTCbits.RC5 = 0;
  1862  0293  1287               	bcf	7,5	;volatile
  1863                           
  1864                           ;main.c: 341:                 PORTAbits.RA5 = 0;
  1865  0294  1285               	bcf	5,5	;volatile
  1866                           
  1867                           ;main.c: 342:             };main.c: 343:             break;
  1868  0295  284D               	goto	l80
  1869  0296                     l1971:
  1870  0296  1283               	bcf	3,5	;RP0=0, select bank0
  1871  0297  1303               	bcf	3,6	;RP1=0, select bank0
  1872  0298  0830               	movf	_estagio,w
  1873  0299  00B8               	movwf	??_main
  1874  029A  01B9               	clrf	??_main+1
  1875                           
  1876                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1877                           ; Switch size 1, requested type "simple"
  1878                           ; Number of cases is 1, Range of values is 0 to 0
  1879                           ; switch strategies available:
  1880                           ; Name         Instructions Cycles
  1881                           ; simple_byte            4     3 (average)
  1882                           ; direct_byte           11     8 (fixed)
  1883                           ; jumptable            260     6 (fixed)
  1884                           ;	Chosen strategy is simple_byte
  1885  029B  0839               	movf	??_main+1,w
  1886  029C  3A00               	xorlw	0	; case 0
  1887  029D  1903               	skipnz
  1888  029E  2AA0               	goto	l2009
  1889  029F  284D               	goto	l80
  1890  02A0                     l2009:
  1891                           
  1892                           ; Switch size 1, requested type "simple"
  1893                           ; Number of cases is 16, Range of values is 0 to 15
  1894                           ; switch strategies available:
  1895                           ; Name         Instructions Cycles
  1896                           ; simple_byte           49    25 (average)
  1897                           ; direct_byte           56     8 (fixed)
  1898                           ; jumptable            260     6 (fixed)
  1899                           ;	Chosen strategy is simple_byte
  1900  02A0  0838               	movf	??_main,w
  1901  02A1  3A00               	xorlw	0	; case 0
  1902  02A2  1903               	skipnz
  1903  02A3  290C               	goto	l1827
  1904  02A4  3A01               	xorlw	1	; case 1
  1905  02A5  1903               	skipnz
  1906  02A6  2960               	goto	l112
  1907  02A7  3A03               	xorlw	3	; case 2
  1908  02A8  1903               	skipnz
  1909  02A9  298E               	goto	l119
  1910  02AA  3A01               	xorlw	1	; case 3
  1911  02AB  1903               	skipnz
  1912  02AC  299D               	goto	l1867
  1913  02AD  3A07               	xorlw	7	; case 4
  1914  02AE  1903               	skipnz
  1915  02AF  29B4               	goto	l124
  1916  02B0  3A01               	xorlw	1	; case 5
  1917  02B1  1903               	skipnz
  1918  02B2  29CE               	goto	l1885
  1919  02B3  3A03               	xorlw	3	; case 6
  1920  02B4  1903               	skipnz
  1921  02B5  29DC               	goto	l1889
  1922  02B6  3A01               	xorlw	1	; case 7
  1923  02B7  1903               	skipnz
  1924  02B8  29E7               	goto	l1895
  1925  02B9  3A0F               	xorlw	15	; case 8
  1926  02BA  1903               	skipnz
  1927  02BB  29FE               	goto	l1903
  1928  02BC  3A01               	xorlw	1	; case 9
  1929  02BD  1903               	skipnz
  1930  02BE  2A09               	goto	l1909
  1931  02BF  3A03               	xorlw	3	; case 10
  1932  02C0  1903               	skipnz
  1933  02C1  2A17               	goto	l135
  1934  02C2  3A01               	xorlw	1	; case 11
  1935  02C3  1903               	skipnz
  1936  02C4  2A19               	goto	l1915
  1937  02C5  3A07               	xorlw	7	; case 12
  1938  02C6  1903               	skipnz
  1939  02C7  2A48               	goto	l1933
  1940  02C8  3A01               	xorlw	1	; case 13
  1941  02C9  1903               	skipnz
  1942  02CA  2A78               	goto	l1951
  1943  02CB  3A03               	xorlw	3	; case 14
  1944  02CC  1903               	skipnz
  1945  02CD  2A83               	goto	l1959
  1946  02CE  3A01               	xorlw	1	; case 15
  1947  02CF  1903               	skipnz
  1948  02D0  2A87               	goto	l1965
  1949  02D1  284D               	goto	l80
  1950  02D2                     l111:
  1951  02D2  284D               	goto	l80
  1952  02D3  120A  118A  280E   	ljmp	start
  1953  02D6                     __end_of_main:
  1954                           
  1955                           	psect	text1
  1956  03BC                     __ptext1:	
  1957 ;; *************** function _USART_Write *****************
  1958 ;; Defined at:
  1959 ;;		line 51 in file "usart.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  data            1    wreg     unsigned char 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;  data            1    4[COMMON] unsigned char 
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      void 
  1966 ;; Registers used:
  1967 ;;		wreg
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1973 ;;      Params:         0       0       0       0       0
  1974 ;;      Locals:         1       0       0       0       0
  1975 ;;      Temps:          0       0       0       0       0
  1976 ;;      Totals:         1       0       0       0       0
  1977 ;;Total ram usage:        1 bytes
  1978 ;; Hardware stack levels used: 1
  1979 ;; Hardware stack levels required when called: 2
  1980 ;; This function calls:
  1981 ;;		Nothing
  1982 ;; This function is called by:
  1983 ;;		_main
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           
  1988                           ;psect for function _USART_Write
  1989  03BC                     _USART_Write:
  1990                           
  1991                           ;incstack = 0
  1992                           ; Regs used in _USART_Write: [wreg]
  1993                           ;USART_Write@data stored from wreg
  1994  03BC  00F4               	movwf	USART_Write@data
  1995  03BD                     l1373:
  1996  03BD                     l319:	
  1997                           ;usart.c: 54:     {;usart.c: 55:     }
  1998                           
  1999                           
  2000                           ;usart.c: 53:     while(PIR1bits.TXIF == 0)
  2001  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  2002  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  2003  03BF  1E0C               	btfss	12,4	;volatile
  2004  03C0  2BC2               	goto	u591
  2005  03C1  2BC3               	goto	u590
  2006  03C2                     u591:
  2007  03C2  2BBD               	goto	l319
  2008  03C3                     u590:
  2009  03C3                     l1375:
  2010                           
  2011                           ;usart.c: 56:     TXREG = data;
  2012  03C3  0874               	movf	USART_Write@data,w
  2013  03C4  0099               	movwf	25	;volatile
  2014  03C5                     l322:
  2015  03C5  0008               	return
  2016  03C6                     __end_of_USART_Write:
  2017                           
  2018                           	psect	text2
  2019  03B0                     __ptext2:	
  2020 ;; *************** function _USART_Read *****************
  2021 ;; Defined at:
  2022 ;;		line 42 in file "usart.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;		None
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;  data            1    5[COMMON] unsigned char 
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  1    wreg      unsigned char 
  2029 ;; Registers used:
  2030 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2036 ;;      Params:         0       0       0       0       0
  2037 ;;      Locals:         1       0       0       0       0
  2038 ;;      Temps:          1       0       0       0       0
  2039 ;;      Totals:         2       0       0       0       0
  2040 ;;Total ram usage:        2 bytes
  2041 ;; Hardware stack levels used: 1
  2042 ;; Hardware stack levels required when called: 2
  2043 ;; This function calls:
  2044 ;;		Nothing
  2045 ;; This function is called by:
  2046 ;;		_main
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           
  2051                           ;psect for function _USART_Read
  2052  03B0                     _USART_Read:
  2053  03B0                     l1383:	
  2054                           ;incstack = 0
  2055                           ; Regs used in _USART_Read: [wreg-fsr0h+status,2+status,0]
  2056                           
  2057                           
  2058                           ;usart.c: 44:     unsigned char data;;usart.c: 46:     rxCount--;
  2059  03B0  3001               	movlw	1
  2060  03B1  02F8               	subwf	_rxCount,f	;volatile
  2061  03B2                     l1385:
  2062                           
  2063                           ;usart.c: 47:     data = rxBuffer[rxCount];
  2064  03B2  0878               	movf	_rxCount,w
  2065  03B3  3E20               	addlw	(low (_rxBuffer| 0))& (0+255)
  2066  03B4  0084               	movwf	4
  2067  03B5  1383               	bcf	3,7	;select IRP bank0
  2068  03B6  0800               	movf	0,w
  2069  03B7  00F4               	movwf	??_USART_Read
  2070  03B8  0874               	movf	??_USART_Read,w
  2071  03B9  00F5               	movwf	USART_Read@data
  2072  03BA                     l1387:
  2073                           
  2074                           ;usart.c: 48:     return data;
  2075  03BA  0875               	movf	USART_Read@data,w
  2076  03BB                     l316:
  2077  03BB  0008               	return
  2078  03BC                     __end_of_USART_Read:
  2079                           
  2080                           	psect	text3
  2081  03DB                     __ptext3:	
  2082 ;; *************** function _USART_RX_Ready *****************
  2083 ;; Defined at:
  2084 ;;		line 37 in file "usart.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;		None
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;		None
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1    wreg      unsigned char 
  2091 ;; Registers used:
  2092 ;;		wreg
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2098 ;;      Params:         0       0       0       0       0
  2099 ;;      Locals:         0       0       0       0       0
  2100 ;;      Temps:          0       0       0       0       0
  2101 ;;      Totals:         0       0       0       0       0
  2102 ;;Total ram usage:        0 bytes
  2103 ;; Hardware stack levels used: 1
  2104 ;; Hardware stack levels required when called: 2
  2105 ;; This function calls:
  2106 ;;		Nothing
  2107 ;; This function is called by:
  2108 ;;		_main
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           
  2113                           ;psect for function _USART_RX_Ready
  2114  03DB                     _USART_RX_Ready:
  2115  03DB                     l1379:	
  2116                           ;incstack = 0
  2117                           ; Regs used in _USART_RX_Ready: [wreg]
  2118                           
  2119                           
  2120                           ;usart.c: 39:     return rxCount;
  2121  03DB  0878               	movf	_rxCount,w	;volatile
  2122  03DC                     l313:
  2123  03DC  0008               	return
  2124  03DD                     __end_of_USART_RX_Ready:
  2125                           
  2126                           	psect	text4
  2127  03DD                     __ptext4:	
  2128 ;; *************** function _USART_RX_Clear_Buffer *****************
  2129 ;; Defined at:
  2130 ;;		line 59 in file "usart.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;		None
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;		None
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      void 
  2137 ;; Registers used:
  2138 ;;		status,2
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2144 ;;      Params:         0       0       0       0       0
  2145 ;;      Locals:         0       0       0       0       0
  2146 ;;      Temps:          0       0       0       0       0
  2147 ;;      Totals:         0       0       0       0       0
  2148 ;;Total ram usage:        0 bytes
  2149 ;; Hardware stack levels used: 1
  2150 ;; Hardware stack levels required when called: 2
  2151 ;; This function calls:
  2152 ;;		Nothing
  2153 ;; This function is called by:
  2154 ;;		_main
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           
  2159                           ;psect for function _USART_RX_Clear_Buffer
  2160  03DD                     _USART_RX_Clear_Buffer:
  2161  03DD                     l1377:	
  2162                           ;incstack = 0
  2163                           ; Regs used in _USART_RX_Clear_Buffer: [status,2]
  2164                           
  2165                           
  2166                           ;usart.c: 61:     rxCount = 0;
  2167  03DD  01F8               	clrf	_rxCount	;volatile
  2168  03DE                     l325:
  2169  03DE  0008               	return
  2170  03DF                     __end_of_USART_RX_Clear_Buffer:
  2171                           
  2172                           	psect	text5
  2173  03A3                     __ptext5:	
  2174 ;; *************** function _USART_Initialize *****************
  2175 ;; Defined at:
  2176 ;;		line 9 in file "usart.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;		None
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;		None
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  1    wreg      void 
  2183 ;; Registers used:
  2184 ;;		wreg, status,2
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2190 ;;      Params:         0       0       0       0       0
  2191 ;;      Locals:         0       0       0       0       0
  2192 ;;      Temps:          0       0       0       0       0
  2193 ;;      Totals:         0       0       0       0       0
  2194 ;;Total ram usage:        0 bytes
  2195 ;; Hardware stack levels used: 1
  2196 ;; Hardware stack levels required when called: 2
  2197 ;; This function calls:
  2198 ;;		Nothing
  2199 ;; This function is called by:
  2200 ;;		_main
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           
  2205                           ;psect for function _USART_Initialize
  2206  03A3                     _USART_Initialize:
  2207  03A3                     l1367:	
  2208                           ;incstack = 0
  2209                           ; Regs used in _USART_Initialize: [wreg+status,2]
  2210                           
  2211                           
  2212                           ;usart.c: 11:     RCSTA = 0b10010000;
  2213  03A3  3090               	movlw	144
  2214  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  2215  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  2216  03A6  0098               	movwf	24	;volatile
  2217                           
  2218                           ;usart.c: 12:     TXSTA = 0b00100000;
  2219  03A7  3020               	movlw	32
  2220  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  2221  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  2222  03AA  0098               	movwf	24	;volatile
  2223                           
  2224                           ;usart.c: 15:     SPBRG = 0x81;
  2225  03AB  3081               	movlw	129
  2226  03AC  0099               	movwf	25	;volatile
  2227  03AD                     l1369:
  2228                           
  2229                           ;usart.c: 17:     rxCount = 0;
  2230  03AD  01F8               	clrf	_rxCount	;volatile
  2231  03AE                     l1371:
  2232                           
  2233                           ;usart.c: 19:     PIE1bits.RCIE = 1;
  2234  03AE  168C               	bsf	12,5	;volatile
  2235  03AF                     l305:
  2236  03AF  0008               	return
  2237  03B0                     __end_of_USART_Initialize:
  2238                           
  2239                           	psect	text6
  2240  03C6                     __ptext6:	
  2241 ;; *************** function _TMR0_Initialize *****************
  2242 ;; Defined at:
  2243 ;;		line 4 in file "tmr0.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;		None
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;		None
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  1    wreg      void 
  2250 ;; Registers used:
  2251 ;;		wreg
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2257 ;;      Params:         0       0       0       0       0
  2258 ;;      Locals:         0       0       0       0       0
  2259 ;;      Temps:          0       0       0       0       0
  2260 ;;      Totals:         0       0       0       0       0
  2261 ;;Total ram usage:        0 bytes
  2262 ;; Hardware stack levels used: 1
  2263 ;; Hardware stack levels required when called: 2
  2264 ;; This function calls:
  2265 ;;		Nothing
  2266 ;; This function is called by:
  2267 ;;		_main
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           
  2272                           ;psect for function _TMR0_Initialize
  2273  03C6                     _TMR0_Initialize:
  2274  03C6                     l1359:	
  2275                           ;incstack = 0
  2276                           ; Regs used in _TMR0_Initialize: [wreg]
  2277                           
  2278                           
  2279                           ;tmr0.c: 7:     OPTION_REG = 0b00000100;
  2280  03C6  3004               	movlw	4
  2281  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  2282  03C8  1303               	bcf	3,6	;RP1=0, select bank1
  2283  03C9  0081               	movwf	1	;volatile
  2284                           
  2285                           ;tmr0.c: 8:     TMR0 = 0x64;
  2286  03CA  3064               	movlw	100
  2287  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  2288  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  2289  03CD  0081               	movwf	1	;volatile
  2290  03CE                     l1361:
  2291                           
  2292                           ;tmr0.c: 10:     INTCONbits.T0IE = 1;
  2293  03CE  168B               	bsf	11,5	;volatile
  2294  03CF                     l251:
  2295  03CF  0008               	return
  2296  03D0                     __end_of_TMR0_Initialize:
  2297                           
  2298                           	psect	text7
  2299  0391                     __ptext7:	
  2300 ;; *************** function _PinManager_Initialize *****************
  2301 ;; Defined at:
  2302 ;;		line 3 in file "pin_manager.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;		None
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;		None
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      void 
  2309 ;; Registers used:
  2310 ;;		wreg, status,2
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2316 ;;      Params:         0       0       0       0       0
  2317 ;;      Locals:         0       0       0       0       0
  2318 ;;      Temps:          0       0       0       0       0
  2319 ;;      Totals:         0       0       0       0       0
  2320 ;;Total ram usage:        0 bytes
  2321 ;; Hardware stack levels used: 1
  2322 ;; Hardware stack levels required when called: 2
  2323 ;; This function calls:
  2324 ;;		Nothing
  2325 ;; This function is called by:
  2326 ;;		_main
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           
  2331                           ;psect for function _PinManager_Initialize
  2332  0391                     _PinManager_Initialize:
  2333  0391                     l1347:	
  2334                           ;incstack = 0
  2335                           ; Regs used in _PinManager_Initialize: [wreg+status,2]
  2336                           
  2337                           
  2338                           ;pin_manager.c: 5:     PORTA = 0b00000000;
  2339  0391  1283               	bcf	3,5	;RP0=0, select bank0
  2340  0392  1303               	bcf	3,6	;RP1=0, select bank0
  2341  0393  0185               	clrf	5	;volatile
  2342                           
  2343                           ;pin_manager.c: 6:     PORTB = 0b00000000;
  2344  0394  0186               	clrf	6	;volatile
  2345                           
  2346                           ;pin_manager.c: 7:     PORTC = 0b00000000;
  2347  0395  0187               	clrf	7	;volatile
  2348  0396                     l1349:
  2349                           
  2350                           ;pin_manager.c: 9:     TRISA = 0b11010000;
  2351  0396  30D0               	movlw	208
  2352  0397  1683               	bsf	3,5	;RP0=1, select bank1
  2353  0398  1303               	bcf	3,6	;RP1=0, select bank1
  2354  0399  0085               	movwf	5	;volatile
  2355  039A                     l1351:
  2356                           
  2357                           ;pin_manager.c: 10:     TRISB = 0b11111111;
  2358  039A  30FF               	movlw	255
  2359  039B  0086               	movwf	6	;volatile
  2360  039C                     l1353:
  2361                           
  2362                           ;pin_manager.c: 11:     TRISC = 0b10011000;
  2363  039C  3098               	movlw	152
  2364  039D  0087               	movwf	7	;volatile
  2365  039E                     l1355:
  2366                           
  2367                           ;pin_manager.c: 13:     ADCON1 = 0b00000110;
  2368  039E  3006               	movlw	6
  2369  039F  009F               	movwf	31	;volatile
  2370  03A0                     l1357:
  2371                           
  2372                           ;pin_manager.c: 15:     OPTION_REG = 0b00000111;
  2373  03A0  3007               	movlw	7
  2374  03A1  0081               	movwf	1	;volatile
  2375  03A2                     l200:
  2376  03A2  0008               	return
  2377  03A3                     __end_of_PinManager_Initialize:
  2378                           
  2379                           	psect	text8
  2380  037C                     __ptext8:	
  2381 ;; *************** function _PWM_Initialize *****************
  2382 ;; Defined at:
  2383 ;;		line 3 in file "pwm.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;		None
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;		None
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      void 
  2390 ;; Registers used:
  2391 ;;		wreg, status,2, status,0, pclath, cstack
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2397 ;;      Params:         0       0       0       0       0
  2398 ;;      Locals:         0       0       0       0       0
  2399 ;;      Temps:          0       0       0       0       0
  2400 ;;      Totals:         0       0       0       0       0
  2401 ;;Total ram usage:        0 bytes
  2402 ;; Hardware stack levels used: 1
  2403 ;; Hardware stack levels required when called: 3
  2404 ;; This function calls:
  2405 ;;		_PWM_LoadDutyValue
  2406 ;; This function is called by:
  2407 ;;		_main
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           
  2412                           ;psect for function _PWM_Initialize
  2413  037C                     _PWM_Initialize:
  2414  037C                     l1705:	
  2415                           ;incstack = 0
  2416                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2417                           
  2418                           
  2419                           ;pwm.c: 5:  CCP1CON = 0b00001111;
  2420  037C  300F               	movlw	15
  2421  037D  1283               	bcf	3,5	;RP0=0, select bank0
  2422  037E  1303               	bcf	3,6	;RP1=0, select bank0
  2423  037F  0097               	movwf	23	;volatile
  2424                           
  2425                           ;pwm.c: 8:     PR2 = 0xFF;
  2426  0380  30FF               	movlw	255
  2427  0381  1683               	bsf	3,5	;RP0=1, select bank1
  2428  0382  1303               	bcf	3,6	;RP1=0, select bank1
  2429  0383  0092               	movwf	18	;volatile
  2430                           
  2431                           ;pwm.c: 9:     T2CON = 0b00000100;
  2432  0384  3004               	movlw	4
  2433  0385  1283               	bcf	3,5	;RP0=0, select bank0
  2434  0386  1303               	bcf	3,6	;RP1=0, select bank0
  2435  0387  0092               	movwf	18	;volatile
  2436  0388                     l1707:
  2437                           
  2438                           ;pwm.c: 11:     PWM_LoadDutyValue(0);
  2439  0388  3000               	movlw	0
  2440  0389  00F4               	movwf	PWM_LoadDutyValue@dutyValue
  2441  038A  00F5               	movwf	PWM_LoadDutyValue@dutyValue+1
  2442  038B  120A  118A  2360  120A  118A  	fcall	_PWM_LoadDutyValue
  2443  0390                     l213:
  2444  0390  0008               	return
  2445  0391                     __end_of_PWM_Initialize:
  2446                           
  2447                           	psect	text9
  2448  0360                     __ptext9:	
  2449 ;; *************** function _PWM_LoadDutyValue *****************
  2450 ;; Defined at:
  2451 ;;		line 14 in file "pwm.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  dutyValue       2    4[COMMON] unsigned int 
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;		None
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  1    wreg      void 
  2458 ;; Registers used:
  2459 ;;		wreg, status,2, status,0
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2465 ;;      Params:         2       0       0       0       0
  2466 ;;      Locals:         0       0       0       0       0
  2467 ;;      Temps:          0       2       0       0       0
  2468 ;;      Totals:         2       2       0       0       0
  2469 ;;Total ram usage:        4 bytes
  2470 ;; Hardware stack levels used: 1
  2471 ;; Hardware stack levels required when called: 2
  2472 ;; This function calls:
  2473 ;;		Nothing
  2474 ;; This function is called by:
  2475 ;;		_main
  2476 ;;		_PWM_Initialize
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           
  2481                           ;psect for function _PWM_LoadDutyValue
  2482  0360                     _PWM_LoadDutyValue:
  2483  0360                     l1703:	
  2484                           ;incstack = 0
  2485                           ; Regs used in _PWM_LoadDutyValue: [wreg+status,2+status,0]
  2486                           
  2487                           
  2488                           ;pwm.c: 14: void PWM_LoadDutyValue(unsigned int dutyValue);pwm.c: 15: {;pwm.c: 16:     C
      +                          CPR1L = ((dutyValue & 0x03FC)>>2);
  2489  0360  0875               	movf	PWM_LoadDutyValue@dutyValue+1,w
  2490  0361  1283               	bcf	3,5	;RP0=0, select bank0
  2491  0362  1303               	bcf	3,6	;RP1=0, select bank0
  2492  0363  00B7               	movwf	??_PWM_LoadDutyValue+1
  2493  0364  0874               	movf	PWM_LoadDutyValue@dutyValue,w
  2494  0365  00B6               	movwf	??_PWM_LoadDutyValue
  2495  0366  1003               	clrc
  2496  0367  0CB7               	rrf	??_PWM_LoadDutyValue+1,f
  2497  0368  0CB6               	rrf	??_PWM_LoadDutyValue,f
  2498  0369  1003               	clrc
  2499  036A  0CB7               	rrf	??_PWM_LoadDutyValue+1,f
  2500  036B  0CB6               	rrf	??_PWM_LoadDutyValue,f
  2501  036C  0836               	movf	??_PWM_LoadDutyValue,w
  2502  036D  0095               	movwf	21	;volatile
  2503                           
  2504                           ;pwm.c: 17:     CCP1CON = ((unsigned char)(CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4));
  2505  036E  0874               	movf	PWM_LoadDutyValue@dutyValue,w
  2506  036F  3903               	andlw	3
  2507  0370  00B6               	movwf	??_PWM_LoadDutyValue
  2508  0371  3004               	movlw	4
  2509  0372                     u1075:
  2510  0372  1003               	clrc
  2511  0373  0DB6               	rlf	??_PWM_LoadDutyValue,f
  2512  0374  3EFF               	addlw	-1
  2513  0375  1D03               	skipz
  2514  0376  2B72               	goto	u1075
  2515  0377  0817               	movf	23,w	;volatile
  2516  0378  39CF               	andlw	207
  2517  0379  0436               	iorwf	??_PWM_LoadDutyValue,w
  2518  037A  0097               	movwf	23	;volatile
  2519  037B                     l216:
  2520  037B  0008               	return
  2521  037C                     __end_of_PWM_LoadDutyValue:
  2522                           
  2523                           	psect	text10
  2524  03D8                     __ptext10:	
  2525 ;; *************** function _Interrupt_Enable *****************
  2526 ;; Defined at:
  2527 ;;		line 15 in file "interrupt_manager.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;		None
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;		None
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  1    wreg      void 
  2534 ;; Registers used:
  2535 ;;		None
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2541 ;;      Params:         0       0       0       0       0
  2542 ;;      Locals:         0       0       0       0       0
  2543 ;;      Temps:          0       0       0       0       0
  2544 ;;      Totals:         0       0       0       0       0
  2545 ;;Total ram usage:        0 bytes
  2546 ;; Hardware stack levels used: 1
  2547 ;; Hardware stack levels required when called: 2
  2548 ;; This function calls:
  2549 ;;		Nothing
  2550 ;; This function is called by:
  2551 ;;		_main
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           
  2556                           ;psect for function _Interrupt_Enable
  2557  03D8                     _Interrupt_Enable:
  2558  03D8                     l1345:	
  2559                           ;incstack = 0
  2560                           ; Regs used in _Interrupt_Enable: []
  2561                           
  2562                           
  2563                           ;interrupt_manager.c: 17:     INTCONbits.GIE = 1;
  2564  03D8  178B               	bsf	11,7	;volatile
  2565                           
  2566                           ;interrupt_manager.c: 18:     INTCONbits.PEIE = 1;
  2567  03D9  170B               	bsf	11,6	;volatile
  2568  03DA                     l20:
  2569  03DA  0008               	return
  2570  03DB                     __end_of_Interrupt_Enable:
  2571                           
  2572                           	psect	text11
  2573  0318                     __ptext11:	
  2574 ;; *************** function _InterruptManager *****************
  2575 ;; Defined at:
  2576 ;;		line 6 in file "interrupt_manager.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;		None
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;		None
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2590 ;;      Params:         0       0       0       0       0
  2591 ;;      Locals:         0       0       0       0       0
  2592 ;;      Temps:          3       0       0       0       0
  2593 ;;      Totals:         3       0       0       0       0
  2594 ;;Total ram usage:        3 bytes
  2595 ;; Hardware stack levels used: 1
  2596 ;; Hardware stack levels required when called: 1
  2597 ;; This function calls:
  2598 ;;		_TMR0_ISR
  2599 ;;		_USART_RX_ISR
  2600 ;; This function is called by:
  2601 ;;		Interrupt level 1
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           
  2606                           ;psect for function _InterruptManager
  2607  0318                     _InterruptManager:
  2608  0318                     i1l1391:
  2609                           
  2610                           ;interrupt_manager.c: 8:     if(INTCONbits.T0IE == 1 && INTCONbits.T0IF == 1)
  2611  0318  1E8B               	btfss	11,5	;volatile
  2612  0319  2B1B               	goto	u60_21
  2613  031A  2B1C               	goto	u60_20
  2614  031B                     u60_21:
  2615  031B  2B25               	goto	i1l1397
  2616  031C                     u60_20:
  2617  031C                     i1l1393:
  2618  031C  1D0B               	btfss	11,2	;volatile
  2619  031D  2B1F               	goto	u61_21
  2620  031E  2B20               	goto	u61_20
  2621  031F                     u61_21:
  2622  031F  2B25               	goto	i1l1397
  2623  0320                     u61_20:
  2624  0320                     i1l1395:
  2625                           
  2626                           ;interrupt_manager.c: 9:         TMR0_ISR();
  2627  0320  120A  118A  22D6  120A  118A  	fcall	_TMR0_ISR
  2628  0325                     i1l1397:
  2629                           
  2630                           ;interrupt_manager.c: 11:     if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  2631  0325  1683               	bsf	3,5	;RP0=1, select bank1
  2632  0326  1303               	bcf	3,6	;RP1=0, select bank1
  2633  0327  1E8C               	btfss	12,5	;volatile
  2634  0328  2B2A               	goto	u62_21
  2635  0329  2B2B               	goto	u62_20
  2636  032A                     u62_21:
  2637  032A  2B36               	goto	i1l17
  2638  032B                     u62_20:
  2639  032B                     i1l1399:
  2640  032B  1283               	bcf	3,5	;RP0=0, select bank0
  2641  032C  1303               	bcf	3,6	;RP1=0, select bank0
  2642  032D  1E8C               	btfss	12,5	;volatile
  2643  032E  2B30               	goto	u63_21
  2644  032F  2B31               	goto	u63_20
  2645  0330                     u63_21:
  2646  0330  2B36               	goto	i1l17
  2647  0331                     u63_20:
  2648  0331                     i1l1401:
  2649                           
  2650                           ;interrupt_manager.c: 12:         USART_RX_ISR();
  2651  0331  120A  118A  233F  120A  118A  	fcall	_USART_RX_ISR
  2652  0336                     i1l17:
  2653  0336  0873               	movf	??_InterruptManager+2,w
  2654  0337  008A               	movwf	10
  2655  0338  0872               	movf	??_InterruptManager+1,w
  2656  0339  0084               	movwf	4
  2657  033A  0E71               	swapf	??_InterruptManager,w
  2658  033B  0083               	movwf	3
  2659  033C  0EFE               	swapf	btemp,f
  2660  033D  0E7E               	swapf	btemp,w
  2661  033E  0009               	retfie
  2662  033F                     __end_of_InterruptManager:
  2663                           
  2664                           	psect	intentry
  2665  0004                     __pintentry:	
  2666                           ;incstack = 0
  2667                           ; Regs used in _InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2668                           
  2669  0004                     interrupt_function:
  2670  007E                     saved_w	set	btemp
  2671  0004  00FE               	movwf	btemp
  2672  0005  0E03               	swapf	3,w
  2673  0006  00F1               	movwf	??_InterruptManager
  2674  0007  0804               	movf	4,w
  2675  0008  00F2               	movwf	??_InterruptManager+1
  2676  0009  080A               	movf	10,w
  2677  000A  00F3               	movwf	??_InterruptManager+2
  2678  000B  120A  118A  2B18   	ljmp	_InterruptManager
  2679                           
  2680                           	psect	text12
  2681  033F                     __ptext12:	
  2682 ;; *************** function _USART_RX_ISR *****************
  2683 ;; Defined at:
  2684 ;;		line 22 in file "usart.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;		None
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;		None
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  1    wreg      void 
  2691 ;; Registers used:
  2692 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2698 ;;      Params:         0       0       0       0       0
  2699 ;;      Locals:         0       0       0       0       0
  2700 ;;      Temps:          1       0       0       0       0
  2701 ;;      Totals:         1       0       0       0       0
  2702 ;;Total ram usage:        1 bytes
  2703 ;; Hardware stack levels used: 1
  2704 ;; This function calls:
  2705 ;;		Nothing
  2706 ;; This function is called by:
  2707 ;;		_InterruptManager
  2708 ;; This function uses a non-reentrant model
  2709 ;;
  2710                           
  2711                           
  2712                           ;psect for function _USART_RX_ISR
  2713  033F                     _USART_RX_ISR:
  2714  033F                     i1l1329:	
  2715                           ;incstack = 0
  2716                           ; Regs used in _USART_RX_ISR: [wreg-fsr0h+status,2+status,0]
  2717                           
  2718                           
  2719                           ;usart.c: 24:     rxBuffer[rxCount] = RCREG;
  2720  033F  1283               	bcf	3,5	;RP0=0, select bank0
  2721  0340  1303               	bcf	3,6	;RP1=0, select bank0
  2722  0341  081A               	movf	26,w	;volatile
  2723  0342  00F0               	movwf	??_USART_RX_ISR
  2724  0343  0878               	movf	_rxCount,w
  2725  0344  3E20               	addlw	(low (_rxBuffer| 0))& (0+255)
  2726  0345  0084               	movwf	4
  2727  0346  0870               	movf	??_USART_RX_ISR,w
  2728  0347  1383               	bcf	3,7	;select IRP bank0
  2729  0348  0080               	movwf	0
  2730  0349                     i1l1331:
  2731                           
  2732                           ;usart.c: 25:     rxCount++;
  2733  0349  3001               	movlw	1
  2734  034A  00F0               	movwf	??_USART_RX_ISR
  2735  034B  0870               	movf	??_USART_RX_ISR,w
  2736  034C  07F8               	addwf	_rxCount,f	;volatile
  2737  034D                     i1l1333:
  2738                           
  2739                           ;usart.c: 26:     if(rxCount >= 3)
  2740  034D  3003               	movlw	3
  2741  034E  0278               	subwf	_rxCount,w	;volatile
  2742  034F  1C03               	skipc
  2743  0350  2B52               	goto	u57_21
  2744  0351  2B53               	goto	u57_20
  2745  0352                     u57_21:
  2746  0352  2B57               	goto	i1l1337
  2747  0353                     u57_20:
  2748  0353                     i1l1335:
  2749                           
  2750                           ;usart.c: 27:         rxCount = 3 - 1;
  2751  0353  3002               	movlw	2
  2752  0354  00F0               	movwf	??_USART_RX_ISR
  2753  0355  0870               	movf	??_USART_RX_ISR,w
  2754  0356  00F8               	movwf	_rxCount	;volatile
  2755  0357                     i1l1337:
  2756                           
  2757                           ;usart.c: 28:     if(RCSTAbits.OERR == 1)
  2758  0357  1C98               	btfss	24,1	;volatile
  2759  0358  2B5A               	goto	u58_21
  2760  0359  2B5B               	goto	u58_20
  2761  035A                     u58_21:
  2762  035A  2B5E               	goto	i1l1343
  2763  035B                     u58_20:
  2764  035B                     i1l1339:
  2765                           
  2766                           ;usart.c: 29:     {;usart.c: 30:         RCSTAbits.CREN = 0;
  2767  035B  1218               	bcf	24,4	;volatile
  2768                           
  2769                           ;usart.c: 31:         RCSTAbits.CREN = 1;
  2770  035C  1618               	bsf	24,4	;volatile
  2771  035D                     i1l1341:
  2772                           
  2773                           ;usart.c: 32:         rxCount = 0;
  2774  035D  01F8               	clrf	_rxCount	;volatile
  2775  035E                     i1l1343:
  2776                           
  2777                           ;usart.c: 34:     PIR1bits.RCIF = 0;
  2778  035E  128C               	bcf	12,5	;volatile
  2779  035F                     i1l310:
  2780  035F  0008               	return
  2781  0360                     __end_of_USART_RX_ISR:
  2782                           
  2783                           	psect	text13
  2784  02D6                     __ptext13:	
  2785 ;; *************** function _TMR0_ISR *****************
  2786 ;; Defined at:
  2787 ;;		line 13 in file "tmr0.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;		None
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;		None
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg, status,2, status,0
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2801 ;;      Params:         0       0       0       0       0
  2802 ;;      Locals:         0       0       0       0       0
  2803 ;;      Temps:          1       0       0       0       0
  2804 ;;      Totals:         1       0       0       0       0
  2805 ;;Total ram usage:        1 bytes
  2806 ;; Hardware stack levels used: 1
  2807 ;; This function calls:
  2808 ;;		Nothing
  2809 ;; This function is called by:
  2810 ;;		_InterruptManager
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           
  2815                           ;psect for function _TMR0_ISR
  2816  02D6                     _TMR0_ISR:
  2817  02D6                     i1l1313:	
  2818                           ;incstack = 0
  2819                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0]
  2820                           
  2821                           
  2822                           ;tmr0.c: 15:     timerbotao1++;
  2823  02D6  3001               	movlw	1
  2824  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  2825  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  2826  02D9  07AB               	addwf	_timerbotao1,f
  2827  02DA  1803               	skipnc
  2828  02DB  0AAC               	incf	_timerbotao1+1,f
  2829  02DC  3000               	movlw	0
  2830  02DD  07AC               	addwf	_timerbotao1+1,f
  2831                           
  2832                           ;tmr0.c: 16:     if(timerbotao1 > 1000)
  2833  02DE  3003               	movlw	3
  2834  02DF  022C               	subwf	_timerbotao1+1,w
  2835  02E0  30E9               	movlw	233
  2836  02E1  1903               	skipnz
  2837  02E2  022B               	subwf	_timerbotao1,w
  2838  02E3  1C03               	skipc
  2839  02E4  2AE6               	goto	u55_21
  2840  02E5  2AE7               	goto	u55_20
  2841  02E6                     u55_21:
  2842  02E6  2AEB               	goto	i1l254
  2843  02E7                     u55_20:
  2844  02E7                     i1l1315:
  2845                           
  2846                           ;tmr0.c: 17:         timerbotao1 = 1000;
  2847  02E7  30E8               	movlw	232
  2848  02E8  00AB               	movwf	_timerbotao1
  2849  02E9  3003               	movlw	3
  2850  02EA  00AC               	movwf	_timerbotao1+1
  2851  02EB                     i1l254:
  2852                           
  2853                           ;tmr0.c: 18:     timerbotao2++;
  2854  02EB  3001               	movlw	1
  2855  02EC  07A9               	addwf	_timerbotao2,f
  2856  02ED  1803               	skipnc
  2857  02EE  0AAA               	incf	_timerbotao2+1,f
  2858  02EF  3000               	movlw	0
  2859  02F0  07AA               	addwf	_timerbotao2+1,f
  2860                           
  2861                           ;tmr0.c: 19:     if(timerbotao2 > 1000)
  2862  02F1  3003               	movlw	3
  2863  02F2  022A               	subwf	_timerbotao2+1,w
  2864  02F3  30E9               	movlw	233
  2865  02F4  1903               	skipnz
  2866  02F5  0229               	subwf	_timerbotao2,w
  2867  02F6  1C03               	skipc
  2868  02F7  2AF9               	goto	u56_21
  2869  02F8  2AFA               	goto	u56_20
  2870  02F9                     u56_21:
  2871  02F9  2AFE               	goto	i1l1319
  2872  02FA                     u56_20:
  2873  02FA                     i1l1317:
  2874                           
  2875                           ;tmr0.c: 20:         timerbotao2 = 1000;
  2876  02FA  30E8               	movlw	232
  2877  02FB  00A9               	movwf	_timerbotao2
  2878  02FC  3003               	movlw	3
  2879  02FD  00AA               	movwf	_timerbotao2+1
  2880  02FE                     i1l1319:
  2881                           
  2882                           ;tmr0.c: 21:     timerfimcurso++;
  2883  02FE  3001               	movlw	1
  2884  02FF  00F0               	movwf	??_TMR0_ISR
  2885  0300  0870               	movf	??_TMR0_ISR,w
  2886  0301  07B5               	addwf	_timerfimcurso,f
  2887  0302                     i1l1321:
  2888                           
  2889                           ;tmr0.c: 22:     timerchaveNF++;
  2890  0302  3001               	movlw	1
  2891  0303  00F0               	movwf	??_TMR0_ISR
  2892  0304  0870               	movf	??_TMR0_ISR,w
  2893  0305  07B4               	addwf	_timerchaveNF,f
  2894  0306                     i1l1323:
  2895                           
  2896                           ;tmr0.c: 23:     timerchaveNA++;
  2897  0306  3001               	movlw	1
  2898  0307  00F0               	movwf	??_TMR0_ISR
  2899  0308  0870               	movf	??_TMR0_ISR,w
  2900  0309  07B3               	addwf	_timerchaveNA,f
  2901  030A                     i1l1325:
  2902                           
  2903                           ;tmr0.c: 24:     timerpwm++;
  2904  030A  3001               	movlw	1
  2905  030B  00F0               	movwf	??_TMR0_ISR
  2906  030C  0870               	movf	??_TMR0_ISR,w
  2907  030D  07B2               	addwf	_timerpwm,f
  2908                           
  2909                           ;tmr0.c: 25:     timer++;
  2910  030E  3001               	movlw	1
  2911  030F  07A7               	addwf	_timer,f
  2912  0310  1803               	skipnc
  2913  0311  0AA8               	incf	_timer+1,f
  2914  0312  3000               	movlw	0
  2915  0313  07A8               	addwf	_timer+1,f
  2916                           
  2917                           ;tmr0.c: 27:     TMR0 = 0x64;
  2918  0314  3064               	movlw	100
  2919  0315  0081               	movwf	1	;volatile
  2920  0316                     i1l1327:
  2921                           
  2922                           ;tmr0.c: 28:     INTCONbits.T0IF = 0;
  2923  0316  110B               	bcf	11,2	;volatile
  2924  0317                     i1l256:
  2925  0317  0008               	return
  2926  0318                     __end_of_TMR0_ISR:
  2927  007E                     btemp	set	126	;btemp
  2928  007E                     wtemp0	set	126
  2929                           
  2930                           	psect	config
  2931                           
  2932                           ;Config register CONFIG @ 0x2007
  2933                           ;	Oscillator Selection bits
  2934                           ;	FOSC = HS, HS oscillator
  2935                           ;	Watchdog Timer Enable bit
  2936                           ;	WDTE = ON, WDT enabled
  2937                           ;	Power-up Timer Enable bit
  2938                           ;	PWRTE = ON, PWRT enabled
  2939                           ;	FLASH Program Memory Code Protection bits
  2940                           ;	CP = ALL, 0000h to 1FFFh code protected
  2941                           ;	Brown-out Reset Enable bit
  2942                           ;	BOREN = ON, BOR enabled
  2943                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  2944                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2945                           ;	Data EE Memory Code Protection
  2946                           ;	CPD = ON, Data EEPROM memory code-protected
  2947                           ;	FLASH Program Memory Write Enable
  2948                           ;	WRT = ON, Unprotected program memory may be written to by EECON control
  2949                           ;	In-Circuit Debugger Mode bit
  2950                           ;	DEBUG = 0x1, unprogrammed default
  2951  2007                     	org	8199
  2952  2007  0E46               	dw	3654

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      4      26
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM_LoadDutyValue
    _main->_USART_Read
    _PWM_Initialize->_PWM_LoadDutyValue

Critical Paths under _InterruptManager in COMMON

    _InterruptManager->_TMR0_ISR
    _InterruptManager->_USART_RX_ISR

Critical Paths under _main in BANK0

    _main->_PWM_LoadDutyValue
    _PWM_Initialize->_PWM_LoadDutyValue

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1069
                                              2 BANK0      2     2      0
                   _Interrupt_Enable
                     _PWM_Initialize
                  _PWM_LoadDutyValue
              _PinManager_Initialize
                    _TMR0_Initialize
                   _USART_Initialize
              _USART_RX_Clear_Buffer
                     _USART_RX_Ready
                         _USART_Read
                        _USART_Write
 ---------------------------------------------------------------------------------
 (1) _USART_Write                                          1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Read                                           2     2      0      23
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _USART_RX_Ready                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_RX_Clear_Buffer                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PinManager_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Initialize                                       0     0      0     512
                  _PWM_LoadDutyValue
 ---------------------------------------------------------------------------------
 (1) _PWM_LoadDutyValue                                    4     2      2     512
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Interrupt_Enable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _InterruptManager                                     3     3      0       0
                                              1 COMMON     3     3      0
                           _TMR0_ISR
                       _USART_RX_ISR
 ---------------------------------------------------------------------------------
 (4) _USART_RX_ISR                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _TMR0_ISR                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupt_Enable
   _PWM_Initialize
     _PWM_LoadDutyValue
   _PWM_LoadDutyValue
   _PinManager_Initialize
   _TMR0_Initialize
   _USART_Initialize
   _USART_RX_Clear_Buffer
   _USART_RX_Ready
   _USART_Read
   _USART_Write

 _InterruptManager (ROOT)
   _TMR0_ISR
   _USART_RX_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      24       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4      1A       5       32.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      24      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jun 04 14:38:27 2021

            ??_InterruptManager 0071              ??_Interrupt_Enable 0074         __size_of_PWM_Initialize 0015  
                            l20 03DA                              l80 004D                              fsr 0004  
      __end_of_USART_Initialize 03B0                             l111 02D2                             l200 03A2  
                           l112 0160                             l121 01AB                             l115 0188  
                           l124 01B4                             l213 0390                             l151 0293  
                           l135 0217                             l119 018E                             l216 037B  
                           l305 03AF                             l313 03DC                             l137 023E  
                           l322 03C5                             l251 03CF                             l316 03BB  
                           l325 03DE                             l319 03BD                             _PR2 0092  
                           u590 03C3                             u591 03C2                             fsr0 0004  
                           indf 0000                            l2009 02A0                            l1351 039A  
                          l1345 03D8                            l1353 039C                            l1361 03CE  
                          l1355 039E                            l1347 0391                            l1371 03AE  
                          l1357 03A0                            l1349 0396                            l1373 03BD  
                          l1703 0360                            l1359 03C6                            l1367 03A3  
                          l1383 03B0                            l1375 03C3                            l1711 0036  
                          l1705 037C                            l1369 03AD                            l1377 03DD  
                          l1385 03B2                            l1801 00B9                            l1721 0041  
                          l1713 003B                            l1707 0388                            l1379 03DB  
                          l1387 03BA                            l1811 00DA                            l1803 00C2  
                          l1731 0048                            l1723 0042                            l1715 003E  
                          l1901 01F9                            l1821 00FB                            l1813 00E0  
                          l1805 00C8                            l1741 0054                            l1733 0049  
                          l1725 0043                            l1717 003F                            l1709 0022  
                          l1911 0212                            l1903 01FE                            l1831 0117  
                          l1823 0105                            l1815 00E1                            l1807 00CE  
                          l1743 0058                            l1751 0066                            l1735 004A  
                          l1727 0045                            l1719 0040                            l1921 0225  
                          l1905 0202                            l1833 0122                            l1841 0155  
                          l1817 00EB                            l1809 00D6                            l1761 007B  
                          l1753 006A                            l1745 0061                            l1737 004B  
                          l1729 0047                            l1931 0243                            l1923 022A  
                          l1915 0219                            l1907 0204                            l1851 0171  
                          l1843 0159                            l1835 0132                            l1827 010C  
                          l1819 00F5                            l1771 008C                            l1755 006E  
                          l1763 007C                            l1747 0063                            l1739 004E  
                          l1941 025D                            l1933 0248                            l1925 0231  
                          l1917 021D                            l1909 0209                            l1861 018C  
                          l1853 017A                            l1845 015D                            l1837 0140  
                          l1829 0115                            l1781 009C                            l1773 008D  
                          l1765 0080                            l1757 0077                            l1749 0065  
                          l1951 0278                            l1943 0267                            l1935 0251  
                          l1927 0237                            l1919 0223                            l1871 01AF  
                          l1863 0195                            l1847 0164                            l1855 017E  
                          l1839 014A                            l1791 00A8                            l1783 009E  
                          l1767 0084                            l1775 008E                            l1759 0079  
                          l1961 0285                            l1953 027A                            l1945 026E  
                          l1881 01C5                            l1873 01B5                            l1865 0198  
                          l1857 0182                            l1849 0168                            l1793 00AE  
                          l1785 009F                            l1777 0092                            l1769 008A  
                          l1955 027B                            l1939 0253                            l1891 01E0  
                          l1883 01C9                            l1875 01B9                            l1867 019D  
                          l1859 0186                            l1971 0296                            l1795 00B0  
                          l1779 0096                            l1787 00A0                            l1965 0287  
                          l1957 027E                            l1893 01E2                            l1885 01CE  
                          l1877 01BB                            l1869 01A6                            l1797 00B1  
                          l1789 00A4                            l1967 0290                            l1959 0283  
                          l1895 01E7                            l1887 01D7                            l1879 01BF  
                          l1799 00B2                            l1897 01F0                            l1889 01DC  
                          l1899 01F4                            u1100 0061                            u1101 0060  
                          u1110 006A                            u1111 0069                            u1200 00A4  
                          u1120 006E                            u1201 00A3                            u1121 006D  
                          u1210 00A8                            u1130 0077                            u1211 00A7  
                          u1131 0076                            u1300 015D                            u1220 00AE  
                          u1140 0080                            u1301 015C                            u1221 00AD  
                          u1141 007F                            u1310 0164                            u1230 00B9  
                          u1150 0084                            u1311 0163                            u1231 00B8  
                          u1151 0083                            u1400 01D7                            u1320 0168  
                          u1240 00CE                            u1160 008A                            u1080 0054  
                          u1401 01D6                            u1321 0167                            u1241 00CD  
                          u1161 0089                            u1081 0053                            u1410 01F0  
                          u1330 0171                            u1250 00E0                            u1170 0092  
                          u1090 0058                            u1075 0372                            u1411 01EF  
                          u1331 0170                            u1251 00DF                            u1171 0091  
                          u1091 0057                            u1500 0290                            u1420 01F4  
                          u1340 017A                            u1260 00EB                            u1180 0096  
                          u1501 028F                            u1421 01F3                            u1341 0179  
                          u1261 00EA                            u1181 0095                            u1430 0212  
                          u1350 0182                            u1270 00F5                            u1190 009C  
                          u1431 0211                            u1351 0181                            u1271 00F4  
                          u1191 009B                            u1440 0223                            u1360 0186  
                          u1280 0115                            u1441 0222                            u1361 0185  
                          u1281 0114                            u1265 00E7                            u1450 0242  
                          u1370 018C                            u1290 0159                            u1451 0241  
                          u1371 018B                            u1291 0158                            u1275 00F1  
                          u1460 0251                            u1380 01A6                            u1461 0250  
                          u1381 01A5                            u1470 025D                            u1390 01AF  
                          u1471 025C                            u1391 01AE                            u1480 026E  
                          u1481 026D                            u1490 0277                            u1491 0276  
                          i1l17 0336                            _TMR0 0001                            _main 0022  
               ?_USART_RX_Ready 0070                            btemp 007E                            start 000E  
__size_of_PinManager_Initialize 0012   __end_of_PinManager_Initialize 03A3         __end_of_TMR0_Initialize 03D0  
                         ?_main 0070                           _T2CON 0012                           i1l310 035F  
                         i1l254 02EB                           i1l256 0317                           _RCREG 001A  
                         _RCSTA 0018                           _SPBRG 0099                           _PORTA 0005  
                         _PORTB 0006                           _PORTC 0007                           u60_20 031C  
                         u60_21 031B                           u61_20 0320                           u61_21 031F  
                         u62_20 032B                           u62_21 032A                           u55_20 02E7  
                         u63_20 0331                           u55_21 02E6                           u63_21 0330  
                         u56_20 02FA                           u56_21 02F9                           u57_20 0353  
                         u57_21 0352                           _TRISA 0085                           _TRISB 0086  
                         _TRISC 0087                           u58_20 035B                           u58_21 035A  
                         _TXREG 0019                           _TXSTA 0098                __end_of_TMR0_ISR 0318  
                         _timer 0027                           pclath 000A                           status 0003  
                         wtemp0 007E                     ?_USART_Read 0070                 __initialization 0011  
                  __end_of_main 02D6                          ??_main 0038                          _ADCON1 009F  
                        _CCPR1L 0015                          i1l1321 0302                          i1l1313 02D6  
                        i1l1401 0331                          i1l1323 0306                          i1l1315 02E7  
                        i1l1331 0349                          i1l1325 030A                          i1l1317 02FA  
                        i1l1341 035D                          i1l1333 034D                          i1l1327 0316  
                        i1l1319 02FE                          i1l1343 035E                          i1l1335 0353  
                        i1l1337 0357                          i1l1329 033F                          i1l1339 035B  
                        i1l1391 0318                          i1l1393 031C                          i1l1395 0320  
                        i1l1397 0325                          i1l1399 032B                  _PWM_Initialize 037C  
                        _estado 0076                ?_TMR0_Initialize 0070                          saved_w 007E  
           __size_of_USART_Read 000C         __end_of__initialization 001E                    ?_USART_Write 0070  
        __end_of_PWM_Initialize 0391                  __pcstackCOMMON 0070                       ?_TMR0_ISR 0070  
     __size_of_InterruptManager 0027               ?_USART_Initialize 0070       __size_of_Interrupt_Enable 0003  
            ??_USART_Initialize 0074                ??_USART_RX_Ready 0074                      __pbssBANK0 0020  
         _USART_RX_Clear_Buffer 03DD                 ?_PWM_Initialize 0070                      __pmaintext 0022  
                    ??_TMR0_ISR 0070                      __pintentry 0004                         _CCP1CON 0017  
                  ??_USART_Read 0074           _PinManager_Initialize 0391                         __ptext1 03BC  
                       __ptext2 03B0                         __ptext3 03DB                         __ptext4 03DD  
                       __ptext5 03A3                         __ptext6 03C6                         __ptext7 0391  
                       __ptext8 037C                         __ptext9 0360                  USART_Read@data 0075  
                       _estagio 0030                         _rxCount 0078              __end_of_USART_Read 03BC  
                       clrloop0 03D1            end_of_initialization 001E          ?_USART_RX_Clear_Buffer 0070  
                     _RCSTAbits 0018            __size_of_USART_Write 000A                       _PORTAbits 0005  
                     _PORTBbits 0006                       _PORTCbits 0007                _InterruptManager 0318  
              _Interrupt_Enable 03D8                      _pwm_setado 0025                   ?_USART_RX_ISR 0070  
             _PWM_LoadDutyValue 0360              ?_PWM_LoadDutyValue 0074             ??_PWM_LoadDutyValue 0036  
        ?_PinManager_Initialize 0070               __size_of_TMR0_ISR 0042             start_initialization 0011  
      __size_of_TMR0_Initialize 000A                  ??_USART_RX_ISR 0070       __end_of_PWM_LoadDutyValue 037C  
              ??_PWM_Initialize 0076       __size_of_USART_Initialize 000D                     __pbssCOMMON 0076  
                     ___latbits 0002                   __pcstackBANK0 0036         ??_USART_RX_Clear_Buffer 0074  
    __size_of_PWM_LoadDutyValue 001C               ??_TMR0_Initialize 0074               interrupt_function 0004  
      __end_of_InterruptManager 033F                       clear_ram0 03D0                        _PIE1bits 008C  
      __end_of_Interrupt_Enable 03DB         __size_of_USART_RX_Ready 0002                        _PIR1bits 000C  
                      _TMR0_ISR 02D6            __end_of_USART_RX_ISR 0360                       _pwm_atual 0023  
                   _comunicacao 0079                _USART_Initialize 03A3                   ??_USART_Write 0074  
    PWM_LoadDutyValue@dutyValue 0074         ??_PinManager_Initialize 0074                        __ptext10 03D8  
                      __ptext11 0318                        __ptext12 033F                        __ptext13 02D6  
                      _endereco 0031                   __size_of_main 02B4                        _rxBuffer 0020  
                      _timerpwm 0032             __end_of_USART_Write 03C6                      _INTCONbits 000B  
                 _timerfimcurso 0035                        intlevel1 0000               _estagio@main$F453 002E  
             _estagio@main$F376 002F               _estagio@main$F574 002D                  _USART_RX_Ready 03DB  
         __size_of_USART_RX_ISR 0021                    _timerchaveNA 0033                    _timerchaveNF 0034  
                    _OPTION_REG 0081                 _TMR0_Initialize 03C6                     _timerbotao1 002B  
                   _timerbotao2 0029                    _USART_RX_ISR 033F  __size_of_USART_RX_Clear_Buffer 0002  
 __end_of_USART_RX_Clear_Buffer 03DF          __end_of_USART_RX_Ready 03DD                 USART_Write@data 0074  
             ?_InterruptManager 0070                      _USART_Read 03B0                     _USART_Write 03BC  
             ?_Interrupt_Enable 0070  
