

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Dec 16 15:29:56 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F876A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F876A Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  010F                     	;# 
   116  018C                     	;# 
   117  018D                     	;# 
   118  0000                     	;# 
   119  0001                     	;# 
   120  0002                     	;# 
   121  0003                     	;# 
   122  0004                     	;# 
   123  0005                     	;# 
   124  0006                     	;# 
   125  0007                     	;# 
   126  000A                     	;# 
   127  000B                     	;# 
   128  000C                     	;# 
   129  000D                     	;# 
   130  000E                     	;# 
   131  000E                     	;# 
   132  000F                     	;# 
   133  0010                     	;# 
   134  0011                     	;# 
   135  0012                     	;# 
   136  0013                     	;# 
   137  0014                     	;# 
   138  0015                     	;# 
   139  0015                     	;# 
   140  0016                     	;# 
   141  0017                     	;# 
   142  0018                     	;# 
   143  0019                     	;# 
   144  001A                     	;# 
   145  001B                     	;# 
   146  001B                     	;# 
   147  001C                     	;# 
   148  001D                     	;# 
   149  001E                     	;# 
   150  001F                     	;# 
   151  0081                     	;# 
   152  0085                     	;# 
   153  0086                     	;# 
   154  0087                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174  0000                     	;# 
   175  0001                     	;# 
   176  0002                     	;# 
   177  0003                     	;# 
   178  0004                     	;# 
   179  0005                     	;# 
   180  0006                     	;# 
   181  0007                     	;# 
   182  000A                     	;# 
   183  000B                     	;# 
   184  000C                     	;# 
   185  000D                     	;# 
   186  000E                     	;# 
   187  000E                     	;# 
   188  000F                     	;# 
   189  0010                     	;# 
   190  0011                     	;# 
   191  0012                     	;# 
   192  0013                     	;# 
   193  0014                     	;# 
   194  0015                     	;# 
   195  0015                     	;# 
   196  0016                     	;# 
   197  0017                     	;# 
   198  0018                     	;# 
   199  0019                     	;# 
   200  001A                     	;# 
   201  001B                     	;# 
   202  001B                     	;# 
   203  001C                     	;# 
   204  001D                     	;# 
   205  001E                     	;# 
   206  001F                     	;# 
   207  0081                     	;# 
   208  0085                     	;# 
   209  0086                     	;# 
   210  0087                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  0091                     	;# 
   215  0092                     	;# 
   216  0093                     	;# 
   217  0094                     	;# 
   218  0098                     	;# 
   219  0099                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  009F                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  008C                     	;# 
   268  008D                     	;# 
   269  008E                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  000A                     	;# 
   295  000B                     	;# 
   296  000C                     	;# 
   297  000D                     	;# 
   298  000E                     	;# 
   299  000E                     	;# 
   300  000F                     	;# 
   301  0010                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0013                     	;# 
   305  0014                     	;# 
   306  0015                     	;# 
   307  0015                     	;# 
   308  0016                     	;# 
   309  0017                     	;# 
   310  0018                     	;# 
   311  0019                     	;# 
   312  001A                     	;# 
   313  001B                     	;# 
   314  001B                     	;# 
   315  001C                     	;# 
   316  001D                     	;# 
   317  001E                     	;# 
   318  001F                     	;# 
   319  0081                     	;# 
   320  0085                     	;# 
   321  0086                     	;# 
   322  0087                     	;# 
   323  008C                     	;# 
   324  008D                     	;# 
   325  008E                     	;# 
   326  0091                     	;# 
   327  0092                     	;# 
   328  0093                     	;# 
   329  0094                     	;# 
   330  0098                     	;# 
   331  0099                     	;# 
   332  009C                     	;# 
   333  009D                     	;# 
   334  009E                     	;# 
   335  009F                     	;# 
   336  010C                     	;# 
   337  010D                     	;# 
   338  010E                     	;# 
   339  010F                     	;# 
   340  018C                     	;# 
   341  018D                     	;# 
   342  0000                     	;# 
   343  0001                     	;# 
   344  0002                     	;# 
   345  0003                     	;# 
   346  0004                     	;# 
   347  0005                     	;# 
   348  0006                     	;# 
   349  0007                     	;# 
   350  000A                     	;# 
   351  000B                     	;# 
   352  000C                     	;# 
   353  000D                     	;# 
   354  000E                     	;# 
   355  000E                     	;# 
   356  000F                     	;# 
   357  0010                     	;# 
   358  0011                     	;# 
   359  0012                     	;# 
   360  0013                     	;# 
   361  0014                     	;# 
   362  0015                     	;# 
   363  0015                     	;# 
   364  0016                     	;# 
   365  0017                     	;# 
   366  0018                     	;# 
   367  0019                     	;# 
   368  001A                     	;# 
   369  001B                     	;# 
   370  001B                     	;# 
   371  001C                     	;# 
   372  001D                     	;# 
   373  001E                     	;# 
   374  001F                     	;# 
   375  0081                     	;# 
   376  0085                     	;# 
   377  0086                     	;# 
   378  0087                     	;# 
   379  008C                     	;# 
   380  008D                     	;# 
   381  008E                     	;# 
   382  0091                     	;# 
   383  0092                     	;# 
   384  0093                     	;# 
   385  0094                     	;# 
   386  0098                     	;# 
   387  0099                     	;# 
   388  009C                     	;# 
   389  009D                     	;# 
   390  009E                     	;# 
   391  009F                     	;# 
   392  010C                     	;# 
   393  010D                     	;# 
   394  010E                     	;# 
   395  010F                     	;# 
   396  018C                     	;# 
   397  018D                     	;# 
   398  0000                     	;# 
   399  0001                     	;# 
   400  0002                     	;# 
   401  0003                     	;# 
   402  0004                     	;# 
   403  0005                     	;# 
   404  0006                     	;# 
   405  0007                     	;# 
   406  000A                     	;# 
   407  000B                     	;# 
   408  000C                     	;# 
   409  000D                     	;# 
   410  000E                     	;# 
   411  000E                     	;# 
   412  000F                     	;# 
   413  0010                     	;# 
   414  0011                     	;# 
   415  0012                     	;# 
   416  0013                     	;# 
   417  0014                     	;# 
   418  0015                     	;# 
   419  0015                     	;# 
   420  0016                     	;# 
   421  0017                     	;# 
   422  0018                     	;# 
   423  0019                     	;# 
   424  001A                     	;# 
   425  001B                     	;# 
   426  001B                     	;# 
   427  001C                     	;# 
   428  001D                     	;# 
   429  001E                     	;# 
   430  001F                     	;# 
   431  0081                     	;# 
   432  0085                     	;# 
   433  0086                     	;# 
   434  0087                     	;# 
   435  008C                     	;# 
   436  008D                     	;# 
   437  008E                     	;# 
   438  0091                     	;# 
   439  0092                     	;# 
   440  0093                     	;# 
   441  0094                     	;# 
   442  0098                     	;# 
   443  0099                     	;# 
   444  009C                     	;# 
   445  009D                     	;# 
   446  009E                     	;# 
   447  009F                     	;# 
   448  010C                     	;# 
   449  010D                     	;# 
   450  010E                     	;# 
   451  010F                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0000                     	;# 
   455  0001                     	;# 
   456  0002                     	;# 
   457  0003                     	;# 
   458  0004                     	;# 
   459  0005                     	;# 
   460  0006                     	;# 
   461  0007                     	;# 
   462  000A                     	;# 
   463  000B                     	;# 
   464  000C                     	;# 
   465  000D                     	;# 
   466  000E                     	;# 
   467  000E                     	;# 
   468  000F                     	;# 
   469  0010                     	;# 
   470  0011                     	;# 
   471  0012                     	;# 
   472  0013                     	;# 
   473  0014                     	;# 
   474  0015                     	;# 
   475  0015                     	;# 
   476  0016                     	;# 
   477  0017                     	;# 
   478  0018                     	;# 
   479  0019                     	;# 
   480  001A                     	;# 
   481  001B                     	;# 
   482  001B                     	;# 
   483  001C                     	;# 
   484  001D                     	;# 
   485  001E                     	;# 
   486  001F                     	;# 
   487  0081                     	;# 
   488  0085                     	;# 
   489  0086                     	;# 
   490  0087                     	;# 
   491  008C                     	;# 
   492  008D                     	;# 
   493  008E                     	;# 
   494  0091                     	;# 
   495  0092                     	;# 
   496  0093                     	;# 
   497  0094                     	;# 
   498  0098                     	;# 
   499  0099                     	;# 
   500  009C                     	;# 
   501  009D                     	;# 
   502  009E                     	;# 
   503  009F                     	;# 
   504  010C                     	;# 
   505  010D                     	;# 
   506  010E                     	;# 
   507  010F                     	;# 
   508  018C                     	;# 
   509  018D                     	;# 
   510  0015                     _CCPR1L	set	21
   511  0019                     _TXREG	set	25
   512  0018                     _RCSTAbits	set	24
   513  001A                     _RCREG	set	26
   514  0018                     _RCSTA	set	24
   515  0001                     _TMR0	set	1
   516  0007                     _PORTC	set	7
   517  0006                     _PORTB	set	6
   518  0005                     _PORTA	set	5
   519  0005                     _PORTAbits	set	5
   520  0017                     _CCP1CON	set	23
   521  0007                     _PORTCbits	set	7
   522  0006                     _PORTBbits	set	6
   523  0012                     _T2CON	set	18
   524  000C                     _PIR1bits	set	12
   525  000B                     _INTCONbits	set	11
   526  0099                     _SPBRG	set	153
   527  0098                     _TXSTA	set	152
   528  0081                     _OPTION_REG	set	129
   529  009F                     _ADCON1	set	159
   530  0087                     _TRISC	set	135
   531  0086                     _TRISB	set	134
   532  0085                     _TRISA	set	133
   533  0092                     _PR2	set	146
   534  008C                     _PIE1bits	set	140
   535                           
   536                           	psect	cinit
   537  0011                     start_initialization:	
   538                           ; #config settings
   539                           
   540  0011                     __initialization:
   541                           
   542                           ; Clear objects allocated to COMMON
   543  0011  01F6               	clrf	__pbssCOMMON& (0+127)
   544  0012  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   545  0013  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   546  0014  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   547                           
   548                           ; Clear objects allocated to BANK0
   549  0015  1383               	bcf	3,7	;select IRP bank0
   550  0016  3020               	movlw	low __pbssBANK0
   551  0017  0084               	movwf	4
   552  0018  303B               	movlw	low (__pbssBANK0+27)
   553  0019  120A  118A  2644  120A  118A  	fcall	clear_ram0
   554  001E                     end_of_initialization:	
   555                           ;End of C runtime variable initialization code
   556                           
   557  001E                     __end_of__initialization:
   558  001E  0183               	clrf	3
   559  001F  120A  118A  2822   	ljmp	_main	;jump to C main() function
   560                           
   561                           	psect	bssCOMMON
   562  0076                     __pbssCOMMON:
   563  0076                     _estado:
   564  0076                     	ds	2
   565  0078                     _comunicacao:
   566  0078                     	ds	1
   567  0079                     _endereco:
   568  0079                     	ds	1
   569                           
   570                           	psect	bssBANK0
   571  0020                     __pbssBANK0:
   572  0020                     _rxBuffer:
   573  0020                     	ds	3
   574  0023                     _escravo:
   575  0023                     	ds	2
   576  0025                     _pwm_atual:
   577  0025                     	ds	2
   578  0027                     _pwm_setado:
   579  0027                     	ds	2
   580  0029                     _timerpwm:
   581  0029                     	ds	2
   582  002B                     _timer:
   583  002B                     	ds	2
   584  002D                     _timerbotao2:
   585  002D                     	ds	2
   586  002F                     _timerbotao1:
   587  002F                     	ds	2
   588  0031                     _rxCount:
   589  0031                     	ds	1
   590  0032                     _estagio@main$F683:
   591  0032                     	ds	1
   592  0033                     _estagio@main$F540:
   593  0033                     	ds	1
   594  0034                     _estagio@main$F449:
   595  0034                     	ds	1
   596  0035                     _estagio:
   597  0035                     	ds	1
   598  0036                     _timeoutRx:
   599  0036                     	ds	1
   600  0037                     _timerchavecopo:
   601  0037                     	ds	1
   602  0038                     _timerchaveNA:
   603  0038                     	ds	1
   604  0039                     _timerchaveNF:
   605  0039                     	ds	1
   606  003A                     _timerfimcurso:
   607  003A                     	ds	1
   608                           
   609                           	psect	clrtext
   610  0644                     clear_ram0:	
   611                           ;	Called with FSR containing the base address, and
   612                           ;	W with the last address+1
   613                           
   614  0644  0064               	clrwdt	;clear the watchdog before getting into this loop
   615  0645                     clrloop0:
   616  0645  0180               	clrf	0	;clear RAM location pointed to by FSR
   617  0646  0A84               	incf	4,f	;increment pointer
   618  0647  0604               	xorwf	4,w	;XOR with final address
   619  0648  1903               	btfsc	3,2	;have we reached the end yet?
   620  0649  3400               	retlw	0	;all done for this memory range, return
   621  064A  0604               	xorwf	4,w	;XOR again to restore value
   622  064B  2E45               	goto	clrloop0	;do the next byte
   623                           
   624                           	psect	cstackCOMMON
   625  0070                     __pcstackCOMMON:
   626  0070                     ?_TMR0_ISR:
   627  0070                     ??_TMR0_ISR:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_USART_RX_ISR:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ??_USART_RX_ISR:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_PinManager_Initialize:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_PWM_Initialize:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_TMR0_Initialize:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_USART_Initialize:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_USART_Write:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_USART_RX_Ready:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_USART_RX_Clear_Buffer:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_USART_Read:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_InterruptManager:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_Interrupt_Enable:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_main:	
   667                           ; 1 bytes @ 0x0
   668                           
   669                           
   670                           ; 1 bytes @ 0x0
   671  0070                     	ds	1
   672  0071                     ??_InterruptManager:
   673                           
   674                           ; 1 bytes @ 0x1
   675  0071                     	ds	3
   676  0074                     ??_PinManager_Initialize:
   677  0074                     ??_TMR0_Initialize:	
   678                           ; 1 bytes @ 0x4
   679                           
   680  0074                     ??_USART_Initialize:	
   681                           ; 1 bytes @ 0x4
   682                           
   683  0074                     ??_USART_Write:	
   684                           ; 1 bytes @ 0x4
   685                           
   686  0074                     ?_PWM_LoadDutyValue:	
   687                           ; 1 bytes @ 0x4
   688                           
   689  0074                     ??_USART_RX_Ready:	
   690                           ; 1 bytes @ 0x4
   691                           
   692  0074                     ??_USART_RX_Clear_Buffer:	
   693                           ; 1 bytes @ 0x4
   694                           
   695  0074                     ??_USART_Read:	
   696                           ; 1 bytes @ 0x4
   697                           
   698  0074                     ??_Interrupt_Enable:	
   699                           ; 1 bytes @ 0x4
   700                           
   701  0074                     USART_Write@data:	
   702                           ; 1 bytes @ 0x4
   703                           
   704  0074                     PWM_LoadDutyValue@dutyValue:	
   705                           ; 1 bytes @ 0x4
   706                           
   707                           
   708                           ; 2 bytes @ 0x4
   709  0074                     	ds	1
   710  0075                     USART_Read@data:
   711                           
   712                           ; 1 bytes @ 0x5
   713  0075                     	ds	1
   714  0076                     ??_PWM_Initialize:
   715                           
   716                           	psect	cstackBANK0
   717  003B                     __pcstackBANK0:	
   718                           ; 1 bytes @ 0x6
   719                           
   720  003B                     ??_PWM_LoadDutyValue:
   721                           
   722                           ; 1 bytes @ 0x0
   723  003B                     	ds	2
   724  003D                     ??_main:
   725                           
   726                           ; 1 bytes @ 0x2
   727  003D                     	ds	2
   728                           
   729                           	psect	maintext
   730  0022                     __pmaintext:	
   731 ;;
   732 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   733 ;;
   734 ;; *************** function _main *****************
   735 ;; Defined at:
   736 ;;		line 17 in file "main.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;		None
   739 ;; Auto vars:     Size  Location     Type
   740 ;;		None
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      void 
   743 ;; Registers used:
   744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : B00/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   750 ;;      Params:         0       0       0       0       0
   751 ;;      Locals:         0       0       0       0       0
   752 ;;      Temps:          0       2       0       0       0
   753 ;;      Totals:         0       2       0       0       0
   754 ;;Total ram usage:        2 bytes
   755 ;; Hardware stack levels required when called: 4
   756 ;; This function calls:
   757 ;;		_Interrupt_Enable
   758 ;;		_PWM_Initialize
   759 ;;		_PWM_LoadDutyValue
   760 ;;		_PinManager_Initialize
   761 ;;		_TMR0_Initialize
   762 ;;		_USART_Initialize
   763 ;;		_USART_RX_Clear_Buffer
   764 ;;		_USART_RX_Ready
   765 ;;		_USART_Read
   766 ;;		_USART_Write
   767 ;; This function is called by:
   768 ;;		Startup code after reset
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           
   773                           ;psect for function _main
   774  0022                     _main:
   775  0022                     l2449:	
   776                           ;incstack = 0
   777                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   778                           
   779                           
   780                           ;main.c: 19:     PinManager_Initialize();
   781  0022  120A  118A  25FF  120A  118A  	fcall	_PinManager_Initialize
   782                           
   783                           ;main.c: 20:     PWM_Initialize();
   784  0027  120A  118A  25EA  120A  118A  	fcall	_PWM_Initialize
   785                           
   786                           ;main.c: 21:     TMR0_Initialize();
   787  002C  120A  118A  263A  120A  118A  	fcall	_TMR0_Initialize
   788                           
   789                           ;main.c: 22:     USART_Initialize();
   790  0031  120A  118A  2611  120A  118A  	fcall	_USART_Initialize
   791  0036                     l2451:
   792                           
   793                           ;main.c: 23:     Interrupt_Enable();
   794  0036  120A  118A  2654  120A  118A  	fcall	_Interrupt_Enable
   795                           
   796                           ;main.c: 25:     PR2 = 0xFF;
   797  003B  30FF               	movlw	255
   798  003C  1683               	bsf	3,5	;RP0=1, select bank1
   799  003D  1303               	bcf	3,6	;RP1=0, select bank1
   800  003E  0092               	movwf	18	;volatile
   801                           
   802                           ;main.c: 26:     T2CON = 0b00000111;
   803  003F  3007               	movlw	7
   804  0040  1283               	bcf	3,5	;RP0=0, select bank0
   805  0041  1303               	bcf	3,6	;RP1=0, select bank0
   806  0042  0092               	movwf	18	;volatile
   807  0043                     l2453:
   808                           
   809                           ;main.c: 28:     estagio = INTERROMPIDO;
   810  0043  01B5               	clrf	_estagio
   811  0044                     l2455:
   812                           
   813                           ;main.c: 29:     estado.botao1 = 0;
   814  0044  1076               	bcf	_estado,0
   815  0045                     l2457:
   816                           
   817                           ;main.c: 30:     estado.botao2 = 0;
   818  0045  10F6               	bcf	_estado,1
   819  0046                     l2459:
   820                           
   821                           ;main.c: 31:     estado.fimcurso = 0;
   822  0046  1176               	bcf	_estado,2
   823  0047                     l2461:
   824                           
   825                           ;main.c: 32:     estado.chaveNF = 0;
   826  0047  11F6               	bcf	_estado,3
   827  0048                     l2463:
   828                           
   829                           ;main.c: 33:     estado.chaveNA = 0;
   830  0048  1276               	bcf	_estado,4
   831  0049                     l2465:
   832                           
   833                           ;main.c: 34:     estado.chavecopo = 0;
   834  0049  12F6               	bcf	_estado,5
   835  004A                     l2467:
   836                           
   837                           ;main.c: 35:     timerbotao1 = 0;
   838  004A  01AF               	clrf	_timerbotao1
   839  004B  01B0               	clrf	_timerbotao1+1
   840  004C                     l2469:
   841                           
   842                           ;main.c: 36:     timerbotao2 = 0;
   843  004C  01AD               	clrf	_timerbotao2
   844  004D  01AE               	clrf	_timerbotao2+1
   845  004E                     l2471:
   846                           
   847                           ;main.c: 37:     timerfimcurso = 0;
   848  004E  01BA               	clrf	_timerfimcurso
   849  004F                     l2473:
   850                           
   851                           ;main.c: 38:     timerchaveNF = 0;
   852  004F  01B9               	clrf	_timerchaveNF
   853  0050                     l2475:
   854                           
   855                           ;main.c: 39:     timerchaveNA = 0;
   856  0050  01B8               	clrf	_timerchaveNA
   857  0051                     l2477:
   858                           
   859                           ;main.c: 40:     timerchavecopo = 0;
   860  0051  01B7               	clrf	_timerchavecopo
   861  0052                     l2479:
   862                           
   863                           ;main.c: 41:     timerpwm = 0;
   864  0052  01A9               	clrf	_timerpwm
   865  0053  01AA               	clrf	_timerpwm+1
   866  0054                     l2481:
   867                           
   868                           ;main.c: 42:     pwm_setado = 0;
   869  0054  01A7               	clrf	_pwm_setado
   870  0055  01A8               	clrf	_pwm_setado+1
   871  0056                     l92:	
   872                           ;main.c: 44:     while(1)
   873                           
   874  0056  0064               	clrwdt	;# 
   875  0057                     l2483:
   876                           
   877                           ;main.c: 48:         if(PORTBbits.RB0 == 0)
   878  0057  1283               	bcf	3,5	;RP0=0, select bank0
   879  0058  1303               	bcf	3,6	;RP1=0, select bank0
   880  0059  1806               	btfsc	6,0	;volatile
   881  005A  285C               	goto	u1821
   882  005B  285D               	goto	u1820
   883  005C                     u1821:
   884  005C  286C               	goto	l2491
   885  005D                     u1820:
   886  005D                     l2485:
   887                           
   888                           ;main.c: 49:         {;main.c: 50:             if(estado.botao1 == 0)
   889  005D  1876               	btfsc	_estado,0
   890  005E  2860               	goto	u1831
   891  005F  2861               	goto	u1830
   892  0060                     u1831:
   893  0060  286F               	goto	l2495
   894  0061                     u1830:
   895  0061                     l2487:
   896                           
   897                           ;main.c: 51:             {;main.c: 52:                 if(timerbotao1 > 100)
   898  0061  3000               	movlw	0
   899  0062  0230               	subwf	_timerbotao1+1,w
   900  0063  3065               	movlw	101
   901  0064  1903               	skipnz
   902  0065  022F               	subwf	_timerbotao1,w
   903  0066  1C03               	skipc
   904  0067  2869               	goto	u1841
   905  0068  286A               	goto	u1840
   906  0069                     u1841:
   907  0069  286F               	goto	l2495
   908  006A                     u1840:
   909  006A                     l2489:
   910                           
   911                           ;main.c: 53:                     estado.botao1 = 1;
   912  006A  1476               	bsf	_estado,0
   913  006B  286F               	goto	l2495
   914  006C                     l2491:
   915                           
   916                           ;main.c: 57:         {;main.c: 58:             timerbotao1 = 0;
   917  006C  01AF               	clrf	_timerbotao1
   918  006D  01B0               	clrf	_timerbotao1+1
   919  006E                     l2493:
   920                           
   921                           ;main.c: 59:             estado.botao1 = 0;
   922  006E  1076               	bcf	_estado,0
   923  006F                     l2495:
   924                           
   925                           ;main.c: 62:         if(PORTBbits.RB1 == 0)
   926  006F  1886               	btfsc	6,1	;volatile
   927  0070  2872               	goto	u1851
   928  0071  2873               	goto	u1850
   929  0072                     u1851:
   930  0072  2882               	goto	l2503
   931  0073                     u1850:
   932  0073                     l2497:
   933                           
   934                           ;main.c: 63:         {;main.c: 64:             if(estado.botao2 == 0)
   935  0073  18F6               	btfsc	_estado,1
   936  0074  2876               	goto	u1861
   937  0075  2877               	goto	u1860
   938  0076                     u1861:
   939  0076  2885               	goto	l2507
   940  0077                     u1860:
   941  0077                     l2499:
   942                           
   943                           ;main.c: 65:             {;main.c: 66:                 if(timerbotao2 > 100)
   944  0077  3000               	movlw	0
   945  0078  022E               	subwf	_timerbotao2+1,w
   946  0079  3065               	movlw	101
   947  007A  1903               	skipnz
   948  007B  022D               	subwf	_timerbotao2,w
   949  007C  1C03               	skipc
   950  007D  287F               	goto	u1871
   951  007E  2880               	goto	u1870
   952  007F                     u1871:
   953  007F  2885               	goto	l2507
   954  0080                     u1870:
   955  0080                     l2501:
   956                           
   957                           ;main.c: 67:                     estado.botao2 = 1;
   958  0080  14F6               	bsf	_estado,1
   959  0081  2885               	goto	l2507
   960  0082                     l2503:
   961                           
   962                           ;main.c: 71:         {;main.c: 72:             timerbotao2 = 0;
   963  0082  01AD               	clrf	_timerbotao2
   964  0083  01AE               	clrf	_timerbotao2+1
   965  0084                     l2505:
   966                           
   967                           ;main.c: 73:             estado.botao2 = 0;
   968  0084  10F6               	bcf	_estado,1
   969  0085                     l2507:
   970                           
   971                           ;main.c: 76:         if(PORTBbits.RB2 == 0)
   972  0085  1906               	btfsc	6,2	;volatile
   973  0086  2888               	goto	u1881
   974  0087  2889               	goto	u1880
   975  0088                     u1881:
   976  0088  2895               	goto	l2515
   977  0089                     u1880:
   978  0089                     l2509:
   979                           
   980                           ;main.c: 77:         {;main.c: 78:             if(estado.fimcurso == 0)
   981  0089  1976               	btfsc	_estado,2
   982  008A  288C               	goto	u1891
   983  008B  288D               	goto	u1890
   984  008C                     u1891:
   985  008C  28A7               	goto	l2531
   986  008D                     u1890:
   987  008D                     l2511:
   988                           
   989                           ;main.c: 79:             {;main.c: 80:                 if(timerfimcurso > 100)
   990  008D  3065               	movlw	101
   991  008E  023A               	subwf	_timerfimcurso,w
   992  008F  1C03               	skipc
   993  0090  2892               	goto	u1901
   994  0091  2893               	goto	u1900
   995  0092                     u1901:
   996  0092  28A7               	goto	l2531
   997  0093                     u1900:
   998  0093                     l2513:
   999                           
  1000                           ;main.c: 81:                     estado.fimcurso = 1;
  1001  0093  1576               	bsf	_estado,2
  1002  0094  28A7               	goto	l2531
  1003  0095                     l2515:
  1004                           
  1005                           ;main.c: 85:         {;main.c: 86:             timerfimcurso = 0;
  1006  0095  01BA               	clrf	_timerfimcurso
  1007  0096                     l2517:
  1008                           
  1009                           ;main.c: 87:             estado.fimcurso = 0;
  1010  0096  1176               	bcf	_estado,2
  1011  0097                     l2519:
  1012                           
  1013                           ;main.c: 88:             if(estado.testando == 1)
  1014  0097  1F76               	btfss	_estado,6
  1015  0098  289A               	goto	u1911
  1016  0099  289B               	goto	u1910
  1017  009A                     u1911:
  1018  009A  28A7               	goto	l2531
  1019  009B                     u1910:
  1020  009B                     l2521:
  1021                           
  1022                           ;main.c: 89:             {;main.c: 90:                 estagio = INTERROMPIDO;
  1023  009B  01B5               	clrf	_estagio
  1024  009C                     l2523:
  1025                           
  1026                           ;main.c: 91:                 estado.testando = 0;
  1027  009C  1376               	bcf	_estado,6
  1028  009D                     l2525:
  1029                           
  1030                           ;main.c: 92:                 comunicacao.endereco = 0x0F;
  1031  009D  300F               	movlw	15
  1032  009E  04F8               	iorwf	_comunicacao,f
  1033  009F                     l2527:
  1034                           
  1035                           ;main.c: 93:                 comunicacao.resposta = 0x00;
  1036  009F  300F               	movlw	-241
  1037  00A0  05F8               	andwf	_comunicacao,f
  1038  00A1                     l2529:
  1039                           
  1040                           ;main.c: 94:                 USART_Write(comunicacao.byte);
  1041  00A1  0878               	movf	_comunicacao,w
  1042  00A2  120A  118A  2630  120A  118A  	fcall	_USART_Write
  1043  00A7                     l2531:
  1044                           
  1045                           ;main.c: 98:         if(PORTBbits.RB3 == 0)
  1046  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1047  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1048  00A9  1986               	btfsc	6,3	;volatile
  1049  00AA  28AC               	goto	u1921
  1050  00AB  28AD               	goto	u1920
  1051  00AC                     u1921:
  1052  00AC  28BA               	goto	l2539
  1053  00AD                     u1920:
  1054  00AD                     l2533:
  1055                           
  1056                           ;main.c: 99:         {;main.c: 100:             if(estado.chaveNF == 0)
  1057  00AD  19F6               	btfsc	_estado,3
  1058  00AE  28B0               	goto	u1931
  1059  00AF  28B1               	goto	u1930
  1060  00B0                     u1931:
  1061  00B0  28BD               	goto	l2545
  1062  00B1                     u1930:
  1063  00B1                     l2535:
  1064                           
  1065                           ;main.c: 101:             {;main.c: 102:                 if(timerchaveNF > 100)
  1066  00B1  3065               	movlw	101
  1067  00B2  0239               	subwf	_timerchaveNF,w
  1068  00B3  1C03               	skipc
  1069  00B4  28B6               	goto	u1941
  1070  00B5  28B7               	goto	u1940
  1071  00B6                     u1941:
  1072  00B6  28BD               	goto	l2545
  1073  00B7                     u1940:
  1074  00B7                     l2537:
  1075                           
  1076                           ;main.c: 103:                 {;main.c: 104:                     estado.chaveNF = 1;
  1077  00B7  15F6               	bsf	_estado,3
  1078                           
  1079                           ;main.c: 105:                     PORTCbits.RC0 = 1;
  1080  00B8  1407               	bsf	7,0	;volatile
  1081  00B9  28BD               	goto	l2545
  1082  00BA                     l2539:
  1083                           
  1084                           ;main.c: 110:         {;main.c: 111:             timerchaveNF = 0;
  1085  00BA  01B9               	clrf	_timerchaveNF
  1086  00BB                     l2541:
  1087                           
  1088                           ;main.c: 112:             estado.chaveNF = 0;
  1089  00BB  11F6               	bcf	_estado,3
  1090  00BC                     l2543:
  1091                           
  1092                           ;main.c: 113:             PORTCbits.RC0 = 0;
  1093  00BC  1007               	bcf	7,0	;volatile
  1094  00BD                     l2545:
  1095                           
  1096                           ;main.c: 116:         if(PORTBbits.RB4 == 0)
  1097  00BD  1A06               	btfsc	6,4	;volatile
  1098  00BE  28C0               	goto	u1951
  1099  00BF  28C1               	goto	u1950
  1100  00C0                     u1951:
  1101  00C0  28CE               	goto	l2553
  1102  00C1                     u1950:
  1103  00C1                     l2547:
  1104                           
  1105                           ;main.c: 117:         {;main.c: 118:             if(estado.chaveNA == 0)
  1106  00C1  1A76               	btfsc	_estado,4
  1107  00C2  28C4               	goto	u1961
  1108  00C3  28C5               	goto	u1960
  1109  00C4                     u1961:
  1110  00C4  28D1               	goto	l2559
  1111  00C5                     u1960:
  1112  00C5                     l2549:
  1113                           
  1114                           ;main.c: 119:             {;main.c: 120:                 if(timerchaveNA > 100)
  1115  00C5  3065               	movlw	101
  1116  00C6  0238               	subwf	_timerchaveNA,w
  1117  00C7  1C03               	skipc
  1118  00C8  28CA               	goto	u1971
  1119  00C9  28CB               	goto	u1970
  1120  00CA                     u1971:
  1121  00CA  28D1               	goto	l2559
  1122  00CB                     u1970:
  1123  00CB                     l2551:
  1124                           
  1125                           ;main.c: 121:                 {;main.c: 122:                     estado.chaveNA = 1;
  1126  00CB  1676               	bsf	_estado,4
  1127                           
  1128                           ;main.c: 123:                     PORTCbits.RC1 = 1;
  1129  00CC  1487               	bsf	7,1	;volatile
  1130  00CD  28D1               	goto	l2559
  1131  00CE                     l2553:
  1132                           
  1133                           ;main.c: 128:         {;main.c: 129:             timerchaveNA = 0;
  1134  00CE  01B8               	clrf	_timerchaveNA
  1135  00CF                     l2555:
  1136                           
  1137                           ;main.c: 130:             estado.chaveNA = 0;
  1138  00CF  1276               	bcf	_estado,4
  1139  00D0                     l2557:
  1140                           
  1141                           ;main.c: 131:             PORTCbits.RC1 = 0;
  1142  00D0  1087               	bcf	7,1	;volatile
  1143  00D1                     l2559:
  1144                           
  1145                           ;main.c: 134:         if(PORTBbits.RB5 == 0)
  1146  00D1  1A86               	btfsc	6,5	;volatile
  1147  00D2  28D4               	goto	u1981
  1148  00D3  28D5               	goto	u1980
  1149  00D4                     u1981:
  1150  00D4  28E1               	goto	l2567
  1151  00D5                     u1980:
  1152  00D5                     l2561:
  1153                           
  1154                           ;main.c: 135:         {;main.c: 136:             if(estado.chavecopo == 0)
  1155  00D5  1AF6               	btfsc	_estado,5
  1156  00D6  28D8               	goto	u1991
  1157  00D7  28D9               	goto	u1990
  1158  00D8                     u1991:
  1159  00D8  28E3               	goto	l2571
  1160  00D9                     u1990:
  1161  00D9                     l2563:
  1162                           
  1163                           ;main.c: 137:             {;main.c: 138:                 if(timerchavecopo > 100)
  1164  00D9  3065               	movlw	101
  1165  00DA  0237               	subwf	_timerchavecopo,w
  1166  00DB  1C03               	skipc
  1167  00DC  28DE               	goto	u2001
  1168  00DD  28DF               	goto	u2000
  1169  00DE                     u2001:
  1170  00DE  28E3               	goto	l2571
  1171  00DF                     u2000:
  1172  00DF                     l2565:
  1173                           
  1174                           ;main.c: 139:                     estado.chavecopo = 1;
  1175  00DF  16F6               	bsf	_estado,5
  1176  00E0  28E3               	goto	l2571
  1177  00E1                     l2567:
  1178                           
  1179                           ;main.c: 143:         {;main.c: 144:             timerchavecopo = 0;
  1180  00E1  01B7               	clrf	_timerchavecopo
  1181  00E2                     l2569:
  1182                           
  1183                           ;main.c: 145:             estado.chavecopo = 0;
  1184  00E2  12F6               	bcf	_estado,5
  1185  00E3                     l2571:
  1186                           
  1187                           ;main.c: 148:         if(pwm_setado == 105)
  1188  00E3  3069               	movlw	105
  1189  00E4  0627               	xorwf	_pwm_setado,w
  1190  00E5  0428               	iorwf	_pwm_setado+1,w
  1191  00E6  1D03               	btfss	3,2
  1192  00E7  28E9               	goto	u2011
  1193  00E8  28EA               	goto	u2010
  1194  00E9                     u2011:
  1195  00E9  290A               	goto	l2585
  1196  00EA                     u2010:
  1197  00EA                     l2573:
  1198                           
  1199                           ;main.c: 149:         {;main.c: 150:             if(pwm_atual == 0)
  1200  00EA  0825               	movf	_pwm_atual,w
  1201  00EB  0426               	iorwf	_pwm_atual+1,w
  1202  00EC  1D03               	btfss	3,2
  1203  00ED  28EF               	goto	u2021
  1204  00EE  28F0               	goto	u2020
  1205  00EF                     u2021:
  1206  00EF  28F8               	goto	l2579
  1207  00F0                     u2020:
  1208  00F0                     l2575:
  1209                           
  1210                           ;main.c: 151:             {;main.c: 152:                 PORTCbits.RC2 = 1;
  1211  00F0  1507               	bsf	7,2	;volatile
  1212  00F1                     l2577:
  1213                           
  1214                           ;main.c: 153:                 pwm_atual++;
  1215  00F1  3001               	movlw	1
  1216  00F2  07A5               	addwf	_pwm_atual,f
  1217  00F3  1803               	skipnc
  1218  00F4  0AA6               	incf	_pwm_atual+1,f
  1219  00F5  3000               	movlw	0
  1220  00F6  07A6               	addwf	_pwm_atual+1,f
  1221                           
  1222                           ;main.c: 154:             }
  1223  00F7  290A               	goto	l2585
  1224  00F8                     l2579:
  1225                           
  1226                           ;main.c: 156:             {;main.c: 157:                 if(pwm_atual == 105)
  1227  00F8  3069               	movlw	105
  1228  00F9  0625               	xorwf	_pwm_atual,w
  1229  00FA  0426               	iorwf	_pwm_atual+1,w
  1230  00FB  1D03               	btfss	3,2
  1231  00FC  28FE               	goto	u2031
  1232  00FD  28FF               	goto	u2030
  1233  00FE                     u2031:
  1234  00FE  290A               	goto	l2585
  1235  00FF                     u2030:
  1236  00FF                     l2581:
  1237                           
  1238                           ;main.c: 158:                 {;main.c: 159:                     CCP1CON = 0b00001111;
  1239  00FF  300F               	movlw	15
  1240  0100  0097               	movwf	23	;volatile
  1241  0101                     l2583:
  1242                           
  1243                           ;main.c: 160:                     PWM_LoadDutyValue(105);
  1244  0101  3069               	movlw	105
  1245  0102  00F4               	movwf	PWM_LoadDutyValue@dutyValue
  1246  0103  3000               	movlw	0
  1247  0104  00F5               	movwf	PWM_LoadDutyValue@dutyValue+1
  1248  0105  120A  118A  25CF  120A  118A  	fcall	_PWM_LoadDutyValue
  1249  010A                     l2585:
  1250                           
  1251                           ;main.c: 165:         if(pwm_setado == 170)
  1252  010A  30AA               	movlw	170
  1253  010B  1283               	bcf	3,5	;RP0=0, select bank0
  1254  010C  1303               	bcf	3,6	;RP1=0, select bank0
  1255  010D  0627               	xorwf	_pwm_setado,w
  1256  010E  0428               	iorwf	_pwm_setado+1,w
  1257  010F  1D03               	btfss	3,2
  1258  0110  2912               	goto	u2041
  1259  0111  2913               	goto	u2040
  1260  0112                     u2041:
  1261  0112  2933               	goto	l2599
  1262  0113                     u2040:
  1263  0113                     l2587:
  1264                           
  1265                           ;main.c: 166:         {;main.c: 167:             if(pwm_atual == 0)
  1266  0113  0825               	movf	_pwm_atual,w
  1267  0114  0426               	iorwf	_pwm_atual+1,w
  1268  0115  1D03               	btfss	3,2
  1269  0116  2918               	goto	u2051
  1270  0117  2919               	goto	u2050
  1271  0118                     u2051:
  1272  0118  2921               	goto	l2593
  1273  0119                     u2050:
  1274  0119                     l2589:
  1275                           
  1276                           ;main.c: 168:             {;main.c: 169:                 PORTCbits.RC2 = 1;
  1277  0119  1507               	bsf	7,2	;volatile
  1278  011A                     l2591:
  1279                           
  1280                           ;main.c: 170:                 pwm_atual++;
  1281  011A  3001               	movlw	1
  1282  011B  07A5               	addwf	_pwm_atual,f
  1283  011C  1803               	skipnc
  1284  011D  0AA6               	incf	_pwm_atual+1,f
  1285  011E  3000               	movlw	0
  1286  011F  07A6               	addwf	_pwm_atual+1,f
  1287                           
  1288                           ;main.c: 171:             }
  1289  0120  2933               	goto	l2599
  1290  0121                     l2593:
  1291                           
  1292                           ;main.c: 173:             {;main.c: 174:                 if(pwm_atual == 170)
  1293  0121  30AA               	movlw	170
  1294  0122  0625               	xorwf	_pwm_atual,w
  1295  0123  0426               	iorwf	_pwm_atual+1,w
  1296  0124  1D03               	btfss	3,2
  1297  0125  2927               	goto	u2061
  1298  0126  2928               	goto	u2060
  1299  0127                     u2061:
  1300  0127  2933               	goto	l2599
  1301  0128                     u2060:
  1302  0128                     l2595:
  1303                           
  1304                           ;main.c: 175:                 {;main.c: 176:                     CCP1CON = 0b00001111;
  1305  0128  300F               	movlw	15
  1306  0129  0097               	movwf	23	;volatile
  1307  012A                     l2597:
  1308                           
  1309                           ;main.c: 177:                     PWM_LoadDutyValue(170);
  1310  012A  30AA               	movlw	170
  1311  012B  00F4               	movwf	PWM_LoadDutyValue@dutyValue
  1312  012C  3000               	movlw	0
  1313  012D  00F5               	movwf	PWM_LoadDutyValue@dutyValue+1
  1314  012E  120A  118A  25CF  120A  118A  	fcall	_PWM_LoadDutyValue
  1315  0133                     l2599:
  1316                           
  1317                           ;main.c: 182:         if(pwm_setado == 0)
  1318  0133  1283               	bcf	3,5	;RP0=0, select bank0
  1319  0134  1303               	bcf	3,6	;RP1=0, select bank0
  1320  0135  0827               	movf	_pwm_setado,w
  1321  0136  0428               	iorwf	_pwm_setado+1,w
  1322  0137  1D03               	btfss	3,2
  1323  0138  293A               	goto	u2071
  1324  0139  293B               	goto	u2070
  1325  013A                     u2071:
  1326  013A  293F               	goto	l2605
  1327  013B                     u2070:
  1328  013B                     l2601:
  1329                           
  1330                           ;main.c: 183:         {;main.c: 184:             CCP1CON = 0b00000000;
  1331  013B  0197               	clrf	23	;volatile
  1332  013C                     l2603:
  1333                           
  1334                           ;main.c: 185:             PORTCbits.RC2 = 0;
  1335  013C  1107               	bcf	7,2	;volatile
  1336                           
  1337                           ;main.c: 186:             pwm_atual = 0;
  1338  013D  01A5               	clrf	_pwm_atual
  1339  013E  01A6               	clrf	_pwm_atual+1
  1340  013F                     l2605:
  1341                           
  1342                           ;main.c: 189:         if(timerpwm > 10)
  1343  013F  3000               	movlw	0
  1344  0140  022A               	subwf	_timerpwm+1,w
  1345  0141  300B               	movlw	11
  1346  0142  1903               	skipnz
  1347  0143  0229               	subwf	_timerpwm,w
  1348  0144  1C03               	skipc
  1349  0145  2947               	goto	u2081
  1350  0146  2948               	goto	u2080
  1351  0147                     u2081:
  1352  0147  2CEC               	goto	l2929
  1353  0148                     u2080:
  1354  0148                     l2607:
  1355                           
  1356                           ;main.c: 190:         {;main.c: 191:             timerpwm = 0;
  1357  0148  01A9               	clrf	_timerpwm
  1358  0149  01AA               	clrf	_timerpwm+1
  1359  014A                     l2609:
  1360                           
  1361                           ;main.c: 192:             if(pwm_atual != pwm_setado)
  1362  014A  0828               	movf	_pwm_setado+1,w
  1363  014B  0626               	xorwf	_pwm_atual+1,w
  1364  014C  1D03               	skipz
  1365  014D  2950               	goto	u2095
  1366  014E  0827               	movf	_pwm_setado,w
  1367  014F  0625               	xorwf	_pwm_atual,w
  1368  0150                     u2095:
  1369  0150  1903               	skipnz
  1370  0151  2953               	goto	u2091
  1371  0152  2954               	goto	u2090
  1372  0153                     u2091:
  1373  0153  2CEC               	goto	l2929
  1374  0154                     u2090:
  1375  0154                     l2611:
  1376                           
  1377                           ;main.c: 193:             {;main.c: 194:                 if(pwm_atual < pwm_setado)
  1378  0154  0828               	movf	_pwm_setado+1,w
  1379  0155  0226               	subwf	_pwm_atual+1,w
  1380  0156  1D03               	skipz
  1381  0157  295A               	goto	u2105
  1382  0158  0827               	movf	_pwm_setado,w
  1383  0159  0225               	subwf	_pwm_atual,w
  1384  015A                     u2105:
  1385  015A  1803               	skipnc
  1386  015B  295D               	goto	u2101
  1387  015C  295E               	goto	u2100
  1388  015D                     u2101:
  1389  015D  2977               	goto	l2619
  1390  015E                     u2100:
  1391  015E                     l2613:
  1392                           
  1393                           ;main.c: 195:                 {;main.c: 196:                     if(pwm_atual < 1000)
  1394  015E  3003               	movlw	3
  1395  015F  0226               	subwf	_pwm_atual+1,w
  1396  0160  30E8               	movlw	232
  1397  0161  1903               	skipnz
  1398  0162  0225               	subwf	_pwm_atual,w
  1399  0163  1803               	skipnc
  1400  0164  2966               	goto	u2111
  1401  0165  2967               	goto	u2110
  1402  0166                     u2111:
  1403  0166  296D               	goto	l2617
  1404  0167                     u2110:
  1405  0167                     l2615:
  1406                           
  1407                           ;main.c: 197:                         pwm_atual++;
  1408  0167  3001               	movlw	1
  1409  0168  07A5               	addwf	_pwm_atual,f
  1410  0169  1803               	skipnc
  1411  016A  0AA6               	incf	_pwm_atual+1,f
  1412  016B  3000               	movlw	0
  1413  016C  07A6               	addwf	_pwm_atual+1,f
  1414  016D                     l2617:
  1415                           
  1416                           ;main.c: 198:                     PWM_LoadDutyValue(pwm_atual);
  1417  016D  0826               	movf	_pwm_atual+1,w
  1418  016E  00F5               	movwf	PWM_LoadDutyValue@dutyValue+1
  1419  016F  0825               	movf	_pwm_atual,w
  1420  0170  00F4               	movwf	PWM_LoadDutyValue@dutyValue
  1421  0171  120A  118A  25CF  120A  118A  	fcall	_PWM_LoadDutyValue
  1422                           
  1423                           ;main.c: 199:                 }
  1424  0176  2CEC               	goto	l2929
  1425  0177                     l2619:
  1426                           
  1427                           ;main.c: 201:                 {;main.c: 202:                     if(pwm_atual > 0)
  1428  0177  0825               	movf	_pwm_atual,w
  1429  0178  0426               	iorwf	_pwm_atual+1,w
  1430  0179  1903               	btfsc	3,2
  1431  017A  297C               	goto	u2121
  1432  017B  297D               	goto	u2120
  1433  017C                     u2121:
  1434  017C  296D               	goto	l2617
  1435  017D                     u2120:
  1436  017D                     l2621:
  1437                           
  1438                           ;main.c: 203:                         pwm_atual--;
  1439  017D  3001               	movlw	1
  1440  017E  02A5               	subwf	_pwm_atual,f
  1441  017F  3000               	movlw	0
  1442  0180  1C03               	skipc
  1443  0181  03A6               	decf	_pwm_atual+1,f
  1444  0182  02A6               	subwf	_pwm_atual+1,f
  1445  0183  296D               	goto	l2617
  1446  0184                     l2625:
  1447                           
  1448                           ;main.c: 212:             {;main.c: 213:                 if(timer < 500)
  1449  0184  3001               	movlw	1
  1450  0185  022C               	subwf	_timer+1,w
  1451  0186  30F4               	movlw	244
  1452  0187  1903               	skipnz
  1453  0188  022B               	subwf	_timer,w
  1454  0189  1803               	skipnc
  1455  018A  298C               	goto	u2131
  1456  018B  298D               	goto	u2130
  1457  018C                     u2131:
  1458  018C  2991               	goto	l135
  1459  018D                     u2130:
  1460  018D                     l2627:
  1461                           
  1462                           ;main.c: 214:                 {;main.c: 215:                     PORTAbits.RA1 = 1;
  1463  018D  1485               	bsf	5,1	;volatile
  1464                           
  1465                           ;main.c: 216:                     PORTAbits.RA3 = 1;
  1466  018E  1585               	bsf	5,3	;volatile
  1467                           
  1468                           ;main.c: 217:                     PORTAbits.RA2 = 1;
  1469  018F  1505               	bsf	5,2	;volatile
  1470                           
  1471                           ;main.c: 218:                 }
  1472  0190  299F               	goto	l136
  1473  0191                     l135:	
  1474                           ;main.c: 219:                 else
  1475                           
  1476                           
  1477                           ;main.c: 220:                 {;main.c: 221:                     PORTAbits.RA1 = 0;
  1478  0191  1085               	bcf	5,1	;volatile
  1479                           
  1480                           ;main.c: 222:                     PORTAbits.RA3 = 0;
  1481  0192  1185               	bcf	5,3	;volatile
  1482                           
  1483                           ;main.c: 223:                     PORTAbits.RA2 = 0;
  1484  0193  1105               	bcf	5,2	;volatile
  1485  0194                     l2629:
  1486                           
  1487                           ;main.c: 224:                     if(timer > (500*2))
  1488  0194  3003               	movlw	3
  1489  0195  022C               	subwf	_timer+1,w
  1490  0196  30E9               	movlw	233
  1491  0197  1903               	skipnz
  1492  0198  022B               	subwf	_timer,w
  1493  0199  1C03               	skipc
  1494  019A  299C               	goto	u2141
  1495  019B  299D               	goto	u2140
  1496  019C                     u2141:
  1497  019C  299F               	goto	l136
  1498  019D                     u2140:
  1499  019D                     l2631:
  1500                           
  1501                           ;main.c: 225:                         timer = 0;
  1502  019D  01AB               	clrf	_timer
  1503  019E  01AC               	clrf	_timer+1
  1504  019F                     l136:	
  1505                           ;main.c: 226:                 }
  1506                           
  1507                           
  1508                           ;main.c: 227:                 pwm_setado = 0;
  1509  019F  01A7               	clrf	_pwm_setado
  1510  01A0  01A8               	clrf	_pwm_setado+1
  1511  01A1                     l2633:
  1512                           
  1513                           ;main.c: 228:                 PORTCbits.RC5 = 0;
  1514  01A1  1287               	bcf	7,5	;volatile
  1515  01A2                     l2635:
  1516                           
  1517                           ;main.c: 229:                 PORTAbits.RA5 = 0;
  1518  01A2  1285               	bcf	5,5	;volatile
  1519  01A3                     l2637:
  1520                           
  1521                           ;main.c: 230:                 if((estado.botao1 == 1) && (estado.botao2 == 1))
  1522  01A3  1C76               	btfss	_estado,0
  1523  01A4  29A6               	goto	u2151
  1524  01A5  29A7               	goto	u2150
  1525  01A6                     u2151:
  1526  01A6  2856               	goto	l92
  1527  01A7                     u2150:
  1528  01A7                     l2639:
  1529  01A7  1CF6               	btfss	_estado,1
  1530  01A8  29AA               	goto	u2161
  1531  01A9  29AB               	goto	u2160
  1532  01AA                     u2161:
  1533  01AA  2856               	goto	l92
  1534  01AB                     u2160:
  1535  01AB                     l2641:
  1536                           
  1537                           ;main.c: 231:                     estagio = TESTE_BOTOES;
  1538  01AB  01B5               	clrf	_estagio
  1539  01AC  0AB5               	incf	_estagio,f
  1540  01AD  2856               	goto	l92
  1541  01AE                     l140:	
  1542                           ;main.c: 235:             case TESTE_BOTOES:
  1543                           
  1544                           
  1545                           ;main.c: 236:             {;main.c: 237:                 if((estado.botao1 == 1) && (est
      +                          ado.botao2 == 1))
  1546  01AE  1C76               	btfss	_estado,0
  1547  01AF  29B1               	goto	u2171
  1548  01B0  29B2               	goto	u2170
  1549  01B1                     u2171:
  1550  01B1  2856               	goto	l92
  1551  01B2                     u2170:
  1552  01B2                     l2643:
  1553  01B2  1CF6               	btfss	_estado,1
  1554  01B3  29B5               	goto	u2181
  1555  01B4  29B6               	goto	u2180
  1556  01B5                     u2181:
  1557  01B5  2856               	goto	l92
  1558  01B6                     u2180:
  1559  01B6                     l2645:
  1560                           
  1561                           ;main.c: 238:                 {;main.c: 239:                     if((timerbotao1 < 500) 
      +                          && (timerbotao2 < 500))
  1562  01B6  3001               	movlw	1
  1563  01B7  0230               	subwf	_timerbotao1+1,w
  1564  01B8  30F4               	movlw	244
  1565  01B9  1903               	skipnz
  1566  01BA  022F               	subwf	_timerbotao1,w
  1567  01BB  1803               	skipnc
  1568  01BC  29BE               	goto	u2191
  1569  01BD  29BF               	goto	u2190
  1570  01BE                     u2191:
  1571  01BE  2D37               	goto	l139
  1572  01BF                     u2190:
  1573  01BF                     l2647:
  1574  01BF  3001               	movlw	1
  1575  01C0  022E               	subwf	_timerbotao2+1,w
  1576  01C1  30F4               	movlw	244
  1577  01C2  1903               	skipnz
  1578  01C3  022D               	subwf	_timerbotao2,w
  1579  01C4  1803               	skipnc
  1580  01C5  29C7               	goto	u2201
  1581  01C6  29C8               	goto	u2200
  1582  01C7                     u2201:
  1583  01C7  2D37               	goto	l139
  1584  01C8                     u2200:
  1585  01C8                     l2649:
  1586                           
  1587                           ;main.c: 240:                         estagio = INICIA_TESTE;
  1588  01C8  3002               	movlw	2
  1589  01C9  00BD               	movwf	??_main
  1590  01CA  083D               	movf	??_main,w
  1591  01CB  00B5               	movwf	_estagio
  1592  01CC  2856               	goto	l92
  1593  01CD                     l143:	
  1594                           ;main.c: 245:             case INICIA_TESTE:
  1595                           
  1596                           
  1597                           ;main.c: 246:             {;main.c: 247:                 PORTAbits.RA1 = 0;
  1598  01CD  1085               	bcf	5,1	;volatile
  1599                           
  1600                           ;main.c: 248:                 PORTAbits.RA3 = 0;
  1601  01CE  1185               	bcf	5,3	;volatile
  1602                           
  1603                           ;main.c: 249:                 PORTAbits.RA2 = 1;
  1604  01CF  1505               	bsf	5,2	;volatile
  1605                           
  1606                           ;main.c: 250:                 PORTAbits.RA0 = 0;
  1607  01D0  1005               	bcf	5,0	;volatile
  1608                           
  1609                           ;main.c: 251:                 PORTAbits.RA5 = 1;
  1610  01D1  1685               	bsf	5,5	;volatile
  1611                           
  1612                           ;main.c: 252:                 estado.reteste = 0;
  1613  01D2  13F6               	bcf	_estado,7
  1614                           
  1615                           ;main.c: 253:                 estado.falha = 0;
  1616  01D3  1077               	bcf	_estado+1,0
  1617  01D4                     l2651:
  1618                           
  1619                           ;main.c: 254:                 endereco = 0;
  1620  01D4  01F9               	clrf	_endereco
  1621                           
  1622                           ;main.c: 255:                 escravo.byte = 0;
  1623  01D5  01A3               	clrf	_escravo
  1624  01D6  01A4               	clrf	_escravo+1
  1625                           
  1626                           ;main.c: 256:                 timer = 0;
  1627  01D7  01AB               	clrf	_timer
  1628  01D8  01AC               	clrf	_timer+1
  1629  01D9                     l2653:
  1630                           
  1631                           ;main.c: 257:                 estagio = TESTE_TAMPA_FECHADA;
  1632  01D9  3003               	movlw	3
  1633  01DA  00BD               	movwf	??_main
  1634  01DB  083D               	movf	??_main,w
  1635  01DC  00B5               	movwf	_estagio
  1636                           
  1637                           ;main.c: 258:             };main.c: 259:             break;
  1638  01DD  2856               	goto	l92
  1639  01DE                     l2655:
  1640                           
  1641                           ;main.c: 262:             {;main.c: 263:                 if(timer > 5000)
  1642  01DE  3013               	movlw	19
  1643  01DF  022C               	subwf	_timer+1,w
  1644  01E0  3089               	movlw	137
  1645  01E1  1903               	skipnz
  1646  01E2  022B               	subwf	_timer,w
  1647  01E3  1C03               	skipc
  1648  01E4  29E6               	goto	u2211
  1649  01E5  29E7               	goto	u2210
  1650  01E6                     u2211:
  1651  01E6  29EC               	goto	l145
  1652  01E7                     u2210:
  1653  01E7                     l2657:
  1654                           
  1655                           ;main.c: 264:                     estagio = FALHA_FIM_CURSO;
  1656  01E7  3011               	movlw	17
  1657  01E8  00BD               	movwf	??_main
  1658  01E9  083D               	movf	??_main,w
  1659  01EA  00B5               	movwf	_estagio
  1660  01EB  2856               	goto	l92
  1661  01EC                     l145:	
  1662                           ;main.c: 265:                 else
  1663                           
  1664                           
  1665                           ;main.c: 266:                 {;main.c: 267:                     if(estado.fimcurso == 1
      +                          )
  1666  01EC  1D76               	btfss	_estado,2
  1667  01ED  29EF               	goto	u2221
  1668  01EE  29F0               	goto	u2220
  1669  01EF                     u2221:
  1670  01EF  2D37               	goto	l139
  1671  01F0                     u2220:
  1672  01F0                     l2659:
  1673                           
  1674                           ;main.c: 268:                     {;main.c: 269:                         timer = 0;
  1675  01F0  01AB               	clrf	_timer
  1676  01F1  01AC               	clrf	_timer+1
  1677  01F2                     l2661:
  1678                           
  1679                           ;main.c: 270:                         estagio = ALIMENTA_PLACA;
  1680  01F2  3004               	movlw	4
  1681  01F3  00BD               	movwf	??_main
  1682  01F4  083D               	movf	??_main,w
  1683  01F5  00B5               	movwf	_estagio
  1684  01F6  2856               	goto	l92
  1685  01F7                     l148:	
  1686                           ;main.c: 276:             case ALIMENTA_PLACA:
  1687                           
  1688                           
  1689                           ;main.c: 277:             {;main.c: 278:                 estado.testando = 1;
  1690  01F7  1776               	bsf	_estado,6
  1691                           
  1692                           ;main.c: 279:                 if(estado.chaveNA == 1)
  1693  01F8  1E76               	btfss	_estado,4
  1694  01F9  29FB               	goto	u2231
  1695  01FA  29FC               	goto	u2230
  1696  01FB                     u2231:
  1697  01FB  29FF               	goto	l149
  1698  01FC                     u2230:
  1699  01FC                     l2663:
  1700                           
  1701                           ;main.c: 280:                     pwm_setado = 0;
  1702  01FC  01A7               	clrf	_pwm_setado
  1703  01FD  01A8               	clrf	_pwm_setado+1
  1704  01FE  2A0C               	goto	l150
  1705  01FF                     l149:	
  1706                           ;main.c: 281:                 else
  1707                           
  1708                           
  1709                           ;main.c: 282:                 {;main.c: 283:                     if(estado.chavecopo == 
      +                          1)
  1710  01FF  1EF6               	btfss	_estado,5
  1711  0200  2A02               	goto	u2241
  1712  0201  2A03               	goto	u2240
  1713  0202                     u2241:
  1714  0202  2A08               	goto	l2667
  1715  0203                     u2240:
  1716  0203                     l2665:
  1717                           
  1718                           ;main.c: 284:                         pwm_setado = 170;
  1719  0203  30AA               	movlw	170
  1720  0204  00A7               	movwf	_pwm_setado
  1721  0205  3000               	movlw	0
  1722  0206  00A8               	movwf	_pwm_setado+1
  1723  0207  2A0C               	goto	l150
  1724  0208                     l2667:
  1725                           
  1726                           ;main.c: 286:                         pwm_setado = 105;
  1727  0208  3069               	movlw	105
  1728  0209  00A7               	movwf	_pwm_setado
  1729  020A  3000               	movlw	0
  1730  020B  00A8               	movwf	_pwm_setado+1
  1731  020C                     l150:	
  1732                           ;main.c: 287:                 }
  1733                           
  1734                           
  1735                           ;main.c: 288:                 if(timer > 2000)
  1736  020C  3007               	movlw	7
  1737  020D  022C               	subwf	_timer+1,w
  1738  020E  30D1               	movlw	209
  1739  020F  1903               	skipnz
  1740  0210  022B               	subwf	_timer,w
  1741  0211  1C03               	skipc
  1742  0212  2A14               	goto	u2251
  1743  0213  2A15               	goto	u2250
  1744  0214                     u2251:
  1745  0214  2856               	goto	l92
  1746  0215                     u2250:
  1747  0215                     l2669:
  1748                           
  1749                           ;main.c: 289:                 {;main.c: 290:                     PORTCbits.RC5 = 1;
  1750  0215  1687               	bsf	7,5	;volatile
  1751  0216                     l2671:
  1752                           
  1753                           ;main.c: 291:                     comunicacao.endereco = 0x0F;
  1754  0216  300F               	movlw	15
  1755  0217  04F8               	iorwf	_comunicacao,f
  1756  0218                     l2673:
  1757                           
  1758                           ;main.c: 292:                     if(estado.chaveNF == 1)
  1759  0218  1DF6               	btfss	_estado,3
  1760  0219  2A1B               	goto	u2261
  1761  021A  2A1C               	goto	u2260
  1762  021B                     u2261:
  1763  021B  2A21               	goto	l154
  1764  021C                     u2260:
  1765  021C                     l2675:
  1766                           
  1767                           ;main.c: 293:                         comunicacao.resposta = 0x09;
  1768  021C  0878               	movf	_comunicacao,w
  1769  021D  390F               	andlw	-241
  1770  021E  3890               	iorlw	144
  1771  021F  00F8               	movwf	_comunicacao
  1772  0220  2A2E               	goto	l2681
  1773  0221                     l154:	
  1774                           ;main.c: 294:                     else
  1775                           
  1776                           
  1777                           ;main.c: 295:                     {;main.c: 296:                         if(estado.chave
      +                          NA == 1)
  1778  0221  1E76               	btfss	_estado,4
  1779  0222  2A24               	goto	u2271
  1780  0223  2A25               	goto	u2270
  1781  0224                     u2271:
  1782  0224  2A2A               	goto	l2679
  1783  0225                     u2270:
  1784  0225                     l2677:
  1785                           
  1786                           ;main.c: 297:                             comunicacao.resposta = 0x05;
  1787  0225  0878               	movf	_comunicacao,w
  1788  0226  390F               	andlw	-241
  1789  0227  3850               	iorlw	80
  1790  0228  00F8               	movwf	_comunicacao
  1791  0229  2A2E               	goto	l2681
  1792  022A                     l2679:
  1793                           
  1794                           ;main.c: 299:                             comunicacao.resposta = 0x03;
  1795  022A  0878               	movf	_comunicacao,w
  1796  022B  390F               	andlw	-241
  1797  022C  3830               	iorlw	48
  1798  022D  00F8               	movwf	_comunicacao
  1799  022E                     l2681:
  1800                           
  1801                           ;main.c: 301:                     USART_Write(comunicacao.byte);
  1802  022E  0878               	movf	_comunicacao,w
  1803  022F  120A  118A  2630  120A  118A  	fcall	_USART_Write
  1804  0234                     l2683:
  1805                           
  1806                           ;main.c: 302:                     timer = 0;
  1807  0234  1283               	bcf	3,5	;RP0=0, select bank0
  1808  0235  1303               	bcf	3,6	;RP1=0, select bank0
  1809  0236  01AB               	clrf	_timer
  1810  0237  01AC               	clrf	_timer+1
  1811  0238                     l2685:
  1812                           
  1813                           ;main.c: 303:                     estagio = ESTABILIZACAO;
  1814  0238  3005               	movlw	5
  1815  0239  00BD               	movwf	??_main
  1816  023A  083D               	movf	??_main,w
  1817  023B  00B5               	movwf	_estagio
  1818  023C  2856               	goto	l92
  1819  023D                     l2687:
  1820                           
  1821                           ;main.c: 309:             {;main.c: 310:                 if(timer > 5000)
  1822  023D  3013               	movlw	19
  1823  023E  022C               	subwf	_timer+1,w
  1824  023F  3089               	movlw	137
  1825  0240  1903               	skipnz
  1826  0241  022B               	subwf	_timer,w
  1827  0242  1C03               	skipc
  1828  0243  2A45               	goto	u2281
  1829  0244  2A46               	goto	u2280
  1830  0245                     u2281:
  1831  0245  2A4A               	goto	l2691
  1832  0246                     u2280:
  1833  0246                     l2689:
  1834                           
  1835                           ;main.c: 311:                     estagio = TESTE_LIGA;
  1836  0246  3006               	movlw	6
  1837  0247  00BD               	movwf	??_main
  1838  0248  083D               	movf	??_main,w
  1839  0249  00B5               	movwf	_estagio
  1840  024A                     l2691:
  1841                           
  1842                           ;main.c: 313:                 if(USART_RX_Ready() == 0)
  1843  024A  120A  118A  264C  120A  118A  	fcall	_USART_RX_Ready
  1844  024F  3A00               	xorlw	0
  1845  0250  1D03               	skipz
  1846  0251  2A53               	goto	u2291
  1847  0252  2A54               	goto	u2290
  1848  0253                     u2291:
  1849  0253  2A58               	goto	l2695
  1850  0254                     u2290:
  1851  0254                     l2693:
  1852                           
  1853                           ;main.c: 314:                     timeoutRx = 0;
  1854  0254  1283               	bcf	3,5	;RP0=0, select bank0
  1855  0255  1303               	bcf	3,6	;RP1=0, select bank0
  1856  0256  01B6               	clrf	_timeoutRx
  1857  0257  2A66               	goto	l2701
  1858  0258                     l2695:
  1859                           
  1860                           ;main.c: 316:                 {;main.c: 317:                     if(timeoutRx > 80)
  1861  0258  3051               	movlw	81
  1862  0259  1283               	bcf	3,5	;RP0=0, select bank0
  1863  025A  1303               	bcf	3,6	;RP1=0, select bank0
  1864  025B  0236               	subwf	_timeoutRx,w
  1865  025C  1C03               	skipc
  1866  025D  2A5F               	goto	u2301
  1867  025E  2A60               	goto	u2300
  1868  025F                     u2301:
  1869  025F  2A66               	goto	l2701
  1870  0260                     u2300:
  1871  0260                     l2697:
  1872                           
  1873                           ;main.c: 318:                     {;main.c: 319:                         USART_RX_Clear_
      +                          Buffer();
  1874  0260  120A  118A  2650  120A  118A  	fcall	_USART_RX_Clear_Buffer
  1875  0265  2A54               	goto	l2693
  1876  0266                     l2701:
  1877                           
  1878                           ;main.c: 324:                 if(USART_RX_Ready() == 1)
  1879  0266  120A  118A  264C  120A  118A  	fcall	_USART_RX_Ready
  1880  026B  3A01               	xorlw	1
  1881  026C  1D03               	skipz
  1882  026D  2A6F               	goto	u2311
  1883  026E  2A70               	goto	u2310
  1884  026F                     u2311:
  1885  026F  2856               	goto	l92
  1886  0270                     u2310:
  1887  0270                     l2703:
  1888                           
  1889                           ;main.c: 325:                 {;main.c: 326:                     comunicacao.byte = USAR
      +                          T_Read();
  1890  0270  120A  118A  2622  120A  118A  	fcall	_USART_Read
  1891  0275  1283               	bcf	3,5	;RP0=0, select bank0
  1892  0276  1303               	bcf	3,6	;RP1=0, select bank0
  1893  0277  00BD               	movwf	??_main
  1894  0278  083D               	movf	??_main,w
  1895  0279  00F8               	movwf	_comunicacao
  1896  027A                     l2705:
  1897                           
  1898                           ;main.c: 327:                     if(comunicacao.endereco == 0x00)
  1899  027A  0878               	movf	_comunicacao,w
  1900  027B  390F               	andlw	15
  1901  027C  3A00               	xorlw	0
  1902  027D  1D03               	skipz
  1903  027E  2A80               	goto	u2321
  1904  027F  2A81               	goto	u2320
  1905  0280                     u2321:
  1906  0280  2856               	goto	l92
  1907  0281                     u2320:
  1908  0281                     l2707:
  1909                           
  1910                           ;main.c: 328:                     {;main.c: 329:                         if(comunicacao.
      +                          resposta == 0x0F)
  1911  0281  0E78               	swapf	_comunicacao,w
  1912  0282  390F               	andlw	15
  1913  0283  3A0F               	xorlw	15
  1914  0284  1D03               	skipz
  1915  0285  2A87               	goto	u2331
  1916  0286  2A88               	goto	u2330
  1917  0287                     u2331:
  1918  0287  2856               	goto	l92
  1919  0288                     u2330:
  1920  0288                     l2709:
  1921                           
  1922                           ;main.c: 330:                         {;main.c: 331:                             estagio
      +                           = FALHA;
  1923  0288  3012               	movlw	18
  1924  0289  00BD               	movwf	??_main
  1925  028A  083D               	movf	??_main,w
  1926  028B  00B5               	movwf	_estagio
  1927  028C                     l2711:
  1928                           
  1929                           ;main.c: 332:                             estado.testando = 0;
  1930  028C  1376               	bcf	_estado,6
  1931  028D                     l2713:
  1932                           
  1933                           ;main.c: 333:                             comunicacao.endereco = 0x0F;
  1934  028D  300F               	movlw	15
  1935  028E  04F8               	iorwf	_comunicacao,f
  1936  028F                     l2715:
  1937                           
  1938                           ;main.c: 334:                             comunicacao.resposta = 0x00;
  1939  028F  300F               	movlw	-241
  1940  0290  05F8               	andwf	_comunicacao,f
  1941  0291                     l2717:
  1942                           
  1943                           ;main.c: 335:                             USART_Write(comunicacao.byte);
  1944  0291  0878               	movf	_comunicacao,w
  1945  0292  120A  118A  2630  120A  118A  	fcall	_USART_Write
  1946  0297  2856               	goto	l92
  1947  0298                     l166:	
  1948                           ;main.c: 342:             case TESTE_LIGA:
  1949                           
  1950                           
  1951                           ;main.c: 343:             {;main.c: 344:                 if(estado.chaveNA == 1)
  1952  0298  1E76               	btfss	_estado,4
  1953  0299  2A9B               	goto	u2341
  1954  029A  2A9C               	goto	u2340
  1955  029B                     u2341:
  1956  029B  2AA1               	goto	l2721
  1957  029C                     u2340:
  1958  029C                     l2719:
  1959                           
  1960                           ;main.c: 345:                     pwm_setado = 105;
  1961  029C  3069               	movlw	105
  1962  029D  00A7               	movwf	_pwm_setado
  1963  029E  3000               	movlw	0
  1964  029F  00A8               	movwf	_pwm_setado+1
  1965  02A0  2AA5               	goto	l2723
  1966  02A1                     l2721:
  1967                           
  1968                           ;main.c: 347:                     pwm_setado = 10;
  1969  02A1  300A               	movlw	10
  1970  02A2  00A7               	movwf	_pwm_setado
  1971  02A3  3000               	movlw	0
  1972  02A4  00A8               	movwf	_pwm_setado+1
  1973  02A5                     l2723:
  1974                           
  1975                           ;main.c: 348:                 timer = 0;
  1976  02A5  01AB               	clrf	_timer
  1977  02A6  01AC               	clrf	_timer+1
  1978  02A7                     l2725:
  1979                           
  1980                           ;main.c: 349:                 estagio = AGUARDA_TEMPO_LIGA;
  1981  02A7  3007               	movlw	7
  1982  02A8  00BD               	movwf	??_main
  1983  02A9  083D               	movf	??_main,w
  1984  02AA  00B5               	movwf	_estagio
  1985                           
  1986                           ;main.c: 350:             };main.c: 351:             break;
  1987  02AB  2856               	goto	l92
  1988  02AC                     l2727:
  1989                           
  1990                           ;main.c: 354:             {;main.c: 355:                 if((timer > 12000) || (escravo.
      +                          byte == 0x03FF))
  1991  02AC  302E               	movlw	46
  1992  02AD  022C               	subwf	_timer+1,w
  1993  02AE  30E1               	movlw	225
  1994  02AF  1903               	skipnz
  1995  02B0  022B               	subwf	_timer,w
  1996  02B1  1803               	skipnc
  1997  02B2  2AB4               	goto	u2351
  1998  02B3  2AB5               	goto	u2350
  1999  02B4                     u2351:
  2000  02B4  2ABD               	goto	l2731
  2001  02B5                     u2350:
  2002  02B5                     l2729:
  2003  02B5  0A23               	incf	_escravo,w
  2004  02B6  3003               	movlw	3
  2005  02B7  1903               	skipnz
  2006  02B8  0624               	xorwf	_escravo+1,w
  2007  02B9  1D03               	btfss	3,2
  2008  02BA  2ABC               	goto	u2361
  2009  02BB  2ABD               	goto	u2360
  2010  02BC                     u2361:
  2011  02BC  2ACE               	goto	l2737
  2012  02BD                     u2360:
  2013  02BD                     l2731:
  2014                           
  2015                           ;main.c: 356:                 {;main.c: 357:                     if(timer > 3000)
  2016  02BD  300B               	movlw	11
  2017  02BE  022C               	subwf	_timer+1,w
  2018  02BF  30B9               	movlw	185
  2019  02C0  1903               	skipnz
  2020  02C1  022B               	subwf	_timer,w
  2021  02C2  1C03               	skipc
  2022  02C3  2AC5               	goto	u2371
  2023  02C4  2AC6               	goto	u2370
  2024  02C5                     u2371:
  2025  02C5  2D37               	goto	l139
  2026  02C6                     u2370:
  2027  02C6                     l2733:
  2028                           
  2029                           ;main.c: 358:                     {;main.c: 359:                         escravo.byte = 
      +                          0;
  2030  02C6  01A3               	clrf	_escravo
  2031  02C7  01A4               	clrf	_escravo+1
  2032                           
  2033                           ;main.c: 360:                         endereco = 0;
  2034  02C8  01F9               	clrf	_endereco
  2035  02C9                     l2735:
  2036                           
  2037                           ;main.c: 361:                         estagio = TESTE_DESLIGA;
  2038  02C9  300A               	movlw	10
  2039  02CA  00BD               	movwf	??_main
  2040  02CB  083D               	movf	??_main,w
  2041  02CC  00B5               	movwf	_estagio
  2042  02CD  2856               	goto	l92
  2043  02CE                     l2737:
  2044                           
  2045                           ;main.c: 365:                     estagio = VERIFICA_PLACAS_LIGA;
  2046  02CE  3008               	movlw	8
  2047  02CF  00BD               	movwf	??_main
  2048  02D0  083D               	movf	??_main,w
  2049  02D1  00B5               	movwf	_estagio
  2050  02D2  2856               	goto	l92
  2051  02D3                     l2739:
  2052                           
  2053                           ;main.c: 370:             {;main.c: 371:                 endereco++;
  2054  02D3  3001               	movlw	1
  2055  02D4  00BD               	movwf	??_main
  2056  02D5  083D               	movf	??_main,w
  2057  02D6  07F9               	addwf	_endereco,f
  2058  02D7                     l2741:
  2059                           
  2060                           ;main.c: 372:                 if(endereco <= 10)
  2061  02D7  300B               	movlw	11
  2062  02D8  0279               	subwf	_endereco,w
  2063  02D9  1803               	skipnc
  2064  02DA  2ADC               	goto	u2381
  2065  02DB  2ADD               	goto	u2380
  2066  02DC                     u2381:
  2067  02DC  2AF7               	goto	l2755
  2068  02DD                     u2380:
  2069  02DD                     l2743:
  2070                           
  2071                           ;main.c: 373:                 {;main.c: 374:                     timeoutRx = 0;
  2072  02DD  01B6               	clrf	_timeoutRx
  2073  02DE                     l2745:
  2074                           
  2075                           ;main.c: 375:                     USART_RX_Clear_Buffer();
  2076  02DE  120A  118A  2650  120A  118A  	fcall	_USART_RX_Clear_Buffer
  2077  02E3                     l2747:
  2078                           
  2079                           ;main.c: 376:                     comunicacao.endereco = endereco;
  2080  02E3  0878               	movf	_comunicacao,w
  2081  02E4  0679               	xorwf	_endereco,w
  2082  02E5  39F0               	andlw	-16
  2083  02E6  0679               	xorwf	_endereco,w
  2084  02E7  00F8               	movwf	_comunicacao
  2085  02E8                     l2749:
  2086                           
  2087                           ;main.c: 377:                     comunicacao.resposta = 0x0F;
  2088  02E8  30F0               	movlw	240
  2089  02E9  04F8               	iorwf	_comunicacao,f
  2090  02EA                     l2751:
  2091                           
  2092                           ;main.c: 378:                     USART_Write(comunicacao.byte);
  2093  02EA  0878               	movf	_comunicacao,w
  2094  02EB  120A  118A  2630  120A  118A  	fcall	_USART_Write
  2095  02F0                     l2753:
  2096                           
  2097                           ;main.c: 379:                     estagio = MENSAGEM_RETORNO_PLACAS_LIGA;
  2098  02F0  3009               	movlw	9
  2099  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  2100  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  2101  02F3  00BD               	movwf	??_main
  2102  02F4  083D               	movf	??_main,w
  2103  02F5  00B5               	movwf	_estagio
  2104                           
  2105                           ;main.c: 380:                 }
  2106  02F6  2856               	goto	l92
  2107  02F7                     l2755:
  2108                           
  2109                           ;main.c: 382:                     endereco = 0;
  2110  02F7  01F9               	clrf	_endereco
  2111  02F8  2856               	goto	l92
  2112  02F9                     l2757:
  2113                           
  2114                           ;main.c: 387:             {;main.c: 388:                 if(timeoutRx > 80)
  2115  02F9  3051               	movlw	81
  2116  02FA  0236               	subwf	_timeoutRx,w
  2117  02FB  1C03               	skipc
  2118  02FC  2AFE               	goto	u2391
  2119  02FD  2AFF               	goto	u2390
  2120  02FE                     u2391:
  2121  02FE  2B00               	goto	l2761
  2122  02FF                     u2390:
  2123  02FF  2AA7               	goto	l2725
  2124  0300                     l2761:
  2125                           
  2126                           ;main.c: 391:                 {;main.c: 392:                     if(USART_RX_Ready() == 
      +                          1)
  2127  0300  120A  118A  264C  120A  118A  	fcall	_USART_RX_Ready
  2128  0305  3A01               	xorlw	1
  2129  0306  1D03               	skipz
  2130  0307  2B09               	goto	u2401
  2131  0308  2B0A               	goto	u2400
  2132  0309                     u2401:
  2133  0309  2D37               	goto	l139
  2134  030A                     u2400:
  2135  030A                     l2763:
  2136                           
  2137                           ;main.c: 393:                     {;main.c: 394:                         comunicacao.byt
      +                          e = USART_Read();
  2138  030A  120A  118A  2622  120A  118A  	fcall	_USART_Read
  2139  030F  1283               	bcf	3,5	;RP0=0, select bank0
  2140  0310  1303               	bcf	3,6	;RP1=0, select bank0
  2141  0311  00BD               	movwf	??_main
  2142  0312  083D               	movf	??_main,w
  2143  0313  00F8               	movwf	_comunicacao
  2144  0314                     l2765:
  2145                           
  2146                           ;main.c: 395:                         if(comunicacao.endereco == endereco)
  2147  0314  0878               	movf	_comunicacao,w
  2148  0315  390F               	andlw	15
  2149  0316  0679               	xorwf	_endereco,w
  2150  0317  1D03               	skipz
  2151  0318  2B1A               	goto	u2411
  2152  0319  2B1B               	goto	u2410
  2153  031A                     u2411:
  2154  031A  2AA7               	goto	l2725
  2155  031B                     u2410:
  2156  031B                     l2767:
  2157                           
  2158                           ;main.c: 396:                         {;main.c: 397:                             if(comu
      +                          nicacao.resposta != 0x00)
  2159  031B  0E78               	swapf	_comunicacao,w
  2160  031C  390F               	andlw	15
  2161  031D  3A00               	xorlw	0
  2162  031E  1903               	skipnz
  2163  031F  2B21               	goto	u2421
  2164  0320  2B22               	goto	u2420
  2165  0321                     u2421:
  2166  0321  2AA7               	goto	l2725
  2167  0322                     u2420:
  2168  0322  2B37               	goto	l2773
  2169  0323                     l185:	
  2170                           ;main.c: 400:                                 {;main.c: 401:                            
      +                                   case 1:
  2171                           
  2172                           
  2173                           ;main.c: 402:                                         escravo.endereco1 = 1;
  2174  0323  1423               	bsf	_escravo,0
  2175                           
  2176                           ;main.c: 403:                                     break;
  2177  0324  2AA7               	goto	l2725
  2178  0325                     l187:	
  2179                           ;main.c: 404:                                     case 2:
  2180                           
  2181                           
  2182                           ;main.c: 405:                                         escravo.endereco2 = 1;
  2183  0325  14A3               	bsf	_escravo,1
  2184                           
  2185                           ;main.c: 406:                                     break;
  2186  0326  2AA7               	goto	l2725
  2187  0327                     l188:	
  2188                           ;main.c: 407:                                     case 3:
  2189                           
  2190                           
  2191                           ;main.c: 408:                                         escravo.endereco3 = 1;
  2192  0327  1523               	bsf	_escravo,2
  2193                           
  2194                           ;main.c: 409:                                     break;
  2195  0328  2AA7               	goto	l2725
  2196  0329                     l189:	
  2197                           ;main.c: 410:                                     case 4:
  2198                           
  2199                           
  2200                           ;main.c: 411:                                         escravo.endereco4 = 1;
  2201  0329  15A3               	bsf	_escravo,3
  2202                           
  2203                           ;main.c: 412:                                     break;
  2204  032A  2AA7               	goto	l2725
  2205  032B                     l190:	
  2206                           ;main.c: 413:                                     case 5:
  2207                           
  2208                           
  2209                           ;main.c: 414:                                         escravo.endereco5 = 1;
  2210  032B  1623               	bsf	_escravo,4
  2211                           
  2212                           ;main.c: 415:                                     break;
  2213  032C  2AA7               	goto	l2725
  2214  032D                     l191:	
  2215                           ;main.c: 416:                                     case 6:
  2216                           
  2217                           
  2218                           ;main.c: 417:                                         escravo.endereco6 = 1;
  2219  032D  16A3               	bsf	_escravo,5
  2220                           
  2221                           ;main.c: 418:                                     break;
  2222  032E  2AA7               	goto	l2725
  2223  032F                     l192:	
  2224                           ;main.c: 419:                                     case 7:
  2225                           
  2226                           
  2227                           ;main.c: 420:                                         escravo.endereco7 = 1;
  2228  032F  1723               	bsf	_escravo,6
  2229                           
  2230                           ;main.c: 421:                                     break;
  2231  0330  2AA7               	goto	l2725
  2232  0331                     l193:	
  2233                           ;main.c: 422:                                     case 8:
  2234                           
  2235                           
  2236                           ;main.c: 423:                                         escravo.endereco8 = 1;
  2237  0331  17A3               	bsf	_escravo,7
  2238                           
  2239                           ;main.c: 424:                                     break;
  2240  0332  2AA7               	goto	l2725
  2241  0333                     l194:	
  2242                           ;main.c: 425:                                     case 9:
  2243                           
  2244                           
  2245                           ;main.c: 426:                                         escravo.endereco9 = 1;
  2246  0333  1424               	bsf	_escravo+1,0
  2247                           
  2248                           ;main.c: 427:                                     break;
  2249  0334  2AA7               	goto	l2725
  2250  0335                     l195:	
  2251                           ;main.c: 428:                                     case 10:
  2252                           
  2253                           
  2254                           ;main.c: 429:                                         escravo.endereco10 = 1;
  2255  0335  14A4               	bsf	_escravo+1,1
  2256                           
  2257                           ;main.c: 430:                                     break;
  2258  0336  2AA7               	goto	l2725
  2259  0337                     l2773:
  2260  0337  0879               	movf	_endereco,w
  2261  0338  00BD               	movwf	??_main
  2262  0339  01BE               	clrf	??_main+1
  2263                           
  2264                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2265                           ; Switch size 1, requested type "simple"
  2266                           ; Number of cases is 1, Range of values is 0 to 0
  2267                           ; switch strategies available:
  2268                           ; Name         Instructions Cycles
  2269                           ; simple_byte            4     3 (average)
  2270                           ; direct_byte           11     8 (fixed)
  2271                           ; jumptable            260     6 (fixed)
  2272                           ;	Chosen strategy is simple_byte
  2273  033A  083E               	movf	??_main+1,w
  2274  033B  3A00               	xorlw	0	; case 0
  2275  033C  1903               	skipnz
  2276  033D  2B3F               	goto	l3039
  2277  033E  2AA7               	goto	l2725
  2278  033F                     l3039:
  2279                           
  2280                           ; Switch size 1, requested type "simple"
  2281                           ; Number of cases is 10, Range of values is 1 to 10
  2282                           ; switch strategies available:
  2283                           ; Name         Instructions Cycles
  2284                           ; simple_byte           31    16 (average)
  2285                           ; direct_byte           41    11 (fixed)
  2286                           ; jumptable            263     9 (fixed)
  2287                           ;	Chosen strategy is simple_byte
  2288  033F  083D               	movf	??_main,w
  2289  0340  3A01               	xorlw	1	; case 1
  2290  0341  1903               	skipnz
  2291  0342  2B23               	goto	l185
  2292  0343  3A03               	xorlw	3	; case 2
  2293  0344  1903               	skipnz
  2294  0345  2B25               	goto	l187
  2295  0346  3A01               	xorlw	1	; case 3
  2296  0347  1903               	skipnz
  2297  0348  2B27               	goto	l188
  2298  0349  3A07               	xorlw	7	; case 4
  2299  034A  1903               	skipnz
  2300  034B  2B29               	goto	l189
  2301  034C  3A01               	xorlw	1	; case 5
  2302  034D  1903               	skipnz
  2303  034E  2B2B               	goto	l190
  2304  034F  3A03               	xorlw	3	; case 6
  2305  0350  1903               	skipnz
  2306  0351  2B2D               	goto	l191
  2307  0352  3A01               	xorlw	1	; case 7
  2308  0353  1903               	skipnz
  2309  0354  2B2F               	goto	l192
  2310  0355  3A0F               	xorlw	15	; case 8
  2311  0356  1903               	skipnz
  2312  0357  2B31               	goto	l193
  2313  0358  3A01               	xorlw	1	; case 9
  2314  0359  1903               	skipnz
  2315  035A  2B33               	goto	l194
  2316  035B  3A03               	xorlw	3	; case 10
  2317  035C  1903               	skipnz
  2318  035D  2B35               	goto	l195
  2319  035E  2AA7               	goto	l2725
  2320  035F                     l196:	
  2321                           ;main.c: 440:             case TESTE_DESLIGA:
  2322                           
  2323                           
  2324                           ;main.c: 441:             {;main.c: 442:                 if(estado.chaveNA == 1)
  2325  035F  1E76               	btfss	_estado,4
  2326  0360  2B62               	goto	u2431
  2327  0361  2B63               	goto	u2430
  2328  0362                     u2431:
  2329  0362  2B68               	goto	l197
  2330  0363                     u2430:
  2331  0363                     l2777:
  2332                           
  2333                           ;main.c: 443:                     pwm_setado = 10;
  2334  0363  300A               	movlw	10
  2335  0364  00A7               	movwf	_pwm_setado
  2336  0365  3000               	movlw	0
  2337  0366  00A8               	movwf	_pwm_setado+1
  2338  0367  2B75               	goto	l2783
  2339  0368                     l197:	
  2340                           ;main.c: 444:                 else
  2341                           
  2342                           
  2343                           ;main.c: 445:                 {;main.c: 446:                     if(estado.chavecopo == 
      +                          1)
  2344  0368  1EF6               	btfss	_estado,5
  2345  0369  2B6B               	goto	u2441
  2346  036A  2B6C               	goto	u2440
  2347  036B                     u2441:
  2348  036B  2B71               	goto	l2781
  2349  036C                     u2440:
  2350  036C                     l2779:
  2351                           
  2352                           ;main.c: 447:                         pwm_setado = 170;
  2353  036C  30AA               	movlw	170
  2354  036D  00A7               	movwf	_pwm_setado
  2355  036E  3000               	movlw	0
  2356  036F  00A8               	movwf	_pwm_setado+1
  2357  0370  2B75               	goto	l2783
  2358  0371                     l2781:
  2359                           
  2360                           ;main.c: 449:                         pwm_setado = 105;
  2361  0371  3069               	movlw	105
  2362  0372  00A7               	movwf	_pwm_setado
  2363  0373  3000               	movlw	0
  2364  0374  00A8               	movwf	_pwm_setado+1
  2365  0375                     l2783:
  2366                           
  2367                           ;main.c: 451:                 timer = 0;
  2368  0375  01AB               	clrf	_timer
  2369  0376  01AC               	clrf	_timer+1
  2370  0377                     l2785:
  2371                           
  2372                           ;main.c: 452:                 estagio = AGUARDA_TEMPO_DESLIGA;
  2373  0377  300B               	movlw	11
  2374  0378  00BD               	movwf	??_main
  2375  0379  083D               	movf	??_main,w
  2376  037A  00B5               	movwf	_estagio
  2377  037B                     l2787:
  2378                           
  2379                           ;main.c: 453:                 comunicacao.endereco = 0x0F;
  2380  037B  300F               	movlw	15
  2381  037C  04F8               	iorwf	_comunicacao,f
  2382  037D                     l2789:
  2383                           
  2384                           ;main.c: 454:                 comunicacao.resposta = 0x07;
  2385  037D  0878               	movf	_comunicacao,w
  2386  037E  390F               	andlw	-241
  2387  037F  3870               	iorlw	112
  2388  0380  00F8               	movwf	_comunicacao
  2389  0381                     l2791:
  2390                           
  2391                           ;main.c: 455:                 USART_Write(comunicacao.byte);
  2392  0381  0878               	movf	_comunicacao,w
  2393  0382  120A  118A  2630  120A  118A  	fcall	_USART_Write
  2394                           
  2395                           ;main.c: 456:             };main.c: 457:             break;
  2396  0387  2856               	goto	l92
  2397  0388                     l2793:
  2398                           
  2399                           ;main.c: 460:             {;main.c: 461:                 if((timer > 10000) || (escravo.
      +                          byte == 0x03FF))
  2400  0388  3027               	movlw	39
  2401  0389  022C               	subwf	_timer+1,w
  2402  038A  3011               	movlw	17
  2403  038B  1903               	skipnz
  2404  038C  022B               	subwf	_timer,w
  2405  038D  1803               	skipnc
  2406  038E  2B90               	goto	u2451
  2407  038F  2B91               	goto	u2450
  2408  0390                     u2451:
  2409  0390  2B99               	goto	l2797
  2410  0391                     u2450:
  2411  0391                     l2795:
  2412  0391  0A23               	incf	_escravo,w
  2413  0392  3003               	movlw	3
  2414  0393  1903               	skipnz
  2415  0394  0624               	xorwf	_escravo+1,w
  2416  0395  1D03               	btfss	3,2
  2417  0396  2B98               	goto	u2461
  2418  0397  2B99               	goto	u2460
  2419  0398                     u2461:
  2420  0398  2BB7               	goto	l2809
  2421  0399                     u2460:
  2422  0399                     l2797:
  2423                           
  2424                           ;main.c: 462:                 {;main.c: 463:                     if((timer > 8000) || (e
      +                          stado.reteste == 1))
  2425  0399  301F               	movlw	31
  2426  039A  022C               	subwf	_timer+1,w
  2427  039B  3041               	movlw	65
  2428  039C  1903               	skipnz
  2429  039D  022B               	subwf	_timer,w
  2430  039E  1803               	skipnc
  2431  039F  2BA1               	goto	u2471
  2432  03A0  2BA2               	goto	u2470
  2433  03A1                     u2471:
  2434  03A1  2BA6               	goto	l2801
  2435  03A2                     u2470:
  2436  03A2                     l2799:
  2437  03A2  1FF6               	btfss	_estado,7
  2438  03A3  2BA5               	goto	u2481
  2439  03A4  2BA6               	goto	u2480
  2440  03A5                     u2481:
  2441  03A5  2856               	goto	l92
  2442  03A6                     u2480:
  2443  03A6                     l2801:
  2444                           
  2445                           ;main.c: 464:                     {;main.c: 465:                         escravo.byte = 
      +                          0;
  2446  03A6  01A3               	clrf	_escravo
  2447  03A7  01A4               	clrf	_escravo+1
  2448                           
  2449                           ;main.c: 466:                         endereco = 0;
  2450  03A8  01F9               	clrf	_endereco
  2451  03A9                     l2803:
  2452                           
  2453                           ;main.c: 467:                         if(estado.reteste == 1)
  2454  03A9  1FF6               	btfss	_estado,7
  2455  03AA  2BAC               	goto	u2491
  2456  03AB  2BAD               	goto	u2490
  2457  03AC                     u2491:
  2458  03AC  2BB2               	goto	l2807
  2459  03AD                     u2490:
  2460  03AD                     l2805:
  2461                           
  2462                           ;main.c: 468:                             estagio = VERIFICA_PLACAS;
  2463  03AD  300F               	movlw	15
  2464  03AE  00BD               	movwf	??_main
  2465  03AF  083D               	movf	??_main,w
  2466  03B0  00B5               	movwf	_estagio
  2467  03B1  2856               	goto	l92
  2468  03B2                     l2807:
  2469                           
  2470                           ;main.c: 470:                             estagio = RETESTE;
  2471  03B2  300E               	movlw	14
  2472  03B3  00BD               	movwf	??_main
  2473  03B4  083D               	movf	??_main,w
  2474  03B5  00B5               	movwf	_estagio
  2475  03B6  2856               	goto	l92
  2476  03B7                     l2809:
  2477                           
  2478                           ;main.c: 474:                     estagio = VERIFICA_PLACAS_DESLIGA;
  2479  03B7  300C               	movlw	12
  2480  03B8  00BD               	movwf	??_main
  2481  03B9  083D               	movf	??_main,w
  2482  03BA  00B5               	movwf	_estagio
  2483  03BB  2856               	goto	l92
  2484  03BC                     l2811:
  2485                           
  2486                           ;main.c: 479:             {;main.c: 480:                 endereco++;
  2487  03BC  3001               	movlw	1
  2488  03BD  00BD               	movwf	??_main
  2489  03BE  083D               	movf	??_main,w
  2490  03BF  07F9               	addwf	_endereco,f
  2491  03C0                     l2813:
  2492                           
  2493                           ;main.c: 481:                 if(endereco <= 10)
  2494  03C0  300B               	movlw	11
  2495  03C1  0279               	subwf	_endereco,w
  2496  03C2  1803               	skipnc
  2497  03C3  2BC5               	goto	u2501
  2498  03C4  2BC6               	goto	u2500
  2499  03C5                     u2501:
  2500  03C5  2AF7               	goto	l2755
  2501  03C6                     u2500:
  2502  03C6                     l2815:
  2503                           
  2504                           ;main.c: 482:                 {;main.c: 483:                     timeoutRx = 0;
  2505  03C6  01B6               	clrf	_timeoutRx
  2506  03C7                     l2817:
  2507                           
  2508                           ;main.c: 484:                     USART_RX_Clear_Buffer();
  2509  03C7  120A  118A  2650  120A  118A  	fcall	_USART_RX_Clear_Buffer
  2510  03CC                     l2819:
  2511                           
  2512                           ;main.c: 485:                     comunicacao.endereco = endereco;
  2513  03CC  0878               	movf	_comunicacao,w
  2514  03CD  0679               	xorwf	_endereco,w
  2515  03CE  39F0               	andlw	-16
  2516  03CF  0679               	xorwf	_endereco,w
  2517  03D0  00F8               	movwf	_comunicacao
  2518  03D1                     l2821:
  2519                           
  2520                           ;main.c: 486:                     comunicacao.resposta = 0x0F;
  2521  03D1  30F0               	movlw	240
  2522  03D2  04F8               	iorwf	_comunicacao,f
  2523  03D3                     l2823:
  2524                           
  2525                           ;main.c: 487:                     USART_Write(comunicacao.byte);
  2526  03D3  0878               	movf	_comunicacao,w
  2527  03D4  120A  118A  2630  120A  118A  	fcall	_USART_Write
  2528  03D9                     l2825:
  2529                           
  2530                           ;main.c: 488:                     estagio = MENSAGEM_RETORNO_PLACAS_DESLIGA;
  2531  03D9  300D               	movlw	13
  2532  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  2533  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  2534  03DC  00BD               	movwf	??_main
  2535  03DD  083D               	movf	??_main,w
  2536  03DE  00B5               	movwf	_estagio
  2537                           
  2538                           ;main.c: 489:                 }
  2539  03DF  2856               	goto	l92
  2540  03E0                     l2829:
  2541                           
  2542                           ;main.c: 496:             {;main.c: 497:                 if(timeoutRx > 80)
  2543  03E0  3051               	movlw	81
  2544  03E1  0236               	subwf	_timeoutRx,w
  2545  03E2  1C03               	skipc
  2546  03E3  2BE5               	goto	u2511
  2547  03E4  2BE6               	goto	u2510
  2548  03E5                     u2511:
  2549  03E5  2BEB               	goto	l2833
  2550  03E6                     u2510:
  2551  03E6                     l2831:
  2552                           
  2553                           ;main.c: 498:                     estagio = AGUARDA_TEMPO_DESLIGA;
  2554  03E6  300B               	movlw	11
  2555  03E7  00BD               	movwf	??_main
  2556  03E8  083D               	movf	??_main,w
  2557  03E9  00B5               	movwf	_estagio
  2558  03EA  2856               	goto	l92
  2559  03EB                     l2833:
  2560                           
  2561                           ;main.c: 500:                 {;main.c: 501:                     if(USART_RX_Ready() == 
      +                          1)
  2562  03EB  120A  118A  264C  120A  118A  	fcall	_USART_RX_Ready
  2563  03F0  3A01               	xorlw	1
  2564  03F1  1D03               	skipz
  2565  03F2  2BF4               	goto	u2521
  2566  03F3  2BF5               	goto	u2520
  2567  03F4                     u2521:
  2568  03F4  2D37               	goto	l139
  2569  03F5                     u2520:
  2570  03F5                     l2835:
  2571                           
  2572                           ;main.c: 502:                     {;main.c: 503:                         comunicacao.byt
      +                          e = USART_Read();
  2573  03F5  120A  118A  2622  120A  118A  	fcall	_USART_Read
  2574  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2575  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2576  03FC  00BD               	movwf	??_main
  2577  03FD  083D               	movf	??_main,w
  2578  03FE  00F8               	movwf	_comunicacao
  2579  03FF                     l2837:
  2580                           
  2581                           ;main.c: 504:                         if(comunicacao.endereco == endereco)
  2582  03FF  0878               	movf	_comunicacao,w
  2583  0400  390F               	andlw	15
  2584  0401  0679               	xorwf	_endereco,w
  2585  0402  1D03               	skipz
  2586  0403  2C05               	goto	u2531
  2587  0404  2C06               	goto	u2530
  2588  0405                     u2531:
  2589  0405  2BE6               	goto	l2831
  2590  0406                     u2530:
  2591  0406                     l2839:
  2592                           
  2593                           ;main.c: 505:                         {;main.c: 506:                             if(comu
      +                          nicacao.resposta != 0x00)
  2594  0406  0E78               	swapf	_comunicacao,w
  2595  0407  390F               	andlw	15
  2596  0408  3A00               	xorlw	0
  2597  0409  1903               	skipnz
  2598  040A  2C0C               	goto	u2541
  2599  040B  2C0D               	goto	u2540
  2600  040C                     u2541:
  2601  040C  2BE6               	goto	l2831
  2602  040D                     u2540:
  2603  040D  2C22               	goto	l2845
  2604  040E                     l221:	
  2605                           ;main.c: 509:                                 {;main.c: 510:                            
      +                                   case 1:
  2606                           
  2607                           
  2608                           ;main.c: 511:                                         escravo.endereco1 = 1;
  2609  040E  1423               	bsf	_escravo,0
  2610                           
  2611                           ;main.c: 512:                                     break;
  2612  040F  2BE6               	goto	l2831
  2613  0410                     l223:	
  2614                           ;main.c: 513:                                     case 2:
  2615                           
  2616                           
  2617                           ;main.c: 514:                                         escravo.endereco2 = 1;
  2618  0410  14A3               	bsf	_escravo,1
  2619                           
  2620                           ;main.c: 515:                                     break;
  2621  0411  2BE6               	goto	l2831
  2622  0412                     l224:	
  2623                           ;main.c: 516:                                     case 3:
  2624                           
  2625                           
  2626                           ;main.c: 517:                                         escravo.endereco3 = 1;
  2627  0412  1523               	bsf	_escravo,2
  2628                           
  2629                           ;main.c: 518:                                     break;
  2630  0413  2BE6               	goto	l2831
  2631  0414                     l225:	
  2632                           ;main.c: 519:                                     case 4:
  2633                           
  2634                           
  2635                           ;main.c: 520:                                         escravo.endereco4 = 1;
  2636  0414  15A3               	bsf	_escravo,3
  2637                           
  2638                           ;main.c: 521:                                     break;
  2639  0415  2BE6               	goto	l2831
  2640  0416                     l226:	
  2641                           ;main.c: 522:                                     case 5:
  2642                           
  2643                           
  2644                           ;main.c: 523:                                         escravo.endereco5 = 1;
  2645  0416  1623               	bsf	_escravo,4
  2646                           
  2647                           ;main.c: 524:                                     break;
  2648  0417  2BE6               	goto	l2831
  2649  0418                     l227:	
  2650                           ;main.c: 525:                                     case 6:
  2651                           
  2652                           
  2653                           ;main.c: 526:                                         escravo.endereco6 = 1;
  2654  0418  16A3               	bsf	_escravo,5
  2655                           
  2656                           ;main.c: 527:                                     break;
  2657  0419  2BE6               	goto	l2831
  2658  041A                     l228:	
  2659                           ;main.c: 528:                                     case 7:
  2660                           
  2661                           
  2662                           ;main.c: 529:                                         escravo.endereco7 = 1;
  2663  041A  1723               	bsf	_escravo,6
  2664                           
  2665                           ;main.c: 530:                                     break;
  2666  041B  2BE6               	goto	l2831
  2667  041C                     l229:	
  2668                           ;main.c: 531:                                     case 8:
  2669                           
  2670                           
  2671                           ;main.c: 532:                                         escravo.endereco8 = 1;
  2672  041C  17A3               	bsf	_escravo,7
  2673                           
  2674                           ;main.c: 533:                                     break;
  2675  041D  2BE6               	goto	l2831
  2676  041E                     l230:	
  2677                           ;main.c: 534:                                     case 9:
  2678                           
  2679                           
  2680                           ;main.c: 535:                                         escravo.endereco9 = 1;
  2681  041E  1424               	bsf	_escravo+1,0
  2682                           
  2683                           ;main.c: 536:                                     break;
  2684  041F  2BE6               	goto	l2831
  2685  0420                     l231:	
  2686                           ;main.c: 537:                                     case 10:
  2687                           
  2688                           
  2689                           ;main.c: 538:                                         escravo.endereco10 = 1;
  2690  0420  14A4               	bsf	_escravo+1,1
  2691                           
  2692                           ;main.c: 539:                                     break;
  2693  0421  2BE6               	goto	l2831
  2694  0422                     l2845:
  2695  0422  0879               	movf	_endereco,w
  2696  0423  00BD               	movwf	??_main
  2697  0424  01BE               	clrf	??_main+1
  2698                           
  2699                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2700                           ; Switch size 1, requested type "simple"
  2701                           ; Number of cases is 1, Range of values is 0 to 0
  2702                           ; switch strategies available:
  2703                           ; Name         Instructions Cycles
  2704                           ; simple_byte            4     3 (average)
  2705                           ; direct_byte           11     8 (fixed)
  2706                           ; jumptable            260     6 (fixed)
  2707                           ;	Chosen strategy is simple_byte
  2708  0425  083E               	movf	??_main+1,w
  2709  0426  3A00               	xorlw	0	; case 0
  2710  0427  1903               	skipnz
  2711  0428  2C2A               	goto	l3041
  2712  0429  2BE6               	goto	l2831
  2713  042A                     l3041:
  2714                           
  2715                           ; Switch size 1, requested type "simple"
  2716                           ; Number of cases is 10, Range of values is 1 to 10
  2717                           ; switch strategies available:
  2718                           ; Name         Instructions Cycles
  2719                           ; simple_byte           31    16 (average)
  2720                           ; direct_byte           41    11 (fixed)
  2721                           ; jumptable            263     9 (fixed)
  2722                           ;	Chosen strategy is simple_byte
  2723  042A  083D               	movf	??_main,w
  2724  042B  3A01               	xorlw	1	; case 1
  2725  042C  1903               	skipnz
  2726  042D  2C0E               	goto	l221
  2727  042E  3A03               	xorlw	3	; case 2
  2728  042F  1903               	skipnz
  2729  0430  2C10               	goto	l223
  2730  0431  3A01               	xorlw	1	; case 3
  2731  0432  1903               	skipnz
  2732  0433  2C12               	goto	l224
  2733  0434  3A07               	xorlw	7	; case 4
  2734  0435  1903               	skipnz
  2735  0436  2C14               	goto	l225
  2736  0437  3A01               	xorlw	1	; case 5
  2737  0438  1903               	skipnz
  2738  0439  2C16               	goto	l226
  2739  043A  3A03               	xorlw	3	; case 6
  2740  043B  1903               	skipnz
  2741  043C  2C18               	goto	l227
  2742  043D  3A01               	xorlw	1	; case 7
  2743  043E  1903               	skipnz
  2744  043F  2C1A               	goto	l228
  2745  0440  3A0F               	xorlw	15	; case 8
  2746  0441  1903               	skipnz
  2747  0442  2C1C               	goto	l229
  2748  0443  3A01               	xorlw	1	; case 9
  2749  0444  1903               	skipnz
  2750  0445  2C1E               	goto	l230
  2751  0446  3A03               	xorlw	3	; case 10
  2752  0447  1903               	skipnz
  2753  0448  2C20               	goto	l231
  2754  0449  2BE6               	goto	l2831
  2755  044A                     l232:	
  2756                           ;main.c: 549:             case RETESTE:
  2757                           
  2758                           
  2759                           ;main.c: 550:             {;main.c: 551:                 estado.reteste = 1;
  2760  044A  17F6               	bsf	_estado,7
  2761  044B                     l2849:
  2762                           
  2763                           ;main.c: 552:                 estagio = TESTE_LIGA;
  2764  044B  3006               	movlw	6
  2765  044C  00BD               	movwf	??_main
  2766  044D  083D               	movf	??_main,w
  2767  044E  00B5               	movwf	_estagio
  2768  044F                     l2851:
  2769                           
  2770                           ;main.c: 553:                 comunicacao.endereco = 0x0F;
  2771  044F  300F               	movlw	15
  2772  0450  04F8               	iorwf	_comunicacao,f
  2773  0451                     l2853:
  2774                           
  2775                           ;main.c: 554:                 comunicacao.resposta = 0x0C;
  2776  0451  0878               	movf	_comunicacao,w
  2777  0452  390F               	andlw	-241
  2778  0453  38C0               	iorlw	192
  2779  0454  00F8               	movwf	_comunicacao
  2780  0455                     l2855:
  2781                           
  2782                           ;main.c: 555:                 USART_Write(comunicacao.byte);
  2783  0455  0878               	movf	_comunicacao,w
  2784  0456  120A  118A  2630  120A  118A  	fcall	_USART_Write
  2785                           
  2786                           ;main.c: 556:             };main.c: 557:             break;
  2787  045B  2856               	goto	l92
  2788  045C                     l2857:
  2789                           
  2790                           ;main.c: 560:             {;main.c: 561:                 endereco++;
  2791  045C  3001               	movlw	1
  2792  045D  00BD               	movwf	??_main
  2793  045E  083D               	movf	??_main,w
  2794  045F  07F9               	addwf	_endereco,f
  2795  0460                     l2859:
  2796                           
  2797                           ;main.c: 562:                 if(endereco <= 10)
  2798  0460  300B               	movlw	11
  2799  0461  0279               	subwf	_endereco,w
  2800  0462  1803               	skipnc
  2801  0463  2C65               	goto	u2551
  2802  0464  2C66               	goto	u2550
  2803  0465                     u2551:
  2804  0465  2C80               	goto	l234
  2805  0466                     u2550:
  2806  0466                     l2861:
  2807                           
  2808                           ;main.c: 563:                 {;main.c: 564:                     timeoutRx = 0;
  2809  0466  01B6               	clrf	_timeoutRx
  2810  0467                     l2863:
  2811                           
  2812                           ;main.c: 565:                     USART_RX_Clear_Buffer();
  2813  0467  120A  118A  2650  120A  118A  	fcall	_USART_RX_Clear_Buffer
  2814  046C                     l2865:
  2815                           
  2816                           ;main.c: 566:                     comunicacao.endereco = endereco;
  2817  046C  0878               	movf	_comunicacao,w
  2818  046D  0679               	xorwf	_endereco,w
  2819  046E  39F0               	andlw	-16
  2820  046F  0679               	xorwf	_endereco,w
  2821  0470  00F8               	movwf	_comunicacao
  2822  0471                     l2867:
  2823                           
  2824                           ;main.c: 567:                     comunicacao.resposta = 0x0F;
  2825  0471  30F0               	movlw	240
  2826  0472  04F8               	iorwf	_comunicacao,f
  2827  0473                     l2869:
  2828                           
  2829                           ;main.c: 568:                     USART_Write(comunicacao.byte);
  2830  0473  0878               	movf	_comunicacao,w
  2831  0474  120A  118A  2630  120A  118A  	fcall	_USART_Write
  2832  0479                     l2871:
  2833                           
  2834                           ;main.c: 569:                     estagio = MENSAGEM_RETORNO_PLACAS;
  2835  0479  3010               	movlw	16
  2836  047A  1283               	bcf	3,5	;RP0=0, select bank0
  2837  047B  1303               	bcf	3,6	;RP1=0, select bank0
  2838  047C  00BD               	movwf	??_main
  2839  047D  083D               	movf	??_main,w
  2840  047E  00B5               	movwf	_estagio
  2841                           
  2842                           ;main.c: 570:                 }
  2843  047F  2856               	goto	l92
  2844  0480                     l234:	
  2845                           ;main.c: 571:                 else
  2846                           
  2847                           
  2848                           ;main.c: 572:                 {;main.c: 573:                     if(estado.falha == 1)
  2849  0480  1C77               	btfss	_estado+1,0
  2850  0481  2C83               	goto	u2561
  2851  0482  2C84               	goto	u2560
  2852  0483                     u2561:
  2853  0483  2C89               	goto	l2875
  2854  0484                     u2560:
  2855  0484                     l2873:
  2856                           
  2857                           ;main.c: 574:                         estagio = FALHA;
  2858  0484  3012               	movlw	18
  2859  0485  00BD               	movwf	??_main
  2860  0486  083D               	movf	??_main,w
  2861  0487  00B5               	movwf	_estagio
  2862  0488  2856               	goto	l92
  2863  0489                     l2875:
  2864                           
  2865                           ;main.c: 576:                         estagio = OK;
  2866  0489  3013               	movlw	19
  2867  048A  00BD               	movwf	??_main
  2868  048B  083D               	movf	??_main,w
  2869  048C  00B5               	movwf	_estagio
  2870  048D  2856               	goto	l92
  2871  048E                     l2877:
  2872                           
  2873                           ;main.c: 582:             {;main.c: 583:                 if(timeoutRx > 80)
  2874  048E  3051               	movlw	81
  2875  048F  0236               	subwf	_timeoutRx,w
  2876  0490  1C03               	skipc
  2877  0491  2C93               	goto	u2571
  2878  0492  2C94               	goto	u2570
  2879  0493                     u2571:
  2880  0493  2C96               	goto	l2883
  2881  0494                     u2570:
  2882  0494                     l2879:
  2883                           
  2884                           ;main.c: 584:                 {;main.c: 585:                     estado.falha = 1;
  2885  0494  1477               	bsf	_estado+1,0
  2886  0495  2BAD               	goto	l2805
  2887  0496                     l2883:
  2888                           
  2889                           ;main.c: 589:                 {;main.c: 590:                     if(USART_RX_Ready() == 
      +                          1)
  2890  0496  120A  118A  264C  120A  118A  	fcall	_USART_RX_Ready
  2891  049B  3A01               	xorlw	1
  2892  049C  1D03               	skipz
  2893  049D  2C9F               	goto	u2581
  2894  049E  2CA0               	goto	u2580
  2895  049F                     u2581:
  2896  049F  2D37               	goto	l139
  2897  04A0                     u2580:
  2898  04A0                     l2885:
  2899                           
  2900                           ;main.c: 591:                     {;main.c: 592:                         comunicacao.byt
      +                          e = USART_Read();
  2901  04A0  120A  118A  2622  120A  118A  	fcall	_USART_Read
  2902  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  2903  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  2904  04A7  00BD               	movwf	??_main
  2905  04A8  083D               	movf	??_main,w
  2906  04A9  00F8               	movwf	_comunicacao
  2907  04AA                     l2887:
  2908                           
  2909                           ;main.c: 593:                         if(comunicacao.endereco == endereco)
  2910  04AA  0878               	movf	_comunicacao,w
  2911  04AB  390F               	andlw	15
  2912  04AC  0679               	xorwf	_endereco,w
  2913  04AD  1D03               	skipz
  2914  04AE  2CB0               	goto	u2591
  2915  04AF  2CB1               	goto	u2590
  2916  04B0                     u2591:
  2917  04B0  2C94               	goto	l2879
  2918  04B1                     u2590:
  2919  04B1                     l2889:
  2920                           
  2921                           ;main.c: 594:                         {;main.c: 595:                             if(comu
      +                          nicacao.resposta != 0x08)
  2922  04B1  0E78               	swapf	_comunicacao,w
  2923  04B2  390F               	andlw	15
  2924  04B3  3A08               	xorlw	8
  2925  04B4  1903               	skipnz
  2926  04B5  2CB7               	goto	u2601
  2927  04B6  2CB8               	goto	u2600
  2928  04B7                     u2601:
  2929  04B7  2BAD               	goto	l2805
  2930  04B8                     u2600:
  2931  04B8  2C94               	goto	l2879
  2932  04B9                     l2895:
  2933                           
  2934                           ;main.c: 607:             {;main.c: 608:                 comunicacao.endereco = 0x0F;
  2935  04B9  300F               	movlw	15
  2936  04BA  04F8               	iorwf	_comunicacao,f
  2937                           
  2938                           ;main.c: 609:                 comunicacao.resposta = 0x00;
  2939  04BB  300F               	movlw	-241
  2940  04BC  05F8               	andwf	_comunicacao,f
  2941  04BD                     l2897:
  2942                           
  2943                           ;main.c: 610:                 USART_Write(comunicacao.byte);
  2944  04BD  0878               	movf	_comunicacao,w
  2945  04BE  120A  118A  2630  120A  118A  	fcall	_USART_Write
  2946  04C3                     l2899:
  2947                           
  2948                           ;main.c: 611:                 pwm_setado = 0;
  2949  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  2950  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  2951  04C5  01A7               	clrf	_pwm_setado
  2952  04C6  01A8               	clrf	_pwm_setado+1
  2953  04C7                     l2901:
  2954                           
  2955                           ;main.c: 612:                 PORTAbits.RA1 = 1;
  2956  04C7  1485               	bsf	5,1	;volatile
  2957  04C8                     l2903:
  2958                           
  2959                           ;main.c: 613:                 PORTAbits.RA0 = 1;
  2960  04C8  1405               	bsf	5,0	;volatile
  2961  04C9                     l2905:
  2962                           
  2963                           ;main.c: 614:                 timer = 0;
  2964  04C9  01AB               	clrf	_timer
  2965  04CA  01AC               	clrf	_timer+1
  2966  04CB                     l2907:
  2967                           
  2968                           ;main.c: 615:                 estagio = TESTE_FINALIZADO;
  2969  04CB  3014               	movlw	20
  2970  04CC  00BD               	movwf	??_main
  2971  04CD  083D               	movf	??_main,w
  2972  04CE  00B5               	movwf	_estagio
  2973                           
  2974                           ;main.c: 616:             };main.c: 617:             break;
  2975  04CF  2856               	goto	l92
  2976  04D0                     l2909:
  2977                           
  2978                           ;main.c: 620:             {;main.c: 621:                 pwm_setado = 0;
  2979  04D0  01A7               	clrf	_pwm_setado
  2980  04D1  01A8               	clrf	_pwm_setado+1
  2981  04D2                     l2911:
  2982                           
  2983                           ;main.c: 622:                 PORTAbits.RA1 = 1;
  2984  04D2  1485               	bsf	5,1	;volatile
  2985  04D3                     l2913:
  2986                           
  2987                           ;main.c: 623:                 PORTAbits.RA0 = 1;
  2988  04D3  1405               	bsf	5,0	;volatile
  2989                           
  2990                           ;main.c: 624:                 timer = 0;
  2991  04D4  01AB               	clrf	_timer
  2992  04D5  01AC               	clrf	_timer+1
  2993  04D6  2CCB               	goto	l2907
  2994  04D7                     l2917:
  2995                           
  2996                           ;main.c: 630:             {;main.c: 631:                 pwm_setado = 0;
  2997  04D7  01A7               	clrf	_pwm_setado
  2998  04D8  01A8               	clrf	_pwm_setado+1
  2999  04D9                     l2919:
  3000                           
  3001                           ;main.c: 632:                 PORTAbits.RA3 = 1;
  3002  04D9  1585               	bsf	5,3	;volatile
  3003  04DA  2CCB               	goto	l2907
  3004  04DB                     l2923:
  3005                           
  3006                           ;main.c: 638:             {;main.c: 639:                 if(timer > 2000)
  3007  04DB  3007               	movlw	7
  3008  04DC  022C               	subwf	_timer+1,w
  3009  04DD  30D1               	movlw	209
  3010  04DE  1903               	skipnz
  3011  04DF  022B               	subwf	_timer,w
  3012  04E0  1C03               	skipc
  3013  04E1  2CE3               	goto	u2611
  3014  04E2  2CE4               	goto	u2610
  3015  04E3                     u2611:
  3016  04E3  2CE7               	goto	l249
  3017  04E4                     u2610:
  3018  04E4                     l2925:
  3019                           
  3020                           ;main.c: 640:                 {;main.c: 641:                     PORTAbits.RA0 = 0;
  3021  04E4  1005               	bcf	5,0	;volatile
  3022                           
  3023                           ;main.c: 642:                     estagio = TESTE_BOTOES;
  3024  04E5  01B5               	clrf	_estagio
  3025  04E6  0AB5               	incf	_estagio,f
  3026  04E7                     l249:	
  3027                           ;main.c: 643:                 }
  3028                           
  3029                           
  3030                           ;main.c: 644:                 PORTAbits.RA2 = 0;
  3031  04E7  1105               	bcf	5,2	;volatile
  3032                           
  3033                           ;main.c: 645:                 PORTCbits.RC5 = 0;
  3034  04E8  1287               	bcf	7,5	;volatile
  3035                           
  3036                           ;main.c: 646:                 PORTAbits.RA5 = 0;
  3037  04E9  1285               	bcf	5,5	;volatile
  3038                           
  3039                           ;main.c: 647:                 estado.testando = 0;
  3040  04EA  1376               	bcf	_estado,6
  3041                           
  3042                           ;main.c: 648:             };main.c: 649:             break;
  3043  04EB  2856               	goto	l92
  3044  04EC                     l2929:
  3045  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  3046  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  3047  04EE  0835               	movf	_estagio,w
  3048  04EF  00BD               	movwf	??_main
  3049  04F0  01BE               	clrf	??_main+1
  3050                           
  3051                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3052                           ; Switch size 1, requested type "simple"
  3053                           ; Number of cases is 1, Range of values is 0 to 0
  3054                           ; switch strategies available:
  3055                           ; Name         Instructions Cycles
  3056                           ; simple_byte            4     3 (average)
  3057                           ; direct_byte           11     8 (fixed)
  3058                           ; jumptable            260     6 (fixed)
  3059                           ;	Chosen strategy is simple_byte
  3060  04F1  083E               	movf	??_main+1,w
  3061  04F2  3A00               	xorlw	0	; case 0
  3062  04F3  1903               	skipnz
  3063  04F4  2CF6               	goto	l3043
  3064  04F5  2856               	goto	l92
  3065  04F6                     l3043:
  3066                           
  3067                           ; Switch size 1, requested type "simple"
  3068                           ; Number of cases is 21, Range of values is 0 to 20
  3069                           ; switch strategies available:
  3070                           ; Name         Instructions Cycles
  3071                           ; simple_byte           64    33 (average)
  3072                           ; direct_byte           71     8 (fixed)
  3073                           ; jumptable            260     6 (fixed)
  3074                           ;	Chosen strategy is simple_byte
  3075  04F6  083D               	movf	??_main,w
  3076  04F7  3A00               	xorlw	0	; case 0
  3077  04F8  1903               	skipnz
  3078  04F9  2984               	goto	l2625
  3079  04FA  3A01               	xorlw	1	; case 1
  3080  04FB  1903               	skipnz
  3081  04FC  29AE               	goto	l140
  3082  04FD  3A03               	xorlw	3	; case 2
  3083  04FE  1903               	skipnz
  3084  04FF  29CD               	goto	l143
  3085  0500  3A01               	xorlw	1	; case 3
  3086  0501  1903               	skipnz
  3087  0502  29DE               	goto	l2655
  3088  0503  3A07               	xorlw	7	; case 4
  3089  0504  1903               	skipnz
  3090  0505  29F7               	goto	l148
  3091  0506  3A01               	xorlw	1	; case 5
  3092  0507  1903               	skipnz
  3093  0508  2A3D               	goto	l2687
  3094  0509  3A03               	xorlw	3	; case 6
  3095  050A  1903               	skipnz
  3096  050B  2A98               	goto	l166
  3097  050C  3A01               	xorlw	1	; case 7
  3098  050D  1903               	skipnz
  3099  050E  2AAC               	goto	l2727
  3100  050F  3A0F               	xorlw	15	; case 8
  3101  0510  1903               	skipnz
  3102  0511  2AD3               	goto	l2739
  3103  0512  3A01               	xorlw	1	; case 9
  3104  0513  1903               	skipnz
  3105  0514  2AF9               	goto	l2757
  3106  0515  3A03               	xorlw	3	; case 10
  3107  0516  1903               	skipnz
  3108  0517  2B5F               	goto	l196
  3109  0518  3A01               	xorlw	1	; case 11
  3110  0519  1903               	skipnz
  3111  051A  2B88               	goto	l2793
  3112  051B  3A07               	xorlw	7	; case 12
  3113  051C  1903               	skipnz
  3114  051D  2BBC               	goto	l2811
  3115  051E  3A01               	xorlw	1	; case 13
  3116  051F  1903               	skipnz
  3117  0520  2BE0               	goto	l2829
  3118  0521  3A03               	xorlw	3	; case 14
  3119  0522  1903               	skipnz
  3120  0523  2C4A               	goto	l232
  3121  0524  3A01               	xorlw	1	; case 15
  3122  0525  1903               	skipnz
  3123  0526  2C5C               	goto	l2857
  3124  0527  3A1F               	xorlw	31	; case 16
  3125  0528  1903               	skipnz
  3126  0529  2C8E               	goto	l2877
  3127  052A  3A01               	xorlw	1	; case 17
  3128  052B  1903               	skipnz
  3129  052C  2CB9               	goto	l2895
  3130  052D  3A03               	xorlw	3	; case 18
  3131  052E  1903               	skipnz
  3132  052F  2CD0               	goto	l2909
  3133  0530  3A01               	xorlw	1	; case 19
  3134  0531  1903               	skipnz
  3135  0532  2CD7               	goto	l2917
  3136  0533  3A07               	xorlw	7	; case 20
  3137  0534  1903               	skipnz
  3138  0535  2CDB               	goto	l2923
  3139  0536  2856               	goto	l92
  3140  0537                     l139:
  3141  0537  2856               	goto	l92
  3142  0538  120A  118A  280E   	ljmp	start
  3143  053B                     __end_of_main:
  3144                           
  3145                           	psect	text1
  3146  0630                     __ptext1:	
  3147 ;; *************** function _USART_Write *****************
  3148 ;; Defined at:
  3149 ;;		line 51 in file "usart.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  data            1    wreg     unsigned char 
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;  data            1    4[COMMON] unsigned char 
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  1    wreg      void 
  3156 ;; Registers used:
  3157 ;;		wreg
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3163 ;;      Params:         0       0       0       0       0
  3164 ;;      Locals:         1       0       0       0       0
  3165 ;;      Temps:          0       0       0       0       0
  3166 ;;      Totals:         1       0       0       0       0
  3167 ;;Total ram usage:        1 bytes
  3168 ;; Hardware stack levels used: 1
  3169 ;; Hardware stack levels required when called: 2
  3170 ;; This function calls:
  3171 ;;		Nothing
  3172 ;; This function is called by:
  3173 ;;		_main
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           
  3178                           ;psect for function _USART_Write
  3179  0630                     _USART_Write:
  3180                           
  3181                           ;incstack = 0
  3182                           ; Regs used in _USART_Write: [wreg]
  3183                           ;USART_Write@data stored from wreg
  3184  0630  00F4               	movwf	USART_Write@data
  3185  0631                     l1787:
  3186  0631                     l419:	
  3187                           ;usart.c: 54:     {;usart.c: 55:     }
  3188                           
  3189                           
  3190                           ;usart.c: 53:     while(PIR1bits.TXIF == 0)
  3191  0631  1283               	bcf	3,5	;RP0=0, select bank0
  3192  0632  1303               	bcf	3,6	;RP1=0, select bank0
  3193  0633  1E0C               	btfss	12,4	;volatile
  3194  0634  2E36               	goto	u961
  3195  0635  2E37               	goto	u960
  3196  0636                     u961:
  3197  0636  2E31               	goto	l419
  3198  0637                     u960:
  3199  0637                     l1789:
  3200                           
  3201                           ;usart.c: 56:     TXREG = data;
  3202  0637  0874               	movf	USART_Write@data,w
  3203  0638  0099               	movwf	25	;volatile
  3204  0639                     l422:
  3205  0639  0008               	return
  3206  063A                     __end_of_USART_Write:
  3207                           
  3208                           	psect	text2
  3209  0622                     __ptext2:	
  3210 ;; *************** function _USART_Read *****************
  3211 ;; Defined at:
  3212 ;;		line 42 in file "usart.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;		None
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;  data            1    5[COMMON] unsigned char 
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  1    wreg      unsigned char 
  3219 ;; Registers used:
  3220 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3226 ;;      Params:         0       0       0       0       0
  3227 ;;      Locals:         1       0       0       0       0
  3228 ;;      Temps:          1       0       0       0       0
  3229 ;;      Totals:         2       0       0       0       0
  3230 ;;Total ram usage:        2 bytes
  3231 ;; Hardware stack levels used: 1
  3232 ;; Hardware stack levels required when called: 2
  3233 ;; This function calls:
  3234 ;;		Nothing
  3235 ;; This function is called by:
  3236 ;;		_main
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           
  3241                           ;psect for function _USART_Read
  3242  0622                     _USART_Read:
  3243  0622                     l1797:	
  3244                           ;incstack = 0
  3245                           ; Regs used in _USART_Read: [wreg-fsr0h+status,2+status,0]
  3246                           
  3247                           
  3248                           ;usart.c: 44:     unsigned char data;;usart.c: 46:     rxCount--;
  3249  0622  3001               	movlw	1
  3250  0623  1283               	bcf	3,5	;RP0=0, select bank0
  3251  0624  1303               	bcf	3,6	;RP1=0, select bank0
  3252  0625  02B1               	subwf	_rxCount,f	;volatile
  3253  0626                     l1799:
  3254                           
  3255                           ;usart.c: 47:     data = rxBuffer[rxCount];
  3256  0626  0831               	movf	_rxCount,w
  3257  0627  3E20               	addlw	(low (_rxBuffer| 0))& (0+255)
  3258  0628  0084               	movwf	4
  3259  0629  1383               	bcf	3,7	;select IRP bank0
  3260  062A  0800               	movf	0,w
  3261  062B  00F4               	movwf	??_USART_Read
  3262  062C  0874               	movf	??_USART_Read,w
  3263  062D  00F5               	movwf	USART_Read@data
  3264  062E                     l1801:
  3265                           
  3266                           ;usart.c: 48:     return data;
  3267  062E  0875               	movf	USART_Read@data,w
  3268  062F                     l416:
  3269  062F  0008               	return
  3270  0630                     __end_of_USART_Read:
  3271                           
  3272                           	psect	text3
  3273  064C                     __ptext3:	
  3274 ;; *************** function _USART_RX_Ready *****************
  3275 ;; Defined at:
  3276 ;;		line 37 in file "usart.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;		None
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;		None
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  1    wreg      unsigned char 
  3283 ;; Registers used:
  3284 ;;		wreg
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3290 ;;      Params:         0       0       0       0       0
  3291 ;;      Locals:         0       0       0       0       0
  3292 ;;      Temps:          0       0       0       0       0
  3293 ;;      Totals:         0       0       0       0       0
  3294 ;;Total ram usage:        0 bytes
  3295 ;; Hardware stack levels used: 1
  3296 ;; Hardware stack levels required when called: 2
  3297 ;; This function calls:
  3298 ;;		Nothing
  3299 ;; This function is called by:
  3300 ;;		_main
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           
  3305                           ;psect for function _USART_RX_Ready
  3306  064C                     _USART_RX_Ready:
  3307  064C                     l1791:	
  3308                           ;incstack = 0
  3309                           ; Regs used in _USART_RX_Ready: [wreg]
  3310                           
  3311                           
  3312                           ;usart.c: 39:     return rxCount;
  3313  064C  1283               	bcf	3,5	;RP0=0, select bank0
  3314  064D  1303               	bcf	3,6	;RP1=0, select bank0
  3315  064E  0831               	movf	_rxCount,w	;volatile
  3316  064F                     l413:
  3317  064F  0008               	return
  3318  0650                     __end_of_USART_RX_Ready:
  3319                           
  3320                           	psect	text4
  3321  0650                     __ptext4:	
  3322 ;; *************** function _USART_RX_Clear_Buffer *****************
  3323 ;; Defined at:
  3324 ;;		line 59 in file "usart.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;		None
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;		None
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  1    wreg      void 
  3331 ;; Registers used:
  3332 ;;		status,2
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3338 ;;      Params:         0       0       0       0       0
  3339 ;;      Locals:         0       0       0       0       0
  3340 ;;      Temps:          0       0       0       0       0
  3341 ;;      Totals:         0       0       0       0       0
  3342 ;;Total ram usage:        0 bytes
  3343 ;; Hardware stack levels used: 1
  3344 ;; Hardware stack levels required when called: 2
  3345 ;; This function calls:
  3346 ;;		Nothing
  3347 ;; This function is called by:
  3348 ;;		_main
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           
  3353                           ;psect for function _USART_RX_Clear_Buffer
  3354  0650                     _USART_RX_Clear_Buffer:
  3355  0650                     l1795:	
  3356                           ;incstack = 0
  3357                           ; Regs used in _USART_RX_Clear_Buffer: [status,2]
  3358                           
  3359                           
  3360                           ;usart.c: 61:     rxCount = 0;
  3361  0650  1283               	bcf	3,5	;RP0=0, select bank0
  3362  0651  1303               	bcf	3,6	;RP1=0, select bank0
  3363  0652  01B1               	clrf	_rxCount	;volatile
  3364  0653                     l425:
  3365  0653  0008               	return
  3366  0654                     __end_of_USART_RX_Clear_Buffer:
  3367                           
  3368                           	psect	text5
  3369  0611                     __ptext5:	
  3370 ;; *************** function _USART_Initialize *****************
  3371 ;; Defined at:
  3372 ;;		line 9 in file "usart.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;		None
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      void 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3386 ;;      Params:         0       0       0       0       0
  3387 ;;      Locals:         0       0       0       0       0
  3388 ;;      Temps:          0       0       0       0       0
  3389 ;;      Totals:         0       0       0       0       0
  3390 ;;Total ram usage:        0 bytes
  3391 ;; Hardware stack levels used: 1
  3392 ;; Hardware stack levels required when called: 2
  3393 ;; This function calls:
  3394 ;;		Nothing
  3395 ;; This function is called by:
  3396 ;;		_main
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           
  3401                           ;psect for function _USART_Initialize
  3402  0611                     _USART_Initialize:
  3403  0611                     l1781:	
  3404                           ;incstack = 0
  3405                           ; Regs used in _USART_Initialize: [wreg+status,2]
  3406                           
  3407                           
  3408                           ;usart.c: 11:     RCSTA = 0b10010000;
  3409  0611  3090               	movlw	144
  3410  0612  1283               	bcf	3,5	;RP0=0, select bank0
  3411  0613  1303               	bcf	3,6	;RP1=0, select bank0
  3412  0614  0098               	movwf	24	;volatile
  3413                           
  3414                           ;usart.c: 12:     TXSTA = 0b00100000;
  3415  0615  3020               	movlw	32
  3416  0616  1683               	bsf	3,5	;RP0=1, select bank1
  3417  0617  1303               	bcf	3,6	;RP1=0, select bank1
  3418  0618  0098               	movwf	24	;volatile
  3419                           
  3420                           ;usart.c: 15:     SPBRG = 0x81;
  3421  0619  3081               	movlw	129
  3422  061A  0099               	movwf	25	;volatile
  3423  061B                     l1783:
  3424                           
  3425                           ;usart.c: 17:     rxCount = 0;
  3426  061B  1283               	bcf	3,5	;RP0=0, select bank0
  3427  061C  1303               	bcf	3,6	;RP1=0, select bank0
  3428  061D  01B1               	clrf	_rxCount	;volatile
  3429  061E                     l1785:
  3430                           
  3431                           ;usart.c: 19:     PIE1bits.RCIE = 1;
  3432  061E  1683               	bsf	3,5	;RP0=1, select bank1
  3433  061F  1303               	bcf	3,6	;RP1=0, select bank1
  3434  0620  168C               	bsf	12,5	;volatile
  3435  0621                     l405:
  3436  0621  0008               	return
  3437  0622                     __end_of_USART_Initialize:
  3438                           
  3439                           	psect	text6
  3440  063A                     __ptext6:	
  3441 ;; *************** function _TMR0_Initialize *****************
  3442 ;; Defined at:
  3443 ;;		line 5 in file "tmr0.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;		None
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;		None
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  1    wreg      void 
  3450 ;; Registers used:
  3451 ;;		wreg
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3457 ;;      Params:         0       0       0       0       0
  3458 ;;      Locals:         0       0       0       0       0
  3459 ;;      Temps:          0       0       0       0       0
  3460 ;;      Totals:         0       0       0       0       0
  3461 ;;Total ram usage:        0 bytes
  3462 ;; Hardware stack levels used: 1
  3463 ;; Hardware stack levels required when called: 2
  3464 ;; This function calls:
  3465 ;;		Nothing
  3466 ;; This function is called by:
  3467 ;;		_main
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           
  3472                           ;psect for function _TMR0_Initialize
  3473  063A                     _TMR0_Initialize:
  3474  063A                     l1777:	
  3475                           ;incstack = 0
  3476                           ; Regs used in _TMR0_Initialize: [wreg]
  3477                           
  3478                           
  3479                           ;tmr0.c: 8:     OPTION_REG = 0b00000100;
  3480  063A  3004               	movlw	4
  3481  063B  1683               	bsf	3,5	;RP0=1, select bank1
  3482  063C  1303               	bcf	3,6	;RP1=0, select bank1
  3483  063D  0081               	movwf	1	;volatile
  3484                           
  3485                           ;tmr0.c: 9:     TMR0 = 0x64;
  3486  063E  3064               	movlw	100
  3487  063F  1283               	bcf	3,5	;RP0=0, select bank0
  3488  0640  1303               	bcf	3,6	;RP1=0, select bank0
  3489  0641  0081               	movwf	1	;volatile
  3490  0642                     l1779:
  3491                           
  3492                           ;tmr0.c: 11:     INTCONbits.T0IE = 1;
  3493  0642  168B               	bsf	11,5	;volatile
  3494  0643                     l345:
  3495  0643  0008               	return
  3496  0644                     __end_of_TMR0_Initialize:
  3497                           
  3498                           	psect	text7
  3499  05FF                     __ptext7:	
  3500 ;; *************** function _PinManager_Initialize *****************
  3501 ;; Defined at:
  3502 ;;		line 3 in file "pin_manager.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;		None
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;		None
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  1    wreg      void 
  3509 ;; Registers used:
  3510 ;;		wreg, status,2
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3516 ;;      Params:         0       0       0       0       0
  3517 ;;      Locals:         0       0       0       0       0
  3518 ;;      Temps:          0       0       0       0       0
  3519 ;;      Totals:         0       0       0       0       0
  3520 ;;Total ram usage:        0 bytes
  3521 ;; Hardware stack levels used: 1
  3522 ;; Hardware stack levels required when called: 2
  3523 ;; This function calls:
  3524 ;;		Nothing
  3525 ;; This function is called by:
  3526 ;;		_main
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           
  3531                           ;psect for function _PinManager_Initialize
  3532  05FF                     _PinManager_Initialize:
  3533  05FF                     l1761:	
  3534                           ;incstack = 0
  3535                           ; Regs used in _PinManager_Initialize: [wreg+status,2]
  3536                           
  3537                           
  3538                           ;pin_manager.c: 5:     PORTA = 0b00000000;
  3539  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  3540  0600  1303               	bcf	3,6	;RP1=0, select bank0
  3541  0601  0185               	clrf	5	;volatile
  3542                           
  3543                           ;pin_manager.c: 6:     PORTB = 0b00000000;
  3544  0602  0186               	clrf	6	;volatile
  3545                           
  3546                           ;pin_manager.c: 7:     PORTC = 0b00000000;
  3547  0603  0187               	clrf	7	;volatile
  3548  0604                     l1763:
  3549                           
  3550                           ;pin_manager.c: 9:     TRISA = 0b11010000;
  3551  0604  30D0               	movlw	208
  3552  0605  1683               	bsf	3,5	;RP0=1, select bank1
  3553  0606  1303               	bcf	3,6	;RP1=0, select bank1
  3554  0607  0085               	movwf	5	;volatile
  3555  0608                     l1765:
  3556                           
  3557                           ;pin_manager.c: 10:     TRISB = 0b11111111;
  3558  0608  30FF               	movlw	255
  3559  0609  0086               	movwf	6	;volatile
  3560  060A                     l1767:
  3561                           
  3562                           ;pin_manager.c: 11:     TRISC = 0b10010000;
  3563  060A  3090               	movlw	144
  3564  060B  0087               	movwf	7	;volatile
  3565  060C                     l1769:
  3566                           
  3567                           ;pin_manager.c: 13:     ADCON1 = 0b00000110;
  3568  060C  3006               	movlw	6
  3569  060D  009F               	movwf	31	;volatile
  3570  060E                     l1771:
  3571                           
  3572                           ;pin_manager.c: 15:     OPTION_REG = 0b00000100;
  3573  060E  3004               	movlw	4
  3574  060F  0081               	movwf	1	;volatile
  3575  0610                     l304:
  3576  0610  0008               	return
  3577  0611                     __end_of_PinManager_Initialize:
  3578                           
  3579                           	psect	text8
  3580  05EA                     __ptext8:	
  3581 ;; *************** function _PWM_Initialize *****************
  3582 ;; Defined at:
  3583 ;;		line 3 in file "pwm.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;		None
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;		None
  3588 ;; Return value:  Size  Location     Type
  3589 ;;                  1    wreg      void 
  3590 ;; Registers used:
  3591 ;;		wreg, status,2, status,0, pclath, cstack
  3592 ;; Tracked objects:
  3593 ;;		On entry : 0/0
  3594 ;;		On exit  : 0/0
  3595 ;;		Unchanged: 0/0
  3596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3597 ;;      Params:         0       0       0       0       0
  3598 ;;      Locals:         0       0       0       0       0
  3599 ;;      Temps:          0       0       0       0       0
  3600 ;;      Totals:         0       0       0       0       0
  3601 ;;Total ram usage:        0 bytes
  3602 ;; Hardware stack levels used: 1
  3603 ;; Hardware stack levels required when called: 3
  3604 ;; This function calls:
  3605 ;;		_PWM_LoadDutyValue
  3606 ;; This function is called by:
  3607 ;;		_main
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611                           
  3612                           ;psect for function _PWM_Initialize
  3613  05EA                     _PWM_Initialize:
  3614  05EA                     l2445:	
  3615                           ;incstack = 0
  3616                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3617                           
  3618                           
  3619                           ;pwm.c: 5:  CCP1CON = 0b00001111;
  3620  05EA  300F               	movlw	15
  3621  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  3622  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  3623  05ED  0097               	movwf	23	;volatile
  3624                           
  3625                           ;pwm.c: 8:     PR2 = 0xFF;
  3626  05EE  30FF               	movlw	255
  3627  05EF  1683               	bsf	3,5	;RP0=1, select bank1
  3628  05F0  1303               	bcf	3,6	;RP1=0, select bank1
  3629  05F1  0092               	movwf	18	;volatile
  3630                           
  3631                           ;pwm.c: 9:     T2CON = 0b00000111;
  3632  05F2  3007               	movlw	7
  3633  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  3634  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  3635  05F5  0092               	movwf	18	;volatile
  3636  05F6                     l2447:
  3637                           
  3638                           ;pwm.c: 11:     PWM_LoadDutyValue(0);
  3639  05F6  3000               	movlw	0
  3640  05F7  00F4               	movwf	PWM_LoadDutyValue@dutyValue
  3641  05F8  00F5               	movwf	PWM_LoadDutyValue@dutyValue+1
  3642  05F9  120A  118A  25CF  120A  118A  	fcall	_PWM_LoadDutyValue
  3643  05FE                     l438:
  3644  05FE  0008               	return
  3645  05FF                     __end_of_PWM_Initialize:
  3646                           
  3647                           	psect	text9
  3648  05CF                     __ptext9:	
  3649 ;; *************** function _PWM_LoadDutyValue *****************
  3650 ;; Defined at:
  3651 ;;		line 14 in file "pwm.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;  dutyValue       2    4[COMMON] unsigned int 
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;		None
  3656 ;; Return value:  Size  Location     Type
  3657 ;;                  1    wreg      void 
  3658 ;; Registers used:
  3659 ;;		wreg, status,2, status,0
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 0/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3665 ;;      Params:         2       0       0       0       0
  3666 ;;      Locals:         0       0       0       0       0
  3667 ;;      Temps:          0       2       0       0       0
  3668 ;;      Totals:         2       2       0       0       0
  3669 ;;Total ram usage:        4 bytes
  3670 ;; Hardware stack levels used: 1
  3671 ;; Hardware stack levels required when called: 2
  3672 ;; This function calls:
  3673 ;;		Nothing
  3674 ;; This function is called by:
  3675 ;;		_main
  3676 ;;		_PWM_Initialize
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           
  3681                           ;psect for function _PWM_LoadDutyValue
  3682  05CF                     _PWM_LoadDutyValue:
  3683  05CF                     l2443:	
  3684                           ;incstack = 0
  3685                           ; Regs used in _PWM_LoadDutyValue: [wreg+status,2+status,0]
  3686                           
  3687                           
  3688                           ;pwm.c: 14: void PWM_LoadDutyValue(unsigned int dutyValue);pwm.c: 15: {;pwm.c: 16:     C
      +                          CPR1L = (unsigned char)(dutyValue >> 2);
  3689  05CF  0875               	movf	PWM_LoadDutyValue@dutyValue+1,w
  3690  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  3691  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  3692  05D2  00BC               	movwf	??_PWM_LoadDutyValue+1
  3693  05D3  0874               	movf	PWM_LoadDutyValue@dutyValue,w
  3694  05D4  00BB               	movwf	??_PWM_LoadDutyValue
  3695  05D5  1003               	clrc
  3696  05D6  0CBC               	rrf	??_PWM_LoadDutyValue+1,f
  3697  05D7  0CBB               	rrf	??_PWM_LoadDutyValue,f
  3698  05D8  1003               	clrc
  3699  05D9  0CBC               	rrf	??_PWM_LoadDutyValue+1,f
  3700  05DA  0CBB               	rrf	??_PWM_LoadDutyValue,f
  3701  05DB  083B               	movf	??_PWM_LoadDutyValue,w
  3702  05DC  0095               	movwf	21	;volatile
  3703                           
  3704                           ;pwm.c: 17:     CCP1CON = (unsigned char)(CCP1CON | (dutyValue << 4));
  3705  05DD  0874               	movf	PWM_LoadDutyValue@dutyValue,w
  3706  05DE  00BB               	movwf	??_PWM_LoadDutyValue
  3707  05DF  3003               	movlw	3
  3708  05E0                     u1815:
  3709  05E0  1003               	clrc
  3710  05E1  0DBB               	rlf	??_PWM_LoadDutyValue,f
  3711  05E2  3EFF               	addlw	-1
  3712  05E3  1D03               	skipz
  3713  05E4  2DE0               	goto	u1815
  3714  05E5  1003               	clrc
  3715  05E6  0D3B               	rlf	??_PWM_LoadDutyValue,w
  3716  05E7  0417               	iorwf	23,w
  3717  05E8  0097               	movwf	23	;volatile
  3718  05E9                     l441:
  3719  05E9  0008               	return
  3720  05EA                     __end_of_PWM_LoadDutyValue:
  3721                           
  3722                           	psect	text10
  3723  0654                     __ptext10:	
  3724 ;; *************** function _Interrupt_Enable *****************
  3725 ;; Defined at:
  3726 ;;		line 15 in file "interrupt_manager.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;		None
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;		None
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1    wreg      void 
  3733 ;; Registers used:
  3734 ;;		None
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3740 ;;      Params:         0       0       0       0       0
  3741 ;;      Locals:         0       0       0       0       0
  3742 ;;      Temps:          0       0       0       0       0
  3743 ;;      Totals:         0       0       0       0       0
  3744 ;;Total ram usage:        0 bytes
  3745 ;; Hardware stack levels used: 1
  3746 ;; Hardware stack levels required when called: 2
  3747 ;; This function calls:
  3748 ;;		Nothing
  3749 ;; This function is called by:
  3750 ;;		_main
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           
  3755                           ;psect for function _Interrupt_Enable
  3756  0654                     _Interrupt_Enable:
  3757  0654                     l1759:	
  3758                           ;incstack = 0
  3759                           ; Regs used in _Interrupt_Enable: []
  3760                           
  3761                           
  3762                           ;interrupt_manager.c: 17:     INTCONbits.GIE = 1;
  3763  0654  178B               	bsf	11,7	;volatile
  3764                           
  3765                           ;interrupt_manager.c: 18:     INTCONbits.PEIE = 1;
  3766  0655  170B               	bsf	11,6	;volatile
  3767  0656                     l20:
  3768  0656  0008               	return
  3769  0657                     __end_of_Interrupt_Enable:
  3770                           
  3771                           	psect	text11
  3772  0587                     __ptext11:	
  3773 ;; *************** function _InterruptManager *****************
  3774 ;; Defined at:
  3775 ;;		line 6 in file "interrupt_manager.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;		None
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;		None
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  1    wreg      void 
  3782 ;; Registers used:
  3783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3789 ;;      Params:         0       0       0       0       0
  3790 ;;      Locals:         0       0       0       0       0
  3791 ;;      Temps:          3       0       0       0       0
  3792 ;;      Totals:         3       0       0       0       0
  3793 ;;Total ram usage:        3 bytes
  3794 ;; Hardware stack levels used: 1
  3795 ;; Hardware stack levels required when called: 1
  3796 ;; This function calls:
  3797 ;;		_TMR0_ISR
  3798 ;;		_USART_RX_ISR
  3799 ;; This function is called by:
  3800 ;;		Interrupt level 1
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           
  3805                           ;psect for function _InterruptManager
  3806  0587                     _InterruptManager:
  3807  0587                     i1l1805:
  3808                           
  3809                           ;interrupt_manager.c: 8:     if(INTCONbits.T0IE == 1 && INTCONbits.T0IF == 1)
  3810  0587  1E8B               	btfss	11,5	;volatile
  3811  0588  2D8A               	goto	u97_21
  3812  0589  2D8B               	goto	u97_20
  3813  058A                     u97_21:
  3814  058A  2D94               	goto	i1l1811
  3815  058B                     u97_20:
  3816  058B                     i1l1807:
  3817  058B  1D0B               	btfss	11,2	;volatile
  3818  058C  2D8E               	goto	u98_21
  3819  058D  2D8F               	goto	u98_20
  3820  058E                     u98_21:
  3821  058E  2D94               	goto	i1l1811
  3822  058F                     u98_20:
  3823  058F                     i1l1809:
  3824                           
  3825                           ;interrupt_manager.c: 9:         TMR0_ISR();
  3826  058F  120A  118A  253B  120A  118A  	fcall	_TMR0_ISR
  3827  0594                     i1l1811:
  3828                           
  3829                           ;interrupt_manager.c: 11:     if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  3830  0594  1683               	bsf	3,5	;RP0=1, select bank1
  3831  0595  1303               	bcf	3,6	;RP1=0, select bank1
  3832  0596  1E8C               	btfss	12,5	;volatile
  3833  0597  2D99               	goto	u99_21
  3834  0598  2D9A               	goto	u99_20
  3835  0599                     u99_21:
  3836  0599  2DA5               	goto	i1l17
  3837  059A                     u99_20:
  3838  059A                     i1l1813:
  3839  059A  1283               	bcf	3,5	;RP0=0, select bank0
  3840  059B  1303               	bcf	3,6	;RP1=0, select bank0
  3841  059C  1E8C               	btfss	12,5	;volatile
  3842  059D  2D9F               	goto	u100_21
  3843  059E  2DA0               	goto	u100_20
  3844  059F                     u100_21:
  3845  059F  2DA5               	goto	i1l17
  3846  05A0                     u100_20:
  3847  05A0                     i1l1815:
  3848                           
  3849                           ;interrupt_manager.c: 12:         USART_RX_ISR();
  3850  05A0  120A  118A  25AE  120A  118A  	fcall	_USART_RX_ISR
  3851  05A5                     i1l17:
  3852  05A5  0873               	movf	??_InterruptManager+2,w
  3853  05A6  008A               	movwf	10
  3854  05A7  0872               	movf	??_InterruptManager+1,w
  3855  05A8  0084               	movwf	4
  3856  05A9  0E71               	swapf	??_InterruptManager,w
  3857  05AA  0083               	movwf	3
  3858  05AB  0EFE               	swapf	btemp,f
  3859  05AC  0E7E               	swapf	btemp,w
  3860  05AD  0009               	retfie
  3861  05AE                     __end_of_InterruptManager:
  3862                           
  3863                           	psect	intentry
  3864  0004                     __pintentry:	
  3865                           ;incstack = 0
  3866                           ; Regs used in _InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3867                           
  3868  0004                     interrupt_function:
  3869  007E                     saved_w	set	btemp
  3870  0004  00FE               	movwf	btemp
  3871  0005  0E03               	swapf	3,w
  3872  0006  00F1               	movwf	??_InterruptManager
  3873  0007  0804               	movf	4,w
  3874  0008  00F2               	movwf	??_InterruptManager+1
  3875  0009  080A               	movf	10,w
  3876  000A  00F3               	movwf	??_InterruptManager+2
  3877  000B  120A  118A  2D87   	ljmp	_InterruptManager
  3878                           
  3879                           	psect	text12
  3880  05AE                     __ptext12:	
  3881 ;; *************** function _USART_RX_ISR *****************
  3882 ;; Defined at:
  3883 ;;		line 22 in file "usart.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;		None
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;		None
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  1    wreg      void 
  3890 ;; Registers used:
  3891 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3897 ;;      Params:         0       0       0       0       0
  3898 ;;      Locals:         0       0       0       0       0
  3899 ;;      Temps:          1       0       0       0       0
  3900 ;;      Totals:         1       0       0       0       0
  3901 ;;Total ram usage:        1 bytes
  3902 ;; Hardware stack levels used: 1
  3903 ;; This function calls:
  3904 ;;		Nothing
  3905 ;; This function is called by:
  3906 ;;		_InterruptManager
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           
  3911                           ;psect for function _USART_RX_ISR
  3912  05AE                     _USART_RX_ISR:
  3913  05AE                     i1l1743:	
  3914                           ;incstack = 0
  3915                           ; Regs used in _USART_RX_ISR: [wreg-fsr0h+status,2+status,0]
  3916                           
  3917                           
  3918                           ;usart.c: 24:     rxBuffer[rxCount] = RCREG;
  3919  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  3920  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  3921  05B0  081A               	movf	26,w	;volatile
  3922  05B1  00F0               	movwf	??_USART_RX_ISR
  3923  05B2  0831               	movf	_rxCount,w
  3924  05B3  3E20               	addlw	(low (_rxBuffer| 0))& (0+255)
  3925  05B4  0084               	movwf	4
  3926  05B5  0870               	movf	??_USART_RX_ISR,w
  3927  05B6  1383               	bcf	3,7	;select IRP bank0
  3928  05B7  0080               	movwf	0
  3929  05B8                     i1l1745:
  3930                           
  3931                           ;usart.c: 25:     rxCount++;
  3932  05B8  3001               	movlw	1
  3933  05B9  00F0               	movwf	??_USART_RX_ISR
  3934  05BA  0870               	movf	??_USART_RX_ISR,w
  3935  05BB  07B1               	addwf	_rxCount,f	;volatile
  3936  05BC                     i1l1747:
  3937                           
  3938                           ;usart.c: 26:     if(rxCount >= 3)
  3939  05BC  3003               	movlw	3
  3940  05BD  0231               	subwf	_rxCount,w	;volatile
  3941  05BE  1C03               	skipc
  3942  05BF  2DC1               	goto	u94_21
  3943  05C0  2DC2               	goto	u94_20
  3944  05C1                     u94_21:
  3945  05C1  2DC6               	goto	i1l1751
  3946  05C2                     u94_20:
  3947  05C2                     i1l1749:
  3948                           
  3949                           ;usart.c: 27:         rxCount = 3 - 1;
  3950  05C2  3002               	movlw	2
  3951  05C3  00F0               	movwf	??_USART_RX_ISR
  3952  05C4  0870               	movf	??_USART_RX_ISR,w
  3953  05C5  00B1               	movwf	_rxCount	;volatile
  3954  05C6                     i1l1751:
  3955                           
  3956                           ;usart.c: 28:     if(RCSTAbits.OERR == 1)
  3957  05C6  1C98               	btfss	24,1	;volatile
  3958  05C7  2DC9               	goto	u95_21
  3959  05C8  2DCA               	goto	u95_20
  3960  05C9                     u95_21:
  3961  05C9  2DCD               	goto	i1l1757
  3962  05CA                     u95_20:
  3963  05CA                     i1l1753:
  3964                           
  3965                           ;usart.c: 29:     {;usart.c: 30:         RCSTAbits.CREN = 0;
  3966  05CA  1218               	bcf	24,4	;volatile
  3967                           
  3968                           ;usart.c: 31:         RCSTAbits.CREN = 1;
  3969  05CB  1618               	bsf	24,4	;volatile
  3970  05CC                     i1l1755:
  3971                           
  3972                           ;usart.c: 32:         rxCount = 0;
  3973  05CC  01B1               	clrf	_rxCount	;volatile
  3974  05CD                     i1l1757:
  3975                           
  3976                           ;usart.c: 34:     PIR1bits.RCIF = 0;
  3977  05CD  128C               	bcf	12,5	;volatile
  3978  05CE                     i1l410:
  3979  05CE  0008               	return
  3980  05CF                     __end_of_USART_RX_ISR:
  3981                           
  3982                           	psect	text13
  3983  053B                     __ptext13:	
  3984 ;; *************** function _TMR0_ISR *****************
  3985 ;; Defined at:
  3986 ;;		line 14 in file "tmr0.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;		None
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;		None
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  1    wreg      void 
  3993 ;; Registers used:
  3994 ;;		wreg, status,2, status,0
  3995 ;; Tracked objects:
  3996 ;;		On entry : 0/0
  3997 ;;		On exit  : 0/0
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4000 ;;      Params:         0       0       0       0       0
  4001 ;;      Locals:         0       0       0       0       0
  4002 ;;      Temps:          1       0       0       0       0
  4003 ;;      Totals:         1       0       0       0       0
  4004 ;;Total ram usage:        1 bytes
  4005 ;; Hardware stack levels used: 1
  4006 ;; This function calls:
  4007 ;;		Nothing
  4008 ;; This function is called by:
  4009 ;;		_InterruptManager
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           
  4014                           ;psect for function _TMR0_ISR
  4015  053B                     _TMR0_ISR:
  4016  053B                     i1l1723:	
  4017                           ;incstack = 0
  4018                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0]
  4019                           
  4020                           
  4021                           ;tmr0.c: 16:     timerbotao1++;
  4022  053B  3001               	movlw	1
  4023  053C  1283               	bcf	3,5	;RP0=0, select bank0
  4024  053D  1303               	bcf	3,6	;RP1=0, select bank0
  4025  053E  07AF               	addwf	_timerbotao1,f
  4026  053F  1803               	skipnc
  4027  0540  0AB0               	incf	_timerbotao1+1,f
  4028  0541  3000               	movlw	0
  4029  0542  07B0               	addwf	_timerbotao1+1,f
  4030                           
  4031                           ;tmr0.c: 17:     if(timerbotao1 > 1000)
  4032  0543  3003               	movlw	3
  4033  0544  0230               	subwf	_timerbotao1+1,w
  4034  0545  30E9               	movlw	233
  4035  0546  1903               	skipnz
  4036  0547  022F               	subwf	_timerbotao1,w
  4037  0548  1C03               	skipc
  4038  0549  2D4B               	goto	u92_21
  4039  054A  2D4C               	goto	u92_20
  4040  054B                     u92_21:
  4041  054B  2D50               	goto	i1l348
  4042  054C                     u92_20:
  4043  054C                     i1l1725:
  4044                           
  4045                           ;tmr0.c: 18:         timerbotao1 = 1000;
  4046  054C  30E8               	movlw	232
  4047  054D  00AF               	movwf	_timerbotao1
  4048  054E  3003               	movlw	3
  4049  054F  00B0               	movwf	_timerbotao1+1
  4050  0550                     i1l348:
  4051                           
  4052                           ;tmr0.c: 19:     timerbotao2++;
  4053  0550  3001               	movlw	1
  4054  0551  07AD               	addwf	_timerbotao2,f
  4055  0552  1803               	skipnc
  4056  0553  0AAE               	incf	_timerbotao2+1,f
  4057  0554  3000               	movlw	0
  4058  0555  07AE               	addwf	_timerbotao2+1,f
  4059                           
  4060                           ;tmr0.c: 20:     if(timerbotao2 > 1000)
  4061  0556  3003               	movlw	3
  4062  0557  022E               	subwf	_timerbotao2+1,w
  4063  0558  30E9               	movlw	233
  4064  0559  1903               	skipnz
  4065  055A  022D               	subwf	_timerbotao2,w
  4066  055B  1C03               	skipc
  4067  055C  2D5E               	goto	u93_21
  4068  055D  2D5F               	goto	u93_20
  4069  055E                     u93_21:
  4070  055E  2D63               	goto	i1l1729
  4071  055F                     u93_20:
  4072  055F                     i1l1727:
  4073                           
  4074                           ;tmr0.c: 21:         timerbotao2 = 1000;
  4075  055F  30E8               	movlw	232
  4076  0560  00AD               	movwf	_timerbotao2
  4077  0561  3003               	movlw	3
  4078  0562  00AE               	movwf	_timerbotao2+1
  4079  0563                     i1l1729:
  4080                           
  4081                           ;tmr0.c: 22:     timerfimcurso++;
  4082  0563  3001               	movlw	1
  4083  0564  00F0               	movwf	??_TMR0_ISR
  4084  0565  0870               	movf	??_TMR0_ISR,w
  4085  0566  07BA               	addwf	_timerfimcurso,f
  4086  0567                     i1l1731:
  4087                           
  4088                           ;tmr0.c: 23:     timerchaveNF++;
  4089  0567  3001               	movlw	1
  4090  0568  00F0               	movwf	??_TMR0_ISR
  4091  0569  0870               	movf	??_TMR0_ISR,w
  4092  056A  07B9               	addwf	_timerchaveNF,f
  4093  056B                     i1l1733:
  4094                           
  4095                           ;tmr0.c: 24:     timerchaveNA++;
  4096  056B  3001               	movlw	1
  4097  056C  00F0               	movwf	??_TMR0_ISR
  4098  056D  0870               	movf	??_TMR0_ISR,w
  4099  056E  07B8               	addwf	_timerchaveNA,f
  4100  056F                     i1l1735:
  4101                           
  4102                           ;tmr0.c: 25:     timerchavecopo++;
  4103  056F  3001               	movlw	1
  4104  0570  00F0               	movwf	??_TMR0_ISR
  4105  0571  0870               	movf	??_TMR0_ISR,w
  4106  0572  07B7               	addwf	_timerchavecopo,f
  4107                           
  4108                           ;tmr0.c: 26:     timer++;
  4109  0573  3001               	movlw	1
  4110  0574  07AB               	addwf	_timer,f
  4111  0575  1803               	skipnc
  4112  0576  0AAC               	incf	_timer+1,f
  4113  0577  3000               	movlw	0
  4114  0578  07AC               	addwf	_timer+1,f
  4115                           
  4116                           ;tmr0.c: 27:     timerpwm++;
  4117  0579  3001               	movlw	1
  4118  057A  07A9               	addwf	_timerpwm,f
  4119  057B  1803               	skipnc
  4120  057C  0AAA               	incf	_timerpwm+1,f
  4121  057D  3000               	movlw	0
  4122  057E  07AA               	addwf	_timerpwm+1,f
  4123  057F                     i1l1737:
  4124                           
  4125                           ;tmr0.c: 28:     timeoutRx++;
  4126  057F  3001               	movlw	1
  4127  0580  00F0               	movwf	??_TMR0_ISR
  4128  0581  0870               	movf	??_TMR0_ISR,w
  4129  0582  07B6               	addwf	_timeoutRx,f
  4130  0583                     i1l1739:
  4131                           
  4132                           ;tmr0.c: 30:     TMR0 = 0x64;
  4133  0583  3064               	movlw	100
  4134  0584  0081               	movwf	1	;volatile
  4135  0585                     i1l1741:
  4136                           
  4137                           ;tmr0.c: 31:     INTCONbits.T0IF = 0;
  4138  0585  110B               	bcf	11,2	;volatile
  4139  0586                     i1l350:
  4140  0586  0008               	return
  4141  0587                     __end_of_TMR0_ISR:
  4142  007E                     btemp	set	126	;btemp
  4143  007E                     wtemp0	set	126
  4144                           
  4145                           	psect	config
  4146                           
  4147                           ;Config register CONFIG @ 0x2007
  4148                           ;	Oscillator Selection bits
  4149                           ;	FOSC = HS, HS oscillator
  4150                           ;	Watchdog Timer Enable bit
  4151                           ;	WDTE = ON, WDT enabled
  4152                           ;	Power-up Timer Enable bit
  4153                           ;	PWRTE = ON, PWRT enabled
  4154                           ;	Brown-out Reset Enable bit
  4155                           ;	BOREN = ON, BOR enabled
  4156                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4157                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4158                           ;	Data EEPROM Memory Code Protection bit
  4159                           ;	CPD = ON, Data EEPROM code-protected
  4160                           ;	Flash Program Memory Write Enable bits
  4161                           ;	WRT = HALF, 0000h to 0FFFh write-protected; 1000h to 1FFFh may be written to by EECON 
      +                          control
  4162                           ;	In-Circuit Debugger Mode bit
  4163                           ;	DEBUG = 0x1, unprogrammed default
  4164                           ;	Flash Program Memory Code Protection bit
  4165                           ;	CP = ON, All program memory code-protected
  4166  2007                     	org	8199
  4167  2007  1876               	dw	6262

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      4      31
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM_LoadDutyValue
    _main->_USART_Read
    _PWM_Initialize->_PWM_LoadDutyValue

Critical Paths under _InterruptManager in COMMON

    _InterruptManager->_TMR0_ISR
    _InterruptManager->_USART_RX_ISR

Critical Paths under _main in BANK0

    _main->_PWM_LoadDutyValue
    _PWM_Initialize->_PWM_LoadDutyValue

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1069
                                              2 BANK0      2     2      0
                   _Interrupt_Enable
                     _PWM_Initialize
                  _PWM_LoadDutyValue
              _PinManager_Initialize
                    _TMR0_Initialize
                   _USART_Initialize
              _USART_RX_Clear_Buffer
                     _USART_RX_Ready
                         _USART_Read
                        _USART_Write
 ---------------------------------------------------------------------------------
 (1) _USART_Write                                          1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Read                                           2     2      0      23
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _USART_RX_Ready                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_RX_Clear_Buffer                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PinManager_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Initialize                                       0     0      0     512
                  _PWM_LoadDutyValue
 ---------------------------------------------------------------------------------
 (1) _PWM_LoadDutyValue                                    4     2      2     512
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Interrupt_Enable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _InterruptManager                                     3     3      0       0
                                              1 COMMON     3     3      0
                           _TMR0_ISR
                       _USART_RX_ISR
 ---------------------------------------------------------------------------------
 (4) _USART_RX_ISR                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _TMR0_ISR                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupt_Enable
   _PWM_Initialize
     _PWM_LoadDutyValue
   _PWM_LoadDutyValue
   _PinManager_Initialize
   _TMR0_Initialize
   _USART_Initialize
   _USART_RX_Clear_Buffer
   _USART_RX_Ready
   _USART_Read
   _USART_Write

 _InterruptManager (ROOT)
   _TMR0_ISR
   _USART_RX_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      29       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4      1F       5       38.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      29      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Dec 16 15:29:56 2021

            ??_InterruptManager 0071              ??_Interrupt_Enable 0074         __size_of_PWM_Initialize 0015  
                            l20 0656                              l92 0056                              fsr 0004  
      __end_of_USART_Initialize 0622                             l140 01AE                             l221 040E  
                           l230 041E                             l150 020C                             l231 0420  
                           l223 0410                             l143 01CD                             l135 0191  
                           l304 0610                             l232 044A                             l224 0412  
                           l136 019F                             l225 0414                             l145 01EC  
                           l234 0480                             l226 0416                             l154 0221  
                           l227 0418                             l139 0537                             l228 041A  
                           l148 01F7                             l405 0621                             l413 064F  
                           l229 041C                             l149 01FF                             l422 0639  
                           l190 032B                             l166 0298                             l191 032D  
                           l416 062F                             l192 032F                             l441 05E9  
                           l345 0643                             l425 0653                             l249 04E7  
                           l193 0331                             l185 0323                             l194 0333  
                           l419 0631                             l195 0335                             l187 0325  
                           l196 035F                             l188 0327                             l197 0368  
                           l189 0329                             l438 05FE                             _PR2 0092  
                           u960 0637                             u961 0636                             fsr0 0004  
                           indf 0000                            l3041 042A                            l3043 04F6  
                          l2501 0080                            l3039 033F                            l2511 008D  
                          l2503 0082                            l1801 062E                            l2601 013B  
                          l2521 009B                            l2513 0093                            l2505 0084  
                          l2443 05CF                            l2611 0154                            l2603 013C  
                          l2523 009C                            l2531 00A7                            l2515 0095  
                          l2507 0085                            l2451 0036                            l2445 05EA  
                          l2701 0266                            l2621 017D                            l2613 015E  
                          l2605 013F                            l2541 00BB                            l2533 00AD  
                          l2525 009D                            l2517 0096                            l2509 0089  
                          l2461 0047                            l2453 0043                            l2447 05F6  
                          l2711 028C                            l2703 0270                            l2631 019D  
                          l2615 0167                            l2607 0148                            l2551 00CB  
                          l2543 00BC                            l2535 00B1                            l2527 009F  
                          l2519 0097                            l2471 004E                            l2463 0048  
                          l2455 0044                            l1761 05FF                            l2801 03A6  
                          l2721 02A1                            l2713 028D                            l2705 027A  
                          l2641 01AB                            l2633 01A1                            l2625 0184  
                          l2617 016D                            l2609 014A                            l2561 00D5  
                          l2553 00CE                            l2537 00B7                            l2545 00BD  
                          l2529 00A1                            l2481 0054                            l2473 004F  
                          l2465 0049                            l2457 0045                            l2449 0022  
                          l1771 060E                            l1763 0604                            l2811 03BC  
                          l2803 03A9                            l2731 02BD                            l2723 02A5  
                          l2715 028F                            l2707 0281                            l2651 01D4  
                          l2643 01B2                            l2635 01A2                            l2627 018D  
                          l2619 0177                            l2563 00D9                            l2571 00E3  
                          l2555 00CF                            l2547 00C1                            l2539 00BA  
                          l2491 006C                            l2483 0057                            l2475 0050  
                          l2467 004A                            l2459 0046                            l1765 0608  
                          l1781 0611                            l2901 04C7                            l2821 03D1  
                          l2813 03C0                            l2805 03AD                            l2741 02D7  
                          l2733 02C6                            l2725 02A7                            l2717 0291  
                          l2709 0288                            l2661 01F2                            l2653 01D9  
                          l2645 01B6                            l2637 01A3                            l2629 0194  
                          l2581 00FF                            l2573 00EA                            l2565 00DF  
                          l2557 00D0                            l2549 00C5                            l2493 006E  
                          l2485 005D                            l2477 0051                            l2469 004C  
                          l1759 0654                            l1767 060A                            l1783 061B  
                          l1791 064C                            l2911 04D2                            l2903 04C8  
                          l2831 03E6                            l2823 03D3                            l2815 03C6  
                          l2807 03B2                            l2751 02EA                            l2743 02DD  
                          l2735 02C9                            l2727 02AC                            l2719 029C  
                          l2671 0216                            l2663 01FC                            l2655 01DE  
                          l2647 01BF                            l2639 01A7                            l2591 011A  
                          l2583 0101                            l2575 00F0                            l2567 00E1  
                          l2559 00D1                            l2487 0061                            l2495 006F  
                          l2479 0052                            l1769 060C                            l1777 063A  
                          l1785 061E                            l2913 04D3                            l2905 04C9  
                          l2833 03EB                            l2825 03D9                            l2817 03C7  
                          l2809 03B7                            l2761 0300                            l2753 02F0  
                          l2745 02DE                            l2737 02CE                            l2729 02B5  
                          l2681 022E                            l2673 0218                            l2665 0203  
                          l2657 01E7                            l2649 01C8                            l2593 0121  
                          l2577 00F1                            l2585 010A                            l2569 00E2  
                          l2497 0073                            l2489 006A                            l1779 0642  
                          l1795 0650                            l1787 0631                            l2923 04DB  
                          l2907 04CB                            l2851 044F                            l2835 03F5  
                          l2819 03CC                            l2763 030A                            l2747 02E3  
                          l2755 02F7                            l2739 02D3                            l2691 024A  
                          l2683 0234                            l2675 021C                            l2667 0208  
                          l2659 01F0                            l2595 0128                            l2587 0113  
                          l2579 00F8                            l2499 0077                            l1797 0622  
                          l1789 0637                            l2925 04E4                            l2917 04D7  
                          l2909 04D0                            l2861 0466                            l2853 0451  
                          l2845 0422                            l2837 03FF                            l2829 03E0  
                          l2781 0371                            l2773 0337                            l2765 0314  
                          l2757 02F9                            l2749 02E8                            l2693 0254  
                          l2685 0238                            l2677 0225                            l2669 0215  
                          l2597 012A                            l2589 0119                            l1799 0626  
                          l2919 04D9                            l2871 0479                            l2863 0467  
                          l2855 0455                            l2839 0406                            l2791 0381  
                          l2783 0375                            l2767 031B                            l2695 0258  
                          l2687 023D                            l2679 022A                            l2599 0133  
                          l2873 0484                            l2865 046C                            l2857 045C  
                          l2849 044B                            l2793 0388                            l2785 0377  
                          l2777 0363                            l2697 0260                            l2689 0246  
                          l2929 04EC                            l2883 0496                            l2875 0489  
                          l2867 0471                            l2859 0460                            l2795 0391  
                          l2787 037B                            l2779 036C                            l2885 04A0  
                          l2877 048E                            l2869 0473                            l2797 0399  
                          l2789 037D                            l2895 04B9                            l2887 04AA  
                          l2879 0494                            l2799 03A2                            l2897 04BD  
                          l2889 04B1                            l2899 04C3                            u2000 00DF  
                          u2001 00DE                            u2010 00EA                            u2011 00E9  
                          u2100 015E                            u2020 00F0                            u2101 015D  
                          u2021 00EF                            u2110 0167                            u2030 00FF  
                          u2111 0166                            u2031 00FE                            u2200 01C8  
                          u2120 017D                            u2040 0113                            u2201 01C7  
                          u2121 017C                            u2105 015A                            u2041 0112  
                          u2210 01E7                            u2130 018D                            u2050 0119  
                          u2211 01E6                            u2131 018C                            u2051 0118  
                          u2300 0260                            u2220 01F0                            u2140 019D  
                          u2060 0128                            u2301 025F                            u2221 01EF  
                          u2141 019C                            u2061 0127                            u2310 0270  
                          u2230 01FC                            u2150 01A7                            u2070 013B  
                          u2311 026F                            u2231 01FB                            u2151 01A6  
                          u2071 013A                            u2400 030A                            u2320 0281  
                          u2240 0203                            u2160 01AB                            u2080 0148  
                          u2401 0309                            u2321 0280                            u2241 0202  
                          u2161 01AA                            u2081 0147                            u2410 031B  
                          u2330 0288                            u2250 0215                            u2170 01B2  
                          u2090 0154                            u2411 031A                            u2331 0287  
                          u2251 0214                            u2171 01B1                            u2091 0153  
                          u2500 03C6                            u2420 0322                            u2340 029C  
                          u2260 021C                            u2180 01B6                            u2501 03C5  
                          u2421 0321                            u2341 029B                            u2261 021B  
                          u2181 01B5                            u2510 03E6                            u2430 0363  
                          u2350 02B5                            u2270 0225                            u2190 01BF  
                          u2511 03E5                            u2431 0362                            u2351 02B4  
                          u2271 0224                            u2191 01BE                            u2095 0150  
                          u2600 04B8                            u2520 03F5                            u2440 036C  
                          u2360 02BD                            u2280 0246                            u2601 04B7  
                          u2521 03F4                            u2441 036B                            u2361 02BC  
                          u2281 0245                            u2610 04E4                            u2530 0406  
                          u2450 0391                            u2370 02C6                            u2290 0254  
                          u2611 04E3                            u2531 0405                            u2451 0390  
                          u2371 02C5                            u2291 0253                            u2540 040D  
                          u2460 0399                            u2380 02DD                            u1900 0093  
                          u1820 005D                            u2541 040C                            u2461 0398  
                          u2381 02DC                            u1901 0092                            u1821 005C  
                          u2550 0466                            u2470 03A2                            u2390 02FF  
                          u1910 009B                            u1830 0061                            u1815 05E0  
                          u2551 0465                            u2471 03A1                            u2391 02FE  
                          u1911 009A                            u1831 0060                            u2560 0484  
                          u2480 03A6                            u1920 00AD                            u1840 006A  
                          u2561 0483                            u2481 03A5                            u1921 00AC  
                          u1841 0069                            u2570 0494                            u2490 03AD  
                          u1930 00B1                            u1850 0073                            u2571 0493  
                          u2491 03AC                            u1931 00B0                            u1851 0072  
                          u2580 04A0                            u1940 00B7                            u1860 0077  
                          u2581 049F                            u1941 00B6                            u1861 0076  
                          u2590 04B1                            u1950 00C1                            u1870 0080  
                          u2591 04B0                            u1951 00C0                            u1871 007F  
                          u1960 00C5                            u1880 0089                            u1961 00C4  
                          u1881 0088                            u1970 00CB                            u1890 008D  
                          u1971 00CA                            u1891 008C                            u1980 00D5  
                          u1981 00D4                            u1990 00D9                            u1991 00D8  
                          i1l17 05A5                            _TMR0 0001                            _main 0022  
               ?_USART_RX_Ready 0070                            btemp 007E                            start 000E  
__size_of_PinManager_Initialize 0012   __end_of_PinManager_Initialize 0611         __end_of_TMR0_Initialize 0644  
                         ?_main 0070                           _T2CON 0012                           i1l410 05CE  
                         i1l350 0586                           i1l348 0550                           _RCREG 001A  
                         _RCSTA 0018                           _SPBRG 0099                           _PORTA 0005  
                         _PORTB 0006                           _PORTC 0007                           _TRISA 0085  
                         _TRISB 0086                           _TRISC 0087                           u92_20 054C  
                         u92_21 054B                           u93_20 055F                           u93_21 055E  
                         u94_20 05C2                           u94_21 05C1                           u95_20 05CA  
                         u95_21 05C9                           u97_20 058B                           u97_21 058A  
                         _TXREG 0019                           u98_20 058F                           u98_21 058E  
                         u99_20 059A                           u99_21 0599                           _TXSTA 0098  
              __end_of_TMR0_ISR 0587                           _timer 002B                           pclath 000A  
                         status 0003                           wtemp0 007E                     ?_USART_Read 0070  
               __initialization 0011                    __end_of_main 053B                          ??_main 003D  
                        _ADCON1 009F                          _CCPR1L 0015                          u100_20 05A0  
                        u100_21 059F                          i1l1731 0567                          i1l1723 053B  
                        i1l1811 0594                          i1l1741 0585                          i1l1733 056B  
                        i1l1725 054C                          i1l1813 059A                          i1l1805 0587  
                        i1l1735 056F                          i1l1727 055F                          i1l1751 05C6  
                        i1l1743 05AE                          i1l1815 05A0                          i1l1807 058B  
                        i1l1737 057F                          i1l1729 0563                          i1l1753 05CA  
                        i1l1745 05B8                          i1l1809 058F                          i1l1739 0583  
                        i1l1755 05CC                          i1l1747 05BC                          i1l1757 05CD  
                        i1l1749 05C2                  _PWM_Initialize 05EA                          _estado 0076  
              ?_TMR0_Initialize 0070                          saved_w 007E             __size_of_USART_Read 000E  
       __end_of__initialization 001E                    ?_USART_Write 0070          __end_of_PWM_Initialize 05FF  
                __pcstackCOMMON 0070                       ?_TMR0_ISR 0070       __size_of_InterruptManager 0027  
             ?_USART_Initialize 0070       __size_of_Interrupt_Enable 0003              ??_USART_Initialize 0074  
              ??_USART_RX_Ready 0074                      __pbssBANK0 0020           _USART_RX_Clear_Buffer 0650  
               ?_PWM_Initialize 0070                      __pmaintext 0022                      ??_TMR0_ISR 0070  
                    __pintentry 0004                         _CCP1CON 0017                    ??_USART_Read 0074  
         _PinManager_Initialize 05FF                         __ptext1 0630                         __ptext2 0622  
                       __ptext3 064C                         __ptext4 0650                         __ptext5 0611  
                       __ptext6 063A                         __ptext7 05FF                         __ptext8 05EA  
                       __ptext9 05CF                         _escravo 0023                  USART_Read@data 0075  
                       _estagio 0035                         _rxCount 0031              __end_of_USART_Read 0630  
                       clrloop0 0645            end_of_initialization 001E          ?_USART_RX_Clear_Buffer 0070  
                     _RCSTAbits 0018            __size_of_USART_Write 000A                       _PORTAbits 0005  
                     _PORTBbits 0006                       _PORTCbits 0007                _InterruptManager 0587  
              _Interrupt_Enable 0654                      _pwm_setado 0027                   ?_USART_RX_ISR 0070  
             _PWM_LoadDutyValue 05CF              ?_PWM_LoadDutyValue 0074             ??_PWM_LoadDutyValue 003B  
        ?_PinManager_Initialize 0070               __size_of_TMR0_ISR 004C             start_initialization 0011  
      __size_of_TMR0_Initialize 000A                  ??_USART_RX_ISR 0070       __end_of_PWM_LoadDutyValue 05EA  
              ??_PWM_Initialize 0076       __size_of_USART_Initialize 0011                     __pbssCOMMON 0076  
                     ___latbits 0002                   __pcstackBANK0 003B         ??_USART_RX_Clear_Buffer 0074  
    __size_of_PWM_LoadDutyValue 001B               ??_TMR0_Initialize 0074               interrupt_function 0004  
      __end_of_InterruptManager 05AE                       clear_ram0 0644                        _PIE1bits 008C  
      __end_of_Interrupt_Enable 0657         __size_of_USART_RX_Ready 0004                        _PIR1bits 000C  
                      _TMR0_ISR 053B                       _timeoutRx 0036            __end_of_USART_RX_ISR 05CF  
                     _pwm_atual 0025                     _comunicacao 0078                  _timerchavecopo 0037  
              _USART_Initialize 0611                   ??_USART_Write 0074      PWM_LoadDutyValue@dutyValue 0074  
       ??_PinManager_Initialize 0074                        __ptext10 0654                        __ptext11 0587  
                      __ptext12 05AE                        __ptext13 053B                        _endereco 0079  
                 __size_of_main 0519                        _rxBuffer 0020                        _timerpwm 0029  
           __end_of_USART_Write 063A                      _INTCONbits 000B                   _timerfimcurso 003A  
                      intlevel1 0000               _estagio@main$F540 0033               _estagio@main$F449 0034  
             _estagio@main$F683 0032                  _USART_RX_Ready 064C           __size_of_USART_RX_ISR 0021  
                  _timerchaveNA 0038                    _timerchaveNF 0039                      _OPTION_REG 0081  
               _TMR0_Initialize 063A                     _timerbotao1 002F                     _timerbotao2 002D  
                  _USART_RX_ISR 05AE  __size_of_USART_RX_Clear_Buffer 0004   __end_of_USART_RX_Clear_Buffer 0654  
        __end_of_USART_RX_Ready 0650                 USART_Write@data 0074               ?_InterruptManager 0070  
                    _USART_Read 0622                     _USART_Write 0630               ?_Interrupt_Enable 0070  
