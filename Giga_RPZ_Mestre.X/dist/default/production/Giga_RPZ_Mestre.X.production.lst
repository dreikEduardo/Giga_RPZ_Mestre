

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Oct 14 17:19:02 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F876A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.32
    27                           ; Generated 02/02/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F876A Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000D                     	;# 
   129  000E                     	;# 
   130  000E                     	;# 
   131  000F                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0015                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001B                     	;# 
   145  001B                     	;# 
   146  001C                     	;# 
   147  001D                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  0081                     	;# 
   151  0085                     	;# 
   152  0086                     	;# 
   153  0087                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  0091                     	;# 
   158  0092                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0098                     	;# 
   162  0099                     	;# 
   163  009C                     	;# 
   164  009D                     	;# 
   165  009E                     	;# 
   166  009F                     	;# 
   167  010C                     	;# 
   168  010D                     	;# 
   169  010E                     	;# 
   170  010F                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173  0000                     	;# 
   174  0001                     	;# 
   175  0002                     	;# 
   176  0003                     	;# 
   177  0004                     	;# 
   178  0005                     	;# 
   179  0006                     	;# 
   180  0007                     	;# 
   181  000A                     	;# 
   182  000B                     	;# 
   183  000C                     	;# 
   184  000D                     	;# 
   185  000E                     	;# 
   186  000E                     	;# 
   187  000F                     	;# 
   188  0010                     	;# 
   189  0011                     	;# 
   190  0012                     	;# 
   191  0013                     	;# 
   192  0014                     	;# 
   193  0015                     	;# 
   194  0015                     	;# 
   195  0016                     	;# 
   196  0017                     	;# 
   197  0018                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001B                     	;# 
   201  001B                     	;# 
   202  001C                     	;# 
   203  001D                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  0081                     	;# 
   207  0085                     	;# 
   208  0086                     	;# 
   209  0087                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0094                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  009F                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  008C                     	;# 
   267  008D                     	;# 
   268  008E                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  000A                     	;# 
   294  000B                     	;# 
   295  000C                     	;# 
   296  000D                     	;# 
   297  000E                     	;# 
   298  000E                     	;# 
   299  000F                     	;# 
   300  0010                     	;# 
   301  0011                     	;# 
   302  0012                     	;# 
   303  0013                     	;# 
   304  0014                     	;# 
   305  0015                     	;# 
   306  0015                     	;# 
   307  0016                     	;# 
   308  0017                     	;# 
   309  0018                     	;# 
   310  0019                     	;# 
   311  001A                     	;# 
   312  001B                     	;# 
   313  001B                     	;# 
   314  001C                     	;# 
   315  001D                     	;# 
   316  001E                     	;# 
   317  001F                     	;# 
   318  0081                     	;# 
   319  0085                     	;# 
   320  0086                     	;# 
   321  0087                     	;# 
   322  008C                     	;# 
   323  008D                     	;# 
   324  008E                     	;# 
   325  0091                     	;# 
   326  0092                     	;# 
   327  0093                     	;# 
   328  0094                     	;# 
   329  0098                     	;# 
   330  0099                     	;# 
   331  009C                     	;# 
   332  009D                     	;# 
   333  009E                     	;# 
   334  009F                     	;# 
   335  010C                     	;# 
   336  010D                     	;# 
   337  010E                     	;# 
   338  010F                     	;# 
   339  018C                     	;# 
   340  018D                     	;# 
   341  0000                     	;# 
   342  0001                     	;# 
   343  0002                     	;# 
   344  0003                     	;# 
   345  0004                     	;# 
   346  0005                     	;# 
   347  0006                     	;# 
   348  0007                     	;# 
   349  000A                     	;# 
   350  000B                     	;# 
   351  000C                     	;# 
   352  000D                     	;# 
   353  000E                     	;# 
   354  000E                     	;# 
   355  000F                     	;# 
   356  0010                     	;# 
   357  0011                     	;# 
   358  0012                     	;# 
   359  0013                     	;# 
   360  0014                     	;# 
   361  0015                     	;# 
   362  0015                     	;# 
   363  0016                     	;# 
   364  0017                     	;# 
   365  0018                     	;# 
   366  0019                     	;# 
   367  001A                     	;# 
   368  001B                     	;# 
   369  001B                     	;# 
   370  001C                     	;# 
   371  001D                     	;# 
   372  001E                     	;# 
   373  001F                     	;# 
   374  0081                     	;# 
   375  0085                     	;# 
   376  0086                     	;# 
   377  0087                     	;# 
   378  008C                     	;# 
   379  008D                     	;# 
   380  008E                     	;# 
   381  0091                     	;# 
   382  0092                     	;# 
   383  0093                     	;# 
   384  0094                     	;# 
   385  0098                     	;# 
   386  0099                     	;# 
   387  009C                     	;# 
   388  009D                     	;# 
   389  009E                     	;# 
   390  009F                     	;# 
   391  010C                     	;# 
   392  010D                     	;# 
   393  010E                     	;# 
   394  010F                     	;# 
   395  018C                     	;# 
   396  018D                     	;# 
   397  0000                     	;# 
   398  0001                     	;# 
   399  0002                     	;# 
   400  0003                     	;# 
   401  0004                     	;# 
   402  0005                     	;# 
   403  0006                     	;# 
   404  0007                     	;# 
   405  000A                     	;# 
   406  000B                     	;# 
   407  000C                     	;# 
   408  000D                     	;# 
   409  000E                     	;# 
   410  000E                     	;# 
   411  000F                     	;# 
   412  0010                     	;# 
   413  0011                     	;# 
   414  0012                     	;# 
   415  0013                     	;# 
   416  0014                     	;# 
   417  0015                     	;# 
   418  0015                     	;# 
   419  0016                     	;# 
   420  0017                     	;# 
   421  0018                     	;# 
   422  0019                     	;# 
   423  001A                     	;# 
   424  001B                     	;# 
   425  001B                     	;# 
   426  001C                     	;# 
   427  001D                     	;# 
   428  001E                     	;# 
   429  001F                     	;# 
   430  0081                     	;# 
   431  0085                     	;# 
   432  0086                     	;# 
   433  0087                     	;# 
   434  008C                     	;# 
   435  008D                     	;# 
   436  008E                     	;# 
   437  0091                     	;# 
   438  0092                     	;# 
   439  0093                     	;# 
   440  0094                     	;# 
   441  0098                     	;# 
   442  0099                     	;# 
   443  009C                     	;# 
   444  009D                     	;# 
   445  009E                     	;# 
   446  009F                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  0000                     	;# 
   454  0001                     	;# 
   455  0002                     	;# 
   456  0003                     	;# 
   457  0004                     	;# 
   458  0005                     	;# 
   459  0006                     	;# 
   460  0007                     	;# 
   461  000A                     	;# 
   462  000B                     	;# 
   463  000C                     	;# 
   464  000D                     	;# 
   465  000E                     	;# 
   466  000E                     	;# 
   467  000F                     	;# 
   468  0010                     	;# 
   469  0011                     	;# 
   470  0012                     	;# 
   471  0013                     	;# 
   472  0014                     	;# 
   473  0015                     	;# 
   474  0015                     	;# 
   475  0016                     	;# 
   476  0017                     	;# 
   477  0018                     	;# 
   478  0019                     	;# 
   479  001A                     	;# 
   480  001B                     	;# 
   481  001B                     	;# 
   482  001C                     	;# 
   483  001D                     	;# 
   484  001E                     	;# 
   485  001F                     	;# 
   486  0081                     	;# 
   487  0085                     	;# 
   488  0086                     	;# 
   489  0087                     	;# 
   490  008C                     	;# 
   491  008D                     	;# 
   492  008E                     	;# 
   493  0091                     	;# 
   494  0092                     	;# 
   495  0093                     	;# 
   496  0094                     	;# 
   497  0098                     	;# 
   498  0099                     	;# 
   499  009C                     	;# 
   500  009D                     	;# 
   501  009E                     	;# 
   502  009F                     	;# 
   503  010C                     	;# 
   504  010D                     	;# 
   505  010E                     	;# 
   506  010F                     	;# 
   507  018C                     	;# 
   508  018D                     	;# 
   509  0015                     _CCPR1L	set	21
   510  0012                     _T2CON	set	18
   511  0017                     _CCP1CON	set	23
   512  0019                     _TXREG	set	25
   513  0018                     _RCSTAbits	set	24
   514  001A                     _RCREG	set	26
   515  0018                     _RCSTA	set	24
   516  0001                     _TMR0	set	1
   517  0007                     _PORTC	set	7
   518  0006                     _PORTB	set	6
   519  0005                     _PORTA	set	5
   520  0005                     _PORTAbits	set	5
   521  0007                     _PORTCbits	set	7
   522  0006                     _PORTBbits	set	6
   523  000C                     _PIR1bits	set	12
   524  000B                     _INTCONbits	set	11
   525  0092                     _PR2	set	146
   526  0099                     _SPBRG	set	153
   527  0098                     _TXSTA	set	152
   528  0081                     _OPTION_REG	set	129
   529  009F                     _ADCON1	set	159
   530  0087                     _TRISC	set	135
   531  0086                     _TRISB	set	134
   532  0085                     _TRISA	set	133
   533  008C                     _PIE1bits	set	140
   534                           
   535                           	psect	cinit
   536  0011                     start_initialization:	
   537                           ; #config settings
   538                           
   539  0011                     __initialization:
   540                           
   541                           ; Clear objects allocated to COMMON
   542  0011  01F0               	clrf	__pbssCOMMON& (0+127)
   543  0012  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   544  0013  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   545  0014  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   546  0015  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   547  0016  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   548                           
   549                           ; Clear objects allocated to BANK0
   550  0017  1383               	bcf	3,7	;select IRP bank0
   551  0018  3020               	movlw	low __pbssBANK0
   552  0019  0084               	movwf	4
   553  001A  3031               	movlw	low (__pbssBANK0+17)
   554  001B  120A  118A  2338  120A  118A  	fcall	clear_ram0
   555  0020                     end_of_initialization:	
   556                           ;End of C runtime variable initialization code
   557                           
   558  0020                     __end_of__initialization:
   559  0020  0183               	clrf	3
   560  0021  120A  118A  2824   	ljmp	_main	;jump to C main() function
   561                           
   562                           	psect	bssCOMMON
   563  0070                     __pbssCOMMON:
   564  0070                     _timer:
   565  0070                     	ds	2
   566  0072                     _rxCount:
   567  0072                     	ds	1
   568  0073                     _estado:
   569  0073                     	ds	1
   570  0074                     _comunicacao:
   571  0074                     	ds	1
   572  0075                     _endereco:
   573  0075                     	ds	1
   574                           
   575                           	psect	bssBANK0
   576  0020                     __pbssBANK0:
   577  0020                     _rxBuffer:
   578  0020                     	ds	3
   579  0023                     _timerbotao2:
   580  0023                     	ds	2
   581  0025                     _timerbotao1:
   582  0025                     	ds	2
   583  0027                     _estagio@main$F545:
   584  0027                     	ds	1
   585  0028                     _estagio@main$F427:
   586  0028                     	ds	1
   587  0029                     _estagio@main$F361:
   588  0029                     	ds	1
   589  002A                     _estagio:
   590  002A                     	ds	1
   591  002B                     _pwm_atual:
   592  002B                     	ds	1
   593  002C                     _pwm_setado:
   594  002C                     	ds	1
   595  002D                     _timerpwm:
   596  002D                     	ds	1
   597  002E                     _timerchaveNA:
   598  002E                     	ds	1
   599  002F                     _timerchaveNF:
   600  002F                     	ds	1
   601  0030                     _timerfimcurso:
   602  0030                     	ds	1
   603                           
   604                           	psect	clrtext
   605  0338                     clear_ram0:	
   606                           ;	Called with FSR containing the base address, and
   607                           ;	W with the last address+1
   608                           
   609  0338  0064               	clrwdt	;clear the watchdog before getting into this loop
   610  0339                     clrloop0:
   611  0339  0180               	clrf	0	;clear RAM location pointed to by FSR
   612  033A  0A84               	incf	4,f	;increment pointer
   613  033B  0604               	xorwf	4,w	;XOR with final address
   614  033C  1903               	btfsc	3,2	;have we reached the end yet?
   615  033D  3400               	retlw	0	;all done for this memory range, return
   616  033E  0604               	xorwf	4,w	;XOR again to restore value
   617  033F  2B39               	goto	clrloop0	;do the next byte
   618                           
   619                           	psect	cstackCOMMON
   620  0076                     __pcstackCOMMON:
   621  0076                     ?_TMR0_ISR:
   622  0076                     ??_TMR0_ISR:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0076                     ?_USART_RX_ISR:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0076                     ??_USART_RX_ISR:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0076                     ?_PinManager_Initialize:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0076                     ?_TMR0_Initialize:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0076                     ?_USART_Initialize:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0076                     ?_USART_Write:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0076                     ?_USART_RX_Clear_Buffer:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0076                     ?_USART_RX_Ready:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0076                     ?_USART_Read:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0076                     ?_InterruptManager:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0076                     ?_Interrupt_Enable:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0076                     ?_main:	
   659                           ; 1 bytes @ 0x0
   660                           
   661                           
   662                           ; 1 bytes @ 0x0
   663  0076                     	ds	1
   664  0077                     ??_InterruptManager:
   665                           
   666                           ; 1 bytes @ 0x1
   667  0077                     	ds	3
   668  007A                     ??_PinManager_Initialize:
   669  007A                     ??_TMR0_Initialize:	
   670                           ; 1 bytes @ 0x4
   671                           
   672  007A                     ??_USART_Initialize:	
   673                           ; 1 bytes @ 0x4
   674                           
   675  007A                     ??_USART_Write:	
   676                           ; 1 bytes @ 0x4
   677                           
   678  007A                     ??_USART_RX_Clear_Buffer:	
   679                           ; 1 bytes @ 0x4
   680                           
   681  007A                     ??_USART_RX_Ready:	
   682                           ; 1 bytes @ 0x4
   683                           
   684  007A                     ??_Interrupt_Enable:	
   685                           ; 1 bytes @ 0x4
   686                           
   687                           
   688                           	psect	cstackBANK0
   689  0031                     __pcstackBANK0:	
   690                           ; 1 bytes @ 0x4
   691                           
   692  0031                     ??_USART_Read:
   693  0031                     USART_Write@data:	
   694                           ; 1 bytes @ 0x0
   695                           
   696                           
   697                           ; 1 bytes @ 0x0
   698  0031                     	ds	1
   699  0032                     USART_Read@data:
   700                           
   701                           ; 1 bytes @ 0x1
   702  0032                     	ds	1
   703  0033                     ??_main:
   704                           
   705                           ; 1 bytes @ 0x2
   706  0033                     	ds	2
   707                           
   708                           	psect	maintext
   709  0024                     __pmaintext:	
   710 ;;
   711 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   712 ;;
   713 ;; *************** function _main *****************
   714 ;; Defined at:
   715 ;;		line 17 in file "main.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;		None
   718 ;; Auto vars:     Size  Location     Type
   719 ;;		None
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   724 ;; Tracked objects:
   725 ;;		On entry : B00/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   729 ;;      Params:         0       0       0       0       0
   730 ;;      Locals:         0       0       0       0       0
   731 ;;      Temps:          0       2       0       0       0
   732 ;;      Totals:         0       2       0       0       0
   733 ;;Total ram usage:        2 bytes
   734 ;; Hardware stack levels required when called: 3
   735 ;; This function calls:
   736 ;;		_Interrupt_Enable
   737 ;;		_PinManager_Initialize
   738 ;;		_TMR0_Initialize
   739 ;;		_USART_Initialize
   740 ;;		_USART_RX_Clear_Buffer
   741 ;;		_USART_RX_Ready
   742 ;;		_USART_Read
   743 ;;		_USART_Write
   744 ;; This function is called by:
   745 ;;		Startup code after reset
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           
   750                           ;psect for function _main
   751  0024                     _main:
   752  0024                     l1676:	
   753                           ;incstack = 0
   754                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   755                           
   756                           
   757                           ;main.c: 19:     PinManager_Initialize();
   758  0024  120A  118A  22F7  120A  118A  	fcall	_PinManager_Initialize
   759                           
   760                           ;main.c: 20:     TMR0_Initialize();
   761  0029  120A  118A  232E  120A  118A  	fcall	_TMR0_Initialize
   762                           
   763                           ;main.c: 22:     USART_Initialize();
   764  002E  120A  118A  2317  120A  118A  	fcall	_USART_Initialize
   765  0033                     l1678:
   766                           
   767                           ;main.c: 23:     Interrupt_Enable();
   768  0033  120A  118A  2340  120A  118A  	fcall	_Interrupt_Enable
   769  0038                     l1680:
   770                           
   771                           ;main.c: 25:     estagio = INTERROMPIDO;
   772  0038  1283               	bcf	3,5	;RP0=0, select bank0
   773  0039  1303               	bcf	3,6	;RP1=0, select bank0
   774  003A  01AA               	clrf	_estagio
   775  003B                     l1682:
   776                           
   777                           ;main.c: 26:     estado.botao1 = 0;
   778  003B  1073               	bcf	_estado,0
   779  003C                     l1684:
   780                           
   781                           ;main.c: 27:     estado.botao2 = 0;
   782  003C  10F3               	bcf	_estado,1
   783  003D                     l1686:
   784                           
   785                           ;main.c: 28:     estado.fimcurso = 0;
   786  003D  1173               	bcf	_estado,2
   787  003E                     l1688:
   788                           
   789                           ;main.c: 29:     estado.chaveNF = 0;
   790  003E  11F3               	bcf	_estado,3
   791  003F                     l1690:
   792                           
   793                           ;main.c: 30:     estado.chaveNA = 0;
   794  003F  1273               	bcf	_estado,4
   795  0040                     l1692:
   796                           
   797                           ;main.c: 31:     timerbotao1 = 0;
   798  0040  01A5               	clrf	_timerbotao1
   799  0041  01A6               	clrf	_timerbotao1+1
   800  0042                     l1694:
   801                           
   802                           ;main.c: 32:     timerbotao2 = 0;
   803  0042  01A3               	clrf	_timerbotao2
   804  0043  01A4               	clrf	_timerbotao2+1
   805  0044                     l1696:
   806                           
   807                           ;main.c: 33:     timerfimcurso = 0;
   808  0044  01B0               	clrf	_timerfimcurso
   809  0045                     l1698:
   810                           
   811                           ;main.c: 34:     timerchaveNF = 0;
   812  0045  01AF               	clrf	_timerchaveNF
   813  0046                     l1700:
   814                           
   815                           ;main.c: 35:     timerchaveNA = 0;
   816  0046  01AE               	clrf	_timerchaveNA
   817  0047                     l1702:
   818                           
   819                           ;main.c: 36:     timerpwm = 0;
   820  0047  01AD               	clrf	_timerpwm
   821  0048                     l76:	
   822                           ;main.c: 39:     while(1)
   823                           
   824  0048  0064               	clrwdt	;# 
   825  0049                     l1704:
   826                           
   827                           ;main.c: 43:         if(PORTBbits.RB0 == 0)
   828  0049  1283               	bcf	3,5	;RP0=0, select bank0
   829  004A  1303               	bcf	3,6	;RP1=0, select bank0
   830  004B  1806               	btfsc	6,0	;volatile
   831  004C  284E               	goto	u1041
   832  004D  284F               	goto	u1040
   833  004E                     u1041:
   834  004E  285E               	goto	l1712
   835  004F                     u1040:
   836  004F                     l1706:
   837                           
   838                           ;main.c: 44:         {;main.c: 45:             if(estado.botao1 == 0)
   839  004F  1873               	btfsc	_estado,0
   840  0050  2852               	goto	u1051
   841  0051  2853               	goto	u1050
   842  0052                     u1051:
   843  0052  2861               	goto	l1716
   844  0053                     u1050:
   845  0053                     l1708:
   846                           
   847                           ;main.c: 46:             {;main.c: 47:                 if(timerbotao1 > 100)
   848  0053  3000               	movlw	0
   849  0054  0226               	subwf	_timerbotao1+1,w
   850  0055  3065               	movlw	101
   851  0056  1903               	skipnz
   852  0057  0225               	subwf	_timerbotao1,w
   853  0058  1C03               	skipc
   854  0059  285B               	goto	u1061
   855  005A  285C               	goto	u1060
   856  005B                     u1061:
   857  005B  2861               	goto	l1716
   858  005C                     u1060:
   859  005C                     l1710:
   860                           
   861                           ;main.c: 48:                     estado.botao1 = 1;
   862  005C  1473               	bsf	_estado,0
   863  005D  2861               	goto	l1716
   864  005E                     l1712:
   865                           
   866                           ;main.c: 52:         {;main.c: 53:             timerbotao1 = 0;
   867  005E  01A5               	clrf	_timerbotao1
   868  005F  01A6               	clrf	_timerbotao1+1
   869  0060                     l1714:
   870                           
   871                           ;main.c: 54:             estado.botao1 = 0;
   872  0060  1073               	bcf	_estado,0
   873  0061                     l1716:
   874                           
   875                           ;main.c: 57:         if(PORTBbits.RB1 == 0)
   876  0061  1886               	btfsc	6,1	;volatile
   877  0062  2864               	goto	u1071
   878  0063  2865               	goto	u1070
   879  0064                     u1071:
   880  0064  2874               	goto	l1724
   881  0065                     u1070:
   882  0065                     l1718:
   883                           
   884                           ;main.c: 58:         {;main.c: 59:             if(estado.botao2 == 0)
   885  0065  18F3               	btfsc	_estado,1
   886  0066  2868               	goto	u1081
   887  0067  2869               	goto	u1080
   888  0068                     u1081:
   889  0068  2877               	goto	l1728
   890  0069                     u1080:
   891  0069                     l1720:
   892                           
   893                           ;main.c: 60:             {;main.c: 61:                 if(timerbotao2 > 100)
   894  0069  3000               	movlw	0
   895  006A  0224               	subwf	_timerbotao2+1,w
   896  006B  3065               	movlw	101
   897  006C  1903               	skipnz
   898  006D  0223               	subwf	_timerbotao2,w
   899  006E  1C03               	skipc
   900  006F  2871               	goto	u1091
   901  0070  2872               	goto	u1090
   902  0071                     u1091:
   903  0071  2877               	goto	l1728
   904  0072                     u1090:
   905  0072                     l1722:
   906                           
   907                           ;main.c: 62:                     estado.botao2 = 1;
   908  0072  14F3               	bsf	_estado,1
   909  0073  2877               	goto	l1728
   910  0074                     l1724:
   911                           
   912                           ;main.c: 66:         {;main.c: 67:             timerbotao2 = 0;
   913  0074  01A3               	clrf	_timerbotao2
   914  0075  01A4               	clrf	_timerbotao2+1
   915  0076                     l1726:
   916                           
   917                           ;main.c: 68:             estado.botao2 = 0;
   918  0076  10F3               	bcf	_estado,1
   919  0077                     l1728:
   920                           
   921                           ;main.c: 71:         if(PORTBbits.RB2 == 0)
   922  0077  1906               	btfsc	6,2	;volatile
   923  0078  287A               	goto	u1101
   924  0079  287B               	goto	u1100
   925  007A                     u1101:
   926  007A  2887               	goto	l1736
   927  007B                     u1100:
   928  007B                     l1730:
   929                           
   930                           ;main.c: 72:         {;main.c: 73:             if(estado.fimcurso == 0)
   931  007B  1973               	btfsc	_estado,2
   932  007C  287E               	goto	u1111
   933  007D  287F               	goto	u1110
   934  007E                     u1111:
   935  007E  2899               	goto	l1752
   936  007F                     u1110:
   937  007F                     l1732:
   938                           
   939                           ;main.c: 74:             {;main.c: 75:                 if(timerfimcurso > 100)
   940  007F  3065               	movlw	101
   941  0080  0230               	subwf	_timerfimcurso,w
   942  0081  1C03               	skipc
   943  0082  2884               	goto	u1121
   944  0083  2885               	goto	u1120
   945  0084                     u1121:
   946  0084  2899               	goto	l1752
   947  0085                     u1120:
   948  0085                     l1734:
   949                           
   950                           ;main.c: 76:                     estado.fimcurso = 1;
   951  0085  1573               	bsf	_estado,2
   952  0086  2899               	goto	l1752
   953  0087                     l1736:
   954                           
   955                           ;main.c: 80:         {;main.c: 81:             timerfimcurso = 0;
   956  0087  01B0               	clrf	_timerfimcurso
   957  0088                     l1738:
   958                           
   959                           ;main.c: 82:             estado.fimcurso = 0;
   960  0088  1173               	bcf	_estado,2
   961  0089                     l1740:
   962                           
   963                           ;main.c: 83:             if(estado.testando == 1)
   964  0089  1EF3               	btfss	_estado,5
   965  008A  288C               	goto	u1131
   966  008B  288D               	goto	u1130
   967  008C                     u1131:
   968  008C  2899               	goto	l1752
   969  008D                     u1130:
   970  008D                     l1742:
   971                           
   972                           ;main.c: 84:             {;main.c: 85:                 estagio = INTERROMPIDO;
   973  008D  01AA               	clrf	_estagio
   974  008E                     l1744:
   975                           
   976                           ;main.c: 86:                 estado.testando = 0;
   977  008E  12F3               	bcf	_estado,5
   978  008F                     l1746:
   979                           
   980                           ;main.c: 87:                 comunicacao.endereco = 0x0F;
   981  008F  300F               	movlw	15
   982  0090  04F4               	iorwf	_comunicacao,f
   983  0091                     l1748:
   984                           
   985                           ;main.c: 88:                 comunicacao.resposta = 0x00;
   986  0091  300F               	movlw	-241
   987  0092  05F4               	andwf	_comunicacao,f
   988  0093                     l1750:
   989                           
   990                           ;main.c: 89:                 USART_Write(comunicacao.byte);
   991  0093  0874               	movf	_comunicacao,w
   992  0094  120A  118A  2324  120A  118A  	fcall	_USART_Write
   993  0099                     l1752:
   994                           
   995                           ;main.c: 93:         if(PORTBbits.RB3 == 0)
   996  0099  1283               	bcf	3,5	;RP0=0, select bank0
   997  009A  1303               	bcf	3,6	;RP1=0, select bank0
   998  009B  1986               	btfsc	6,3	;volatile
   999  009C  289E               	goto	u1141
  1000  009D  289F               	goto	u1140
  1001  009E                     u1141:
  1002  009E  28AC               	goto	l1760
  1003  009F                     u1140:
  1004  009F                     l1754:
  1005                           
  1006                           ;main.c: 94:         {;main.c: 95:             if(estado.chaveNF == 0)
  1007  009F  19F3               	btfsc	_estado,3
  1008  00A0  28A2               	goto	u1151
  1009  00A1  28A3               	goto	u1150
  1010  00A2                     u1151:
  1011  00A2  28AF               	goto	l1766
  1012  00A3                     u1150:
  1013  00A3                     l1756:
  1014                           
  1015                           ;main.c: 96:             {;main.c: 97:                 if(timerchaveNF > 100)
  1016  00A3  3065               	movlw	101
  1017  00A4  022F               	subwf	_timerchaveNF,w
  1018  00A5  1C03               	skipc
  1019  00A6  28A8               	goto	u1161
  1020  00A7  28A9               	goto	u1160
  1021  00A8                     u1161:
  1022  00A8  28AF               	goto	l1766
  1023  00A9                     u1160:
  1024  00A9                     l1758:
  1025                           
  1026                           ;main.c: 98:                 {;main.c: 99:                     estado.chaveNF = 1;
  1027  00A9  15F3               	bsf	_estado,3
  1028                           
  1029                           ;main.c: 100:                     PORTCbits.RC0 = 1;
  1030  00AA  1407               	bsf	7,0	;volatile
  1031  00AB  28AF               	goto	l1766
  1032  00AC                     l1760:
  1033                           
  1034                           ;main.c: 105:         {;main.c: 106:             timerchaveNF = 0;
  1035  00AC  01AF               	clrf	_timerchaveNF
  1036  00AD                     l1762:
  1037                           
  1038                           ;main.c: 107:             estado.chaveNF = 0;
  1039  00AD  11F3               	bcf	_estado,3
  1040  00AE                     l1764:
  1041                           
  1042                           ;main.c: 108:             PORTCbits.RC0 = 0;
  1043  00AE  1007               	bcf	7,0	;volatile
  1044  00AF                     l1766:
  1045                           
  1046                           ;main.c: 111:         if(PORTBbits.RB4 == 0)
  1047  00AF  1A06               	btfsc	6,4	;volatile
  1048  00B0  28B2               	goto	u1171
  1049  00B1  28B3               	goto	u1170
  1050  00B2                     u1171:
  1051  00B2  28C0               	goto	l1774
  1052  00B3                     u1170:
  1053  00B3                     l1768:
  1054                           
  1055                           ;main.c: 112:         {;main.c: 113:             if(estado.chaveNA == 0)
  1056  00B3  1A73               	btfsc	_estado,4
  1057  00B4  28B6               	goto	u1181
  1058  00B5  28B7               	goto	u1180
  1059  00B6                     u1181:
  1060  00B6  2A2F               	goto	l1916
  1061  00B7                     u1180:
  1062  00B7                     l1770:
  1063                           
  1064                           ;main.c: 114:             {;main.c: 115:                 if(timerchaveNA > 100)
  1065  00B7  3065               	movlw	101
  1066  00B8  022E               	subwf	_timerchaveNA,w
  1067  00B9  1C03               	skipc
  1068  00BA  28BC               	goto	u1191
  1069  00BB  28BD               	goto	u1190
  1070  00BC                     u1191:
  1071  00BC  28C4               	goto	l97
  1072  00BD                     u1190:
  1073  00BD                     l1772:
  1074                           
  1075                           ;main.c: 116:                 {;main.c: 117:                     estado.chaveNA = 1;
  1076  00BD  1673               	bsf	_estado,4
  1077                           
  1078                           ;main.c: 118:                     PORTCbits.RC1 = 1;
  1079  00BE  1487               	bsf	7,1	;volatile
  1080  00BF  2A2F               	goto	l1916
  1081  00C0                     l1774:
  1082                           
  1083                           ;main.c: 123:         {;main.c: 124:             timerchaveNA = 0;
  1084  00C0  01AE               	clrf	_timerchaveNA
  1085  00C1                     l1776:
  1086                           
  1087                           ;main.c: 125:             estado.chaveNA = 0;
  1088  00C1  1273               	bcf	_estado,4
  1089  00C2                     l1778:
  1090                           
  1091                           ;main.c: 126:             PORTCbits.RC1 = 0;
  1092  00C2  1087               	bcf	7,1	;volatile
  1093  00C3  2A2F               	goto	l1916
  1094  00C4                     l97:	
  1095                           ;main.c: 127:         }
  1096                           
  1097                           
  1098                           ;main.c: 159:         switch(estagio)
  1099  00C4  2A2F               	goto	l1916
  1100  00C5                     l1780:
  1101                           
  1102                           ;main.c: 162:             {;main.c: 163:                 if(timer < 500)
  1103  00C5  3001               	movlw	1
  1104  00C6  0271               	subwf	_timer+1,w
  1105  00C7  30F4               	movlw	244
  1106  00C8  1903               	skipnz
  1107  00C9  0270               	subwf	_timer,w
  1108  00CA  1803               	skipnc
  1109  00CB  28CD               	goto	u1201
  1110  00CC  28CE               	goto	u1200
  1111  00CD                     u1201:
  1112  00CD  28D2               	goto	l100
  1113  00CE                     u1200:
  1114  00CE                     l1782:
  1115                           
  1116                           ;main.c: 164:                 {;main.c: 165:                     PORTAbits.RA1 = 1;
  1117  00CE  1485               	bsf	5,1	;volatile
  1118                           
  1119                           ;main.c: 166:                     PORTAbits.RA3 = 1;
  1120  00CF  1585               	bsf	5,3	;volatile
  1121                           
  1122                           ;main.c: 167:                     PORTAbits.RA2 = 1;
  1123  00D0  1505               	bsf	5,2	;volatile
  1124                           
  1125                           ;main.c: 168:                 }
  1126  00D1  28E0               	goto	l1788
  1127  00D2                     l100:	
  1128                           ;main.c: 169:                 else
  1129                           
  1130                           
  1131                           ;main.c: 170:                 {;main.c: 171:                     PORTAbits.RA1 = 0;
  1132  00D2  1085               	bcf	5,1	;volatile
  1133                           
  1134                           ;main.c: 172:                     PORTAbits.RA3 = 0;
  1135  00D3  1185               	bcf	5,3	;volatile
  1136                           
  1137                           ;main.c: 173:                     PORTAbits.RA2 = 0;
  1138  00D4  1105               	bcf	5,2	;volatile
  1139  00D5                     l1784:
  1140                           
  1141                           ;main.c: 174:                     if(timer > (500*2))
  1142  00D5  3003               	movlw	3
  1143  00D6  0271               	subwf	_timer+1,w
  1144  00D7  30E9               	movlw	233
  1145  00D8  1903               	skipnz
  1146  00D9  0270               	subwf	_timer,w
  1147  00DA  1C03               	skipc
  1148  00DB  28DD               	goto	u1211
  1149  00DC  28DE               	goto	u1210
  1150  00DD                     u1211:
  1151  00DD  28E0               	goto	l1788
  1152  00DE                     u1210:
  1153  00DE                     l1786:
  1154                           
  1155                           ;main.c: 175:                         timer = 0;
  1156  00DE  01F0               	clrf	_timer
  1157  00DF  01F1               	clrf	_timer+1
  1158  00E0                     l1788:
  1159                           
  1160                           ;main.c: 178:                 PORTCbits.RC2 = 0;
  1161  00E0  1107               	bcf	7,2	;volatile
  1162  00E1                     l1790:
  1163                           
  1164                           ;main.c: 179:                 PORTCbits.RC5 = 0;
  1165  00E1  1287               	bcf	7,5	;volatile
  1166  00E2                     l1792:
  1167                           
  1168                           ;main.c: 180:                 PORTAbits.RA5 = 0;
  1169  00E2  1285               	bcf	5,5	;volatile
  1170  00E3                     l1794:
  1171                           
  1172                           ;main.c: 181:                 if((estado.botao1 == 1) && (estado.botao2 == 1))
  1173  00E3  1C73               	btfss	_estado,0
  1174  00E4  28E6               	goto	u1221
  1175  00E5  28E7               	goto	u1220
  1176  00E6                     u1221:
  1177  00E6  2848               	goto	l76
  1178  00E7                     u1220:
  1179  00E7                     l1796:
  1180  00E7  1CF3               	btfss	_estado,1
  1181  00E8  28EA               	goto	u1231
  1182  00E9  28EB               	goto	u1230
  1183  00EA                     u1231:
  1184  00EA  2848               	goto	l76
  1185  00EB                     u1230:
  1186  00EB                     l1798:
  1187                           
  1188                           ;main.c: 182:                     estagio = TESTE_BOTOES;
  1189  00EB  01AA               	clrf	_estagio
  1190  00EC  0AAA               	incf	_estagio,f
  1191  00ED  2848               	goto	l76
  1192  00EE                     l105:	
  1193                           ;main.c: 186:             case TESTE_BOTOES:
  1194                           
  1195                           
  1196                           ;main.c: 187:             {;main.c: 188:                 if((estado.botao1 == 1) && (est
      +                          ado.botao2 == 1))
  1197  00EE  1C73               	btfss	_estado,0
  1198  00EF  28F1               	goto	u1241
  1199  00F0  28F2               	goto	u1240
  1200  00F1                     u1241:
  1201  00F1  2848               	goto	l76
  1202  00F2                     u1240:
  1203  00F2                     l1800:
  1204  00F2  1CF3               	btfss	_estado,1
  1205  00F3  28F5               	goto	u1251
  1206  00F4  28F6               	goto	u1250
  1207  00F5                     u1251:
  1208  00F5  2848               	goto	l76
  1209  00F6                     u1250:
  1210  00F6                     l1802:
  1211                           
  1212                           ;main.c: 189:                 {;main.c: 190:                     if((timerbotao1 < 500) 
      +                          && (timerbotao2 < 500))
  1213  00F6  3001               	movlw	1
  1214  00F7  0226               	subwf	_timerbotao1+1,w
  1215  00F8  30F4               	movlw	244
  1216  00F9  1903               	skipnz
  1217  00FA  0225               	subwf	_timerbotao1,w
  1218  00FB  1803               	skipnc
  1219  00FC  28FE               	goto	u1261
  1220  00FD  28FF               	goto	u1260
  1221  00FE                     u1261:
  1222  00FE  2A69               	goto	l104
  1223  00FF                     u1260:
  1224  00FF                     l1804:
  1225  00FF  3001               	movlw	1
  1226  0100  0224               	subwf	_timerbotao2+1,w
  1227  0101  30F4               	movlw	244
  1228  0102  1903               	skipnz
  1229  0103  0223               	subwf	_timerbotao2,w
  1230  0104  1803               	skipnc
  1231  0105  2907               	goto	u1271
  1232  0106  2908               	goto	u1270
  1233  0107                     u1271:
  1234  0107  2A69               	goto	l104
  1235  0108                     u1270:
  1236  0108                     l1806:
  1237                           
  1238                           ;main.c: 191:                         estagio = INICIA_TESTE;
  1239  0108  3002               	movlw	2
  1240  0109  00B3               	movwf	??_main
  1241  010A  0833               	movf	??_main,w
  1242  010B  00AA               	movwf	_estagio
  1243  010C  2848               	goto	l76
  1244  010D                     l108:	
  1245                           ;main.c: 196:             case INICIA_TESTE:
  1246                           
  1247                           
  1248                           ;main.c: 197:             {;main.c: 198:                 PORTAbits.RA1 = 0;
  1249  010D  1085               	bcf	5,1	;volatile
  1250                           
  1251                           ;main.c: 199:                 PORTAbits.RA3 = 0;
  1252  010E  1185               	bcf	5,3	;volatile
  1253                           
  1254                           ;main.c: 200:                 PORTAbits.RA2 = 1;
  1255  010F  1505               	bsf	5,2	;volatile
  1256                           
  1257                           ;main.c: 201:                 PORTAbits.RA0 = 0;
  1258  0110  1005               	bcf	5,0	;volatile
  1259                           
  1260                           ;main.c: 202:                 PORTAbits.RA5 = 1;
  1261  0111  1685               	bsf	5,5	;volatile
  1262                           
  1263                           ;main.c: 203:                 estado.reteste = 0;
  1264  0112  1373               	bcf	_estado,6
  1265                           
  1266                           ;main.c: 204:                 estado.falha = 0;
  1267  0113  13F3               	bcf	_estado,7
  1268  0114                     l1808:
  1269                           
  1270                           ;main.c: 205:                 endereco = 0;
  1271  0114  01F5               	clrf	_endereco
  1272                           
  1273                           ;main.c: 206:                 timer = 0;
  1274  0115  01F0               	clrf	_timer
  1275  0116  01F1               	clrf	_timer+1
  1276  0117                     l1810:
  1277                           
  1278                           ;main.c: 207:                 estagio = TESTE_TAMPA_FECHADA;
  1279  0117  3003               	movlw	3
  1280  0118  00B3               	movwf	??_main
  1281  0119  0833               	movf	??_main,w
  1282  011A  00AA               	movwf	_estagio
  1283                           
  1284                           ;main.c: 208:             };main.c: 209:             break;
  1285  011B  2848               	goto	l76
  1286  011C                     l1812:
  1287                           
  1288                           ;main.c: 212:             {;main.c: 213:                 if(timer > 5000)
  1289  011C  3013               	movlw	19
  1290  011D  0271               	subwf	_timer+1,w
  1291  011E  3089               	movlw	137
  1292  011F  1903               	skipnz
  1293  0120  0270               	subwf	_timer,w
  1294  0121  1C03               	skipc
  1295  0122  2924               	goto	u1281
  1296  0123  2925               	goto	u1280
  1297  0124                     u1281:
  1298  0124  292A               	goto	l110
  1299  0125                     u1280:
  1300  0125                     l1814:
  1301                           
  1302                           ;main.c: 214:                     estagio = FALHA;
  1303  0125  300D               	movlw	13
  1304  0126  00B3               	movwf	??_main
  1305  0127  0833               	movf	??_main,w
  1306  0128  00AA               	movwf	_estagio
  1307  0129  2848               	goto	l76
  1308  012A                     l110:	
  1309                           ;main.c: 215:                 else
  1310                           
  1311                           
  1312                           ;main.c: 216:                 {;main.c: 217:                     if(estado.fimcurso == 1
      +                          )
  1313  012A  1D73               	btfss	_estado,2
  1314  012B  292D               	goto	u1291
  1315  012C  292E               	goto	u1290
  1316  012D                     u1291:
  1317  012D  2A69               	goto	l104
  1318  012E                     u1290:
  1319  012E                     l1816:
  1320                           
  1321                           ;main.c: 218:                         estagio = ALIMENTA_PLACA;
  1322  012E  3004               	movlw	4
  1323  012F  00B3               	movwf	??_main
  1324  0130  0833               	movf	??_main,w
  1325  0131  00AA               	movwf	_estagio
  1326  0132  2848               	goto	l76
  1327  0133                     l113:	
  1328                           ;main.c: 223:             case ALIMENTA_PLACA:
  1329                           
  1330                           
  1331                           ;main.c: 224:             {;main.c: 225:                 PORTCbits.RC5 = 1;
  1332  0133  1687               	bsf	7,5	;volatile
  1333                           
  1334                           ;main.c: 226:                 if(estado.chaveNA == 1)
  1335  0134  1E73               	btfss	_estado,4
  1336  0135  2937               	goto	u1301
  1337  0136  2938               	goto	u1300
  1338  0137                     u1301:
  1339  0137  293A               	goto	l114
  1340  0138                     u1300:
  1341  0138                     l1818:
  1342                           
  1343                           ;main.c: 228:                     PORTCbits.RC2 = 0;
  1344  0138  1107               	bcf	7,2	;volatile
  1345  0139  293B               	goto	l115
  1346  013A                     l114:	
  1347                           ;main.c: 229:                 else
  1348                           
  1349                           
  1350                           ;main.c: 231:                     PORTCbits.RC2 = 1;
  1351  013A  1507               	bsf	7,2	;volatile
  1352  013B                     l115:
  1353                           
  1354                           ;main.c: 232:                 estado.testando = 1;
  1355  013B  16F3               	bsf	_estado,5
  1356  013C                     l1820:
  1357                           
  1358                           ;main.c: 233:                 comunicacao.endereco = 0x0F;
  1359  013C  300F               	movlw	15
  1360  013D  04F4               	iorwf	_comunicacao,f
  1361  013E                     l1822:
  1362                           
  1363                           ;main.c: 234:                 if(estado.chaveNF == 1)
  1364  013E  1DF3               	btfss	_estado,3
  1365  013F  2941               	goto	u1311
  1366  0140  2942               	goto	u1310
  1367  0141                     u1311:
  1368  0141  2947               	goto	l116
  1369  0142                     u1310:
  1370  0142                     l1824:
  1371                           
  1372                           ;main.c: 235:                     comunicacao.resposta = 0x09;
  1373  0142  0874               	movf	_comunicacao,w
  1374  0143  390F               	andlw	-241
  1375  0144  3890               	iorlw	144
  1376  0145  00F4               	movwf	_comunicacao
  1377  0146  2954               	goto	l1830
  1378  0147                     l116:	
  1379                           ;main.c: 236:                 else
  1380                           
  1381                           
  1382                           ;main.c: 237:                 {;main.c: 238:                     if(estado.chaveNA == 1)
  1383  0147  1E73               	btfss	_estado,4
  1384  0148  294A               	goto	u1321
  1385  0149  294B               	goto	u1320
  1386  014A                     u1321:
  1387  014A  2950               	goto	l1828
  1388  014B                     u1320:
  1389  014B                     l1826:
  1390                           
  1391                           ;main.c: 239:                         comunicacao.resposta = 0x05;
  1392  014B  0874               	movf	_comunicacao,w
  1393  014C  390F               	andlw	-241
  1394  014D  3850               	iorlw	80
  1395  014E  00F4               	movwf	_comunicacao
  1396  014F  2954               	goto	l1830
  1397  0150                     l1828:
  1398                           
  1399                           ;main.c: 241:                         comunicacao.resposta = 0x03;
  1400  0150  0874               	movf	_comunicacao,w
  1401  0151  390F               	andlw	-241
  1402  0152  3830               	iorlw	48
  1403  0153  00F4               	movwf	_comunicacao
  1404  0154                     l1830:
  1405                           
  1406                           ;main.c: 243:                 USART_Write(comunicacao.byte);
  1407  0154  0874               	movf	_comunicacao,w
  1408  0155  120A  118A  2324  120A  118A  	fcall	_USART_Write
  1409  015A                     l1832:
  1410                           
  1411                           ;main.c: 244:                 timer = 0;
  1412  015A  01F0               	clrf	_timer
  1413  015B  01F1               	clrf	_timer+1
  1414  015C                     l1834:
  1415                           
  1416                           ;main.c: 245:                 estagio = ESTABILIZACAO;
  1417  015C  3005               	movlw	5
  1418  015D  1283               	bcf	3,5	;RP0=0, select bank0
  1419  015E  1303               	bcf	3,6	;RP1=0, select bank0
  1420  015F  00B3               	movwf	??_main
  1421  0160  0833               	movf	??_main,w
  1422  0161  00AA               	movwf	_estagio
  1423                           
  1424                           ;main.c: 246:             };main.c: 247:             break;
  1425  0162  2848               	goto	l76
  1426  0163                     l1836:
  1427                           
  1428                           ;main.c: 250:             {;main.c: 251:                 if(timer > 1000)
  1429  0163  3003               	movlw	3
  1430  0164  0271               	subwf	_timer+1,w
  1431  0165  30E9               	movlw	233
  1432  0166  1903               	skipnz
  1433  0167  0270               	subwf	_timer,w
  1434  0168  1C03               	skipc
  1435  0169  296B               	goto	u1331
  1436  016A  296C               	goto	u1330
  1437  016B                     u1331:
  1438  016B  2848               	goto	l76
  1439  016C                     u1330:
  1440  016C                     l1838:
  1441                           
  1442                           ;main.c: 252:                     estagio = TESTE_LIGA;
  1443  016C  3006               	movlw	6
  1444  016D  00B3               	movwf	??_main
  1445  016E  0833               	movf	??_main,w
  1446  016F  00AA               	movwf	_estagio
  1447  0170  2848               	goto	l76
  1448  0171                     l122:	
  1449                           ;main.c: 256:             case TESTE_LIGA:
  1450                           
  1451                           
  1452                           ;main.c: 257:             {;main.c: 258:                 if(estado.chaveNA == 1)
  1453  0171  1E73               	btfss	_estado,4
  1454  0172  2974               	goto	u1341
  1455  0173  2975               	goto	u1340
  1456  0174                     u1341:
  1457  0174  2977               	goto	l123
  1458  0175                     u1340:
  1459  0175                     l1840:
  1460                           
  1461                           ;main.c: 260:                     PORTCbits.RC2 = 1;
  1462  0175  1507               	bsf	7,2	;volatile
  1463  0176  2978               	goto	l1842
  1464  0177                     l123:	
  1465                           ;main.c: 261:                 else
  1466                           
  1467                           
  1468                           ;main.c: 263:                     PORTCbits.RC2 = 0;
  1469  0177  1107               	bcf	7,2	;volatile
  1470  0178                     l1842:
  1471                           
  1472                           ;main.c: 264:                 timer = 0;
  1473  0178  01F0               	clrf	_timer
  1474  0179  01F1               	clrf	_timer+1
  1475  017A                     l1844:
  1476                           
  1477                           ;main.c: 265:                 estagio = AGUARDA_TEMPO_LIGA;
  1478  017A  3007               	movlw	7
  1479  017B  00B3               	movwf	??_main
  1480  017C  0833               	movf	??_main,w
  1481  017D  00AA               	movwf	_estagio
  1482                           
  1483                           ;main.c: 266:             };main.c: 267:             break;
  1484  017E  2848               	goto	l76
  1485  017F                     l1846:
  1486                           
  1487                           ;main.c: 270:             {;main.c: 271:                 if(timer > 5000)
  1488  017F  3013               	movlw	19
  1489  0180  0271               	subwf	_timer+1,w
  1490  0181  3089               	movlw	137
  1491  0182  1903               	skipnz
  1492  0183  0270               	subwf	_timer,w
  1493  0184  1C03               	skipc
  1494  0185  2987               	goto	u1351
  1495  0186  2988               	goto	u1350
  1496  0187                     u1351:
  1497  0187  2848               	goto	l76
  1498  0188                     u1350:
  1499  0188                     l1848:
  1500                           
  1501                           ;main.c: 272:                     estagio = TESTE_DESLIGA;
  1502  0188  3008               	movlw	8
  1503  0189  00B3               	movwf	??_main
  1504  018A  0833               	movf	??_main,w
  1505  018B  00AA               	movwf	_estagio
  1506  018C  2848               	goto	l76
  1507  018D                     l127:	
  1508                           ;main.c: 276:             case TESTE_DESLIGA:
  1509                           
  1510                           
  1511                           ;main.c: 277:             {;main.c: 278:                 if(estado.chaveNA == 1)
  1512  018D  1E73               	btfss	_estado,4
  1513  018E  2990               	goto	u1361
  1514  018F  2991               	goto	u1360
  1515  0190                     u1361:
  1516  0190  2993               	goto	l128
  1517  0191                     u1360:
  1518  0191                     l1850:
  1519                           
  1520                           ;main.c: 280:                     PORTCbits.RC2 = 0;
  1521  0191  1107               	bcf	7,2	;volatile
  1522  0192  2994               	goto	l1852
  1523  0193                     l128:	
  1524                           ;main.c: 281:                 else
  1525                           
  1526                           
  1527                           ;main.c: 283:                     PORTCbits.RC2 = 1;
  1528  0193  1507               	bsf	7,2	;volatile
  1529  0194                     l1852:
  1530                           
  1531                           ;main.c: 284:                 timer = 0;
  1532  0194  01F0               	clrf	_timer
  1533  0195  01F1               	clrf	_timer+1
  1534  0196                     l1854:
  1535                           
  1536                           ;main.c: 285:                 estagio = AGUARDA_TEMPO_DESLIGA;
  1537  0196  3009               	movlw	9
  1538  0197  00B3               	movwf	??_main
  1539  0198  0833               	movf	??_main,w
  1540  0199  00AA               	movwf	_estagio
  1541                           
  1542                           ;main.c: 286:             };main.c: 287:             break;
  1543  019A  2848               	goto	l76
  1544  019B                     l1856:
  1545                           
  1546                           ;main.c: 290:             {;main.c: 291:                 if(timer > 6000)
  1547  019B  3017               	movlw	23
  1548  019C  0271               	subwf	_timer+1,w
  1549  019D  3071               	movlw	113
  1550  019E  1903               	skipnz
  1551  019F  0270               	subwf	_timer,w
  1552  01A0  1C03               	skipc
  1553  01A1  29A3               	goto	u1371
  1554  01A2  29A4               	goto	u1370
  1555  01A3                     u1371:
  1556  01A3  2848               	goto	l76
  1557  01A4                     u1370:
  1558  01A4                     l1858:
  1559                           
  1560                           ;main.c: 292:                 {;main.c: 293:                     if(estado.reteste == 1)
  1561  01A4  1F73               	btfss	_estado,6
  1562  01A5  29A7               	goto	u1381
  1563  01A6  29A8               	goto	u1380
  1564  01A7                     u1381:
  1565  01A7  29AD               	goto	l1862
  1566  01A8                     u1380:
  1567  01A8                     l1860:
  1568                           
  1569                           ;main.c: 294:                         estagio = VERIFICA_PLACAS;
  1570  01A8  300B               	movlw	11
  1571  01A9  00B3               	movwf	??_main
  1572  01AA  0833               	movf	??_main,w
  1573  01AB  00AA               	movwf	_estagio
  1574  01AC  2848               	goto	l76
  1575  01AD                     l1862:
  1576                           
  1577                           ;main.c: 296:                         estagio = RETESTE;
  1578  01AD  300A               	movlw	10
  1579  01AE  00B3               	movwf	??_main
  1580  01AF  0833               	movf	??_main,w
  1581  01B0  00AA               	movwf	_estagio
  1582  01B1  2848               	goto	l76
  1583  01B2                     l134:	
  1584                           ;main.c: 301:             case RETESTE:
  1585                           
  1586                           
  1587                           ;main.c: 302:             {;main.c: 303:                 estado.reteste = 1;
  1588  01B2  1773               	bsf	_estado,6
  1589  01B3  296C               	goto	l1838
  1590  01B4                     l1866:
  1591                           
  1592                           ;main.c: 309:             {;main.c: 310:                 endereco++;
  1593  01B4  3001               	movlw	1
  1594  01B5  00B3               	movwf	??_main
  1595  01B6  0833               	movf	??_main,w
  1596  01B7  07F5               	addwf	_endereco,f
  1597  01B8                     l1868:
  1598                           
  1599                           ;main.c: 311:                 if(endereco <= 10)
  1600  01B8  300B               	movlw	11
  1601  01B9  0275               	subwf	_endereco,w
  1602  01BA  1803               	skipnc
  1603  01BB  29BD               	goto	u1391
  1604  01BC  29BE               	goto	u1390
  1605  01BD                     u1391:
  1606  01BD  29D9               	goto	l136
  1607  01BE                     u1390:
  1608  01BE                     l1870:
  1609                           
  1610                           ;main.c: 312:                 {;main.c: 313:                     timer = 0;
  1611  01BE  01F0               	clrf	_timer
  1612  01BF  01F1               	clrf	_timer+1
  1613  01C0                     l1872:
  1614                           
  1615                           ;main.c: 314:                     USART_RX_Clear_Buffer();
  1616  01C0  120A  118A  2345  120A  118A  	fcall	_USART_RX_Clear_Buffer
  1617  01C5                     l1874:
  1618                           
  1619                           ;main.c: 315:                     comunicacao.endereco = endereco;
  1620  01C5  0874               	movf	_comunicacao,w
  1621  01C6  0675               	xorwf	_endereco,w
  1622  01C7  39F0               	andlw	-16
  1623  01C8  0675               	xorwf	_endereco,w
  1624  01C9  00F4               	movwf	_comunicacao
  1625  01CA                     l1876:
  1626                           
  1627                           ;main.c: 316:                     comunicacao.resposta = 0x0F;
  1628  01CA  30F0               	movlw	240
  1629  01CB  04F4               	iorwf	_comunicacao,f
  1630  01CC                     l1878:
  1631                           
  1632                           ;main.c: 317:                     USART_Write(comunicacao.byte);
  1633  01CC  0874               	movf	_comunicacao,w
  1634  01CD  120A  118A  2324  120A  118A  	fcall	_USART_Write
  1635  01D2                     l1880:
  1636                           
  1637                           ;main.c: 318:                     estagio = MENSAGEM_RETORNO;
  1638  01D2  300C               	movlw	12
  1639  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  1640  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  1641  01D5  00B3               	movwf	??_main
  1642  01D6  0833               	movf	??_main,w
  1643  01D7  00AA               	movwf	_estagio
  1644                           
  1645                           ;main.c: 319:                 }
  1646  01D8  2848               	goto	l76
  1647  01D9                     l136:	
  1648                           ;main.c: 320:                 else
  1649                           
  1650                           
  1651                           ;main.c: 321:                 {;main.c: 322:                     if(estado.falha == 1)
  1652  01D9  1FF3               	btfss	_estado,7
  1653  01DA  29DC               	goto	u1401
  1654  01DB  29DD               	goto	u1400
  1655  01DC                     u1401:
  1656  01DC  29DE               	goto	l1884
  1657  01DD                     u1400:
  1658  01DD  2925               	goto	l1814
  1659  01DE                     l1884:
  1660                           
  1661                           ;main.c: 325:                         estagio = OK;
  1662  01DE  300E               	movlw	14
  1663  01DF  00B3               	movwf	??_main
  1664  01E0  0833               	movf	??_main,w
  1665  01E1  00AA               	movwf	_estagio
  1666  01E2  2848               	goto	l76
  1667  01E3                     l1886:
  1668                           
  1669                           ;main.c: 331:             {;main.c: 332:                 if(timer > 80)
  1670  01E3  3000               	movlw	0
  1671  01E4  0271               	subwf	_timer+1,w
  1672  01E5  3051               	movlw	81
  1673  01E6  1903               	skipnz
  1674  01E7  0270               	subwf	_timer,w
  1675  01E8  1C03               	skipc
  1676  01E9  29EB               	goto	u1411
  1677  01EA  29EC               	goto	u1410
  1678  01EB                     u1411:
  1679  01EB  29EE               	goto	l1892
  1680  01EC                     u1410:
  1681  01EC                     l1888:
  1682                           
  1683                           ;main.c: 333:                 {;main.c: 334:                     estado.falha = 1;
  1684  01EC  17F3               	bsf	_estado,7
  1685  01ED  29A8               	goto	l1860
  1686  01EE                     l1892:
  1687                           
  1688                           ;main.c: 338:                 {;main.c: 339:                     if(USART_RX_Ready() == 
      +                          1)
  1689  01EE  120A  118A  2343  120A  118A  	fcall	_USART_RX_Ready
  1690  01F3  3A01               	xorlw	1
  1691  01F4  1D03               	skipz
  1692  01F5  29F7               	goto	u1421
  1693  01F6  29F8               	goto	u1420
  1694  01F7                     u1421:
  1695  01F7  2A69               	goto	l104
  1696  01F8                     u1420:
  1697  01F8                     l1894:
  1698                           
  1699                           ;main.c: 340:                     {;main.c: 341:                         comunicacao.byt
      +                          e = USART_Read();
  1700  01F8  120A  118A  2309  120A  118A  	fcall	_USART_Read
  1701  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  1702  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  1703  01FF  00B3               	movwf	??_main
  1704  0200  0833               	movf	??_main,w
  1705  0201  00F4               	movwf	_comunicacao
  1706  0202                     l1896:
  1707                           
  1708                           ;main.c: 342:                         if(comunicacao.endereco == endereco)
  1709  0202  0874               	movf	_comunicacao,w
  1710  0203  390F               	andlw	15
  1711  0204  0675               	xorwf	_endereco,w
  1712  0205  1D03               	skipz
  1713  0206  2A08               	goto	u1431
  1714  0207  2A09               	goto	u1430
  1715  0208                     u1431:
  1716  0208  29EC               	goto	l1888
  1717  0209                     u1430:
  1718  0209                     l1898:
  1719                           
  1720                           ;main.c: 343:                         {;main.c: 344:                             if(comu
      +                          nicacao.resposta != 0x08)
  1721  0209  0E74               	swapf	_comunicacao,w
  1722  020A  390F               	andlw	15
  1723  020B  3A08               	xorlw	8
  1724  020C  1903               	skipnz
  1725  020D  2A0F               	goto	u1441
  1726  020E  2A10               	goto	u1440
  1727  020F                     u1441:
  1728  020F  29A8               	goto	l1860
  1729  0210                     u1440:
  1730  0210  29EC               	goto	l1888
  1731  0211                     l147:	
  1732                           ;main.c: 355:             case FALHA:
  1733                           
  1734                           
  1735                           ;main.c: 356:             {;main.c: 358:                 PORTCbits.RC2 = 0;
  1736  0211  1107               	bcf	7,2	;volatile
  1737                           
  1738                           ;main.c: 359:                 PORTAbits.RA1 = 1;
  1739  0212  1485               	bsf	5,1	;volatile
  1740                           
  1741                           ;main.c: 360:                 PORTAbits.RA0 = 1;
  1742  0213  1405               	bsf	5,0	;volatile
  1743  0214                     l1904:
  1744                           
  1745                           ;main.c: 361:                 timer = 0;
  1746  0214  01F0               	clrf	_timer
  1747  0215  01F1               	clrf	_timer+1
  1748  0216                     l1906:
  1749                           
  1750                           ;main.c: 362:                 estagio = TESTE_FINALIZADO;
  1751  0216  300F               	movlw	15
  1752  0217  00B3               	movwf	??_main
  1753  0218  0833               	movf	??_main,w
  1754  0219  00AA               	movwf	_estagio
  1755                           
  1756                           ;main.c: 363:             };main.c: 364:             break;
  1757  021A  2848               	goto	l76
  1758  021B                     l148:	
  1759                           ;main.c: 366:             case OK:
  1760                           
  1761                           
  1762                           ;main.c: 367:             {;main.c: 369:                 PORTCbits.RC2 = 0;
  1763  021B  1107               	bcf	7,2	;volatile
  1764                           
  1765                           ;main.c: 370:                 PORTAbits.RA3 = 1;
  1766  021C  1585               	bsf	5,3	;volatile
  1767  021D  2A16               	goto	l1906
  1768  021E                     l1910:
  1769                           
  1770                           ;main.c: 376:             {;main.c: 377:                 if(timer > 2000)
  1771  021E  3007               	movlw	7
  1772  021F  0271               	subwf	_timer+1,w
  1773  0220  30D1               	movlw	209
  1774  0221  1903               	skipnz
  1775  0222  0270               	subwf	_timer,w
  1776  0223  1C03               	skipc
  1777  0224  2A26               	goto	u1451
  1778  0225  2A27               	goto	u1450
  1779  0226                     u1451:
  1780  0226  2A2A               	goto	l150
  1781  0227                     u1450:
  1782  0227                     l1912:
  1783                           
  1784                           ;main.c: 378:                 {;main.c: 379:                     PORTAbits.RA0 = 0;
  1785  0227  1005               	bcf	5,0	;volatile
  1786                           
  1787                           ;main.c: 380:                     estagio = TESTE_BOTOES;
  1788  0228  01AA               	clrf	_estagio
  1789  0229  0AAA               	incf	_estagio,f
  1790  022A                     l150:	
  1791                           ;main.c: 381:                 }
  1792                           
  1793                           
  1794                           ;main.c: 382:                 PORTAbits.RA2 = 0;
  1795  022A  1105               	bcf	5,2	;volatile
  1796                           
  1797                           ;main.c: 383:                 PORTCbits.RC5 = 0;
  1798  022B  1287               	bcf	7,5	;volatile
  1799                           
  1800                           ;main.c: 384:                 PORTAbits.RA5 = 0;
  1801  022C  1285               	bcf	5,5	;volatile
  1802                           
  1803                           ;main.c: 385:                 estado.testando = 0;
  1804  022D  12F3               	bcf	_estado,5
  1805                           
  1806                           ;main.c: 386:             };main.c: 387:             break;
  1807  022E  2848               	goto	l76
  1808  022F                     l1916:
  1809  022F  082A               	movf	_estagio,w
  1810  0230  00B3               	movwf	??_main
  1811  0231  01B4               	clrf	??_main+1
  1812                           
  1813                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1814                           ; Switch size 1, requested type "simple"
  1815                           ; Number of cases is 1, Range of values is 0 to 0
  1816                           ; switch strategies available:
  1817                           ; Name         Instructions Cycles
  1818                           ; simple_byte            4     3 (average)
  1819                           ; direct_byte           11     8 (fixed)
  1820                           ; jumptable            260     6 (fixed)
  1821                           ;	Chosen strategy is simple_byte
  1822  0232  0834               	movf	??_main+1,w
  1823  0233  3A00               	xorlw	0	; case 0
  1824  0234  1903               	skipnz
  1825  0235  2A37               	goto	l1954
  1826  0236  2848               	goto	l76
  1827  0237                     l1954:
  1828                           
  1829                           ; Switch size 1, requested type "simple"
  1830                           ; Number of cases is 16, Range of values is 0 to 15
  1831                           ; switch strategies available:
  1832                           ; Name         Instructions Cycles
  1833                           ; simple_byte           49    25 (average)
  1834                           ; direct_byte           56     8 (fixed)
  1835                           ; jumptable            260     6 (fixed)
  1836                           ;	Chosen strategy is simple_byte
  1837  0237  0833               	movf	??_main,w
  1838  0238  3A00               	xorlw	0	; case 0
  1839  0239  1903               	skipnz
  1840  023A  28C5               	goto	l1780
  1841  023B  3A01               	xorlw	1	; case 1
  1842  023C  1903               	skipnz
  1843  023D  28EE               	goto	l105
  1844  023E  3A03               	xorlw	3	; case 2
  1845  023F  1903               	skipnz
  1846  0240  290D               	goto	l108
  1847  0241  3A01               	xorlw	1	; case 3
  1848  0242  1903               	skipnz
  1849  0243  291C               	goto	l1812
  1850  0244  3A07               	xorlw	7	; case 4
  1851  0245  1903               	skipnz
  1852  0246  2933               	goto	l113
  1853  0247  3A01               	xorlw	1	; case 5
  1854  0248  1903               	skipnz
  1855  0249  2963               	goto	l1836
  1856  024A  3A03               	xorlw	3	; case 6
  1857  024B  1903               	skipnz
  1858  024C  2971               	goto	l122
  1859  024D  3A01               	xorlw	1	; case 7
  1860  024E  1903               	skipnz
  1861  024F  297F               	goto	l1846
  1862  0250  3A0F               	xorlw	15	; case 8
  1863  0251  1903               	skipnz
  1864  0252  298D               	goto	l127
  1865  0253  3A01               	xorlw	1	; case 9
  1866  0254  1903               	skipnz
  1867  0255  299B               	goto	l1856
  1868  0256  3A03               	xorlw	3	; case 10
  1869  0257  1903               	skipnz
  1870  0258  29B2               	goto	l134
  1871  0259  3A01               	xorlw	1	; case 11
  1872  025A  1903               	skipnz
  1873  025B  29B4               	goto	l1866
  1874  025C  3A07               	xorlw	7	; case 12
  1875  025D  1903               	skipnz
  1876  025E  29E3               	goto	l1886
  1877  025F  3A01               	xorlw	1	; case 13
  1878  0260  1903               	skipnz
  1879  0261  2A11               	goto	l147
  1880  0262  3A03               	xorlw	3	; case 14
  1881  0263  1903               	skipnz
  1882  0264  2A1B               	goto	l148
  1883  0265  3A01               	xorlw	1	; case 15
  1884  0266  1903               	skipnz
  1885  0267  2A1E               	goto	l1910
  1886  0268  2848               	goto	l76
  1887  0269                     l104:
  1888  0269  2848               	goto	l76
  1889  026A  120A  118A  280E   	ljmp	start
  1890  026D                     __end_of_main:
  1891                           
  1892                           	psect	text1
  1893  0324                     __ptext1:	
  1894 ;; *************** function _USART_Write *****************
  1895 ;; Defined at:
  1896 ;;		line 51 in file "usart.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;  data            1    wreg     unsigned char 
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;  data            1    0[BANK0 ] unsigned char 
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		wreg
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1910 ;;      Params:         0       0       0       0       0
  1911 ;;      Locals:         0       1       0       0       0
  1912 ;;      Temps:          0       0       0       0       0
  1913 ;;      Totals:         0       1       0       0       0
  1914 ;;Total ram usage:        1 bytes
  1915 ;; Hardware stack levels used: 1
  1916 ;; Hardware stack levels required when called: 2
  1917 ;; This function calls:
  1918 ;;		Nothing
  1919 ;; This function is called by:
  1920 ;;		_main
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           
  1925                           ;psect for function _USART_Write
  1926  0324                     _USART_Write:
  1927                           
  1928                           ;incstack = 0
  1929                           ; Regs used in _USART_Write: [wreg]
  1930                           ;USART_Write@data stored from wreg
  1931  0324  1283               	bcf	3,5	;RP0=0, select bank0
  1932  0325  1303               	bcf	3,6	;RP1=0, select bank0
  1933  0326  00B1               	movwf	USART_Write@data
  1934  0327                     l1664:
  1935  0327                     l302:	
  1936                           ;usart.c: 54:     {;usart.c: 55:     }
  1937                           
  1938                           
  1939                           ;usart.c: 53:     while(PIR1bits.TXIF == 0)
  1940  0327  1E0C               	btfss	12,4	;volatile
  1941  0328  2B2A               	goto	u1031
  1942  0329  2B2B               	goto	u1030
  1943  032A                     u1031:
  1944  032A  2B27               	goto	l302
  1945  032B                     u1030:
  1946  032B                     l1666:
  1947                           
  1948                           ;usart.c: 56:     TXREG = data;
  1949  032B  0831               	movf	USART_Write@data,w
  1950  032C  0099               	movwf	25	;volatile
  1951  032D                     l305:
  1952  032D  0008               	return
  1953  032E                     __end_of_USART_Write:
  1954                           
  1955                           	psect	text2
  1956  0309                     __ptext2:	
  1957 ;; *************** function _USART_Read *****************
  1958 ;; Defined at:
  1959 ;;		line 42 in file "usart.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;		None
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;  data            1    1[BANK0 ] unsigned char 
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      unsigned char 
  1966 ;; Registers used:
  1967 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1973 ;;      Params:         0       0       0       0       0
  1974 ;;      Locals:         0       1       0       0       0
  1975 ;;      Temps:          0       1       0       0       0
  1976 ;;      Totals:         0       2       0       0       0
  1977 ;;Total ram usage:        2 bytes
  1978 ;; Hardware stack levels used: 1
  1979 ;; Hardware stack levels required when called: 2
  1980 ;; This function calls:
  1981 ;;		Nothing
  1982 ;; This function is called by:
  1983 ;;		_main
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           
  1988                           ;psect for function _USART_Read
  1989  0309                     _USART_Read:
  1990  0309                     l1668:	
  1991                           ;incstack = 0
  1992                           ; Regs used in _USART_Read: [wreg-fsr0h+status,2+status,0]
  1993                           
  1994                           
  1995                           ;usart.c: 44:     unsigned char data;;usart.c: 46:     rxCount--;
  1996  0309  3001               	movlw	1
  1997  030A  02F2               	subwf	_rxCount,f	;volatile
  1998  030B                     l1670:
  1999                           
  2000                           ;usart.c: 47:     data = rxBuffer[rxCount];
  2001  030B  0872               	movf	_rxCount,w
  2002  030C  3E20               	addlw	(low (_rxBuffer| 0))& (0+255)
  2003  030D  0084               	movwf	4
  2004  030E  1383               	bcf	3,7	;select IRP bank0
  2005  030F  0800               	movf	0,w
  2006  0310  1283               	bcf	3,5	;RP0=0, select bank0
  2007  0311  1303               	bcf	3,6	;RP1=0, select bank0
  2008  0312  00B1               	movwf	??_USART_Read
  2009  0313  0831               	movf	??_USART_Read,w
  2010  0314  00B2               	movwf	USART_Read@data
  2011  0315                     l1672:
  2012                           
  2013                           ;usart.c: 48:     return data;
  2014  0315  0832               	movf	USART_Read@data,w
  2015  0316                     l299:
  2016  0316  0008               	return
  2017  0317                     __end_of_USART_Read:
  2018                           
  2019                           	psect	text3
  2020  0343                     __ptext3:	
  2021 ;; *************** function _USART_RX_Ready *****************
  2022 ;; Defined at:
  2023 ;;		line 37 in file "usart.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;		None
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;		None
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      unsigned char 
  2030 ;; Registers used:
  2031 ;;		wreg
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2037 ;;      Params:         0       0       0       0       0
  2038 ;;      Locals:         0       0       0       0       0
  2039 ;;      Temps:          0       0       0       0       0
  2040 ;;      Totals:         0       0       0       0       0
  2041 ;;Total ram usage:        0 bytes
  2042 ;; Hardware stack levels used: 1
  2043 ;; Hardware stack levels required when called: 2
  2044 ;; This function calls:
  2045 ;;		Nothing
  2046 ;; This function is called by:
  2047 ;;		_main
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           
  2052                           ;psect for function _USART_RX_Ready
  2053  0343                     _USART_RX_Ready:
  2054  0343                     l1362:	
  2055                           ;incstack = 0
  2056                           ; Regs used in _USART_RX_Ready: [wreg]
  2057                           
  2058                           
  2059                           ;usart.c: 39:     return rxCount;
  2060  0343  0872               	movf	_rxCount,w	;volatile
  2061  0344                     l296:
  2062  0344  0008               	return
  2063  0345                     __end_of_USART_RX_Ready:
  2064                           
  2065                           	psect	text4
  2066  0345                     __ptext4:	
  2067 ;; *************** function _USART_RX_Clear_Buffer *****************
  2068 ;; Defined at:
  2069 ;;		line 59 in file "usart.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;		None
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;		None
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      void 
  2076 ;; Registers used:
  2077 ;;		status,2
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2083 ;;      Params:         0       0       0       0       0
  2084 ;;      Locals:         0       0       0       0       0
  2085 ;;      Temps:          0       0       0       0       0
  2086 ;;      Totals:         0       0       0       0       0
  2087 ;;Total ram usage:        0 bytes
  2088 ;; Hardware stack levels used: 1
  2089 ;; Hardware stack levels required when called: 2
  2090 ;; This function calls:
  2091 ;;		Nothing
  2092 ;; This function is called by:
  2093 ;;		_main
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           
  2098                           ;psect for function _USART_RX_Clear_Buffer
  2099  0345                     _USART_RX_Clear_Buffer:
  2100  0345                     l1360:	
  2101                           ;incstack = 0
  2102                           ; Regs used in _USART_RX_Clear_Buffer: [status,2]
  2103                           
  2104                           
  2105                           ;usart.c: 61:     rxCount = 0;
  2106  0345  01F2               	clrf	_rxCount	;volatile
  2107  0346                     l308:
  2108  0346  0008               	return
  2109  0347                     __end_of_USART_RX_Clear_Buffer:
  2110                           
  2111                           	psect	text5
  2112  0317                     __ptext5:	
  2113 ;; *************** function _USART_Initialize *****************
  2114 ;; Defined at:
  2115 ;;		line 9 in file "usart.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;		None
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;		None
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		wreg, status,2
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2129 ;;      Params:         0       0       0       0       0
  2130 ;;      Locals:         0       0       0       0       0
  2131 ;;      Temps:          0       0       0       0       0
  2132 ;;      Totals:         0       0       0       0       0
  2133 ;;Total ram usage:        0 bytes
  2134 ;; Hardware stack levels used: 1
  2135 ;; Hardware stack levels required when called: 2
  2136 ;; This function calls:
  2137 ;;		Nothing
  2138 ;; This function is called by:
  2139 ;;		_main
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           
  2144                           ;psect for function _USART_Initialize
  2145  0317                     _USART_Initialize:
  2146  0317                     l1350:	
  2147                           ;incstack = 0
  2148                           ; Regs used in _USART_Initialize: [wreg+status,2]
  2149                           
  2150                           
  2151                           ;usart.c: 11:     RCSTA = 0b10010000;
  2152  0317  3090               	movlw	144
  2153  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2154  0319  1303               	bcf	3,6	;RP1=0, select bank0
  2155  031A  0098               	movwf	24	;volatile
  2156                           
  2157                           ;usart.c: 12:     TXSTA = 0b00100000;
  2158  031B  3020               	movlw	32
  2159  031C  1683               	bsf	3,5	;RP0=1, select bank1
  2160  031D  1303               	bcf	3,6	;RP1=0, select bank1
  2161  031E  0098               	movwf	24	;volatile
  2162                           
  2163                           ;usart.c: 15:     SPBRG = 0x81;
  2164  031F  3081               	movlw	129
  2165  0320  0099               	movwf	25	;volatile
  2166  0321                     l1352:
  2167                           
  2168                           ;usart.c: 17:     rxCount = 0;
  2169  0321  01F2               	clrf	_rxCount	;volatile
  2170  0322                     l1354:
  2171                           
  2172                           ;usart.c: 19:     PIE1bits.RCIE = 1;
  2173  0322  168C               	bsf	12,5	;volatile
  2174  0323                     l288:
  2175  0323  0008               	return
  2176  0324                     __end_of_USART_Initialize:
  2177                           
  2178                           	psect	text6
  2179  032E                     __ptext6:	
  2180 ;; *************** function _TMR0_Initialize *****************
  2181 ;; Defined at:
  2182 ;;		line 4 in file "tmr0.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;		None
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;		None
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      void 
  2189 ;; Registers used:
  2190 ;;		wreg
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2196 ;;      Params:         0       0       0       0       0
  2197 ;;      Locals:         0       0       0       0       0
  2198 ;;      Temps:          0       0       0       0       0
  2199 ;;      Totals:         0       0       0       0       0
  2200 ;;Total ram usage:        0 bytes
  2201 ;; Hardware stack levels used: 1
  2202 ;; Hardware stack levels required when called: 2
  2203 ;; This function calls:
  2204 ;;		Nothing
  2205 ;; This function is called by:
  2206 ;;		_main
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           
  2211                           ;psect for function _TMR0_Initialize
  2212  032E                     _TMR0_Initialize:
  2213  032E                     l1346:	
  2214                           ;incstack = 0
  2215                           ; Regs used in _TMR0_Initialize: [wreg]
  2216                           
  2217                           
  2218                           ;tmr0.c: 7:     OPTION_REG = 0b00000100;
  2219  032E  3004               	movlw	4
  2220  032F  1683               	bsf	3,5	;RP0=1, select bank1
  2221  0330  1303               	bcf	3,6	;RP1=0, select bank1
  2222  0331  0081               	movwf	1	;volatile
  2223                           
  2224                           ;tmr0.c: 8:     TMR0 = 0x64;
  2225  0332  3064               	movlw	100
  2226  0333  1283               	bcf	3,5	;RP0=0, select bank0
  2227  0334  1303               	bcf	3,6	;RP1=0, select bank0
  2228  0335  0081               	movwf	1	;volatile
  2229  0336                     l1348:
  2230                           
  2231                           ;tmr0.c: 10:     INTCONbits.T0IE = 1;
  2232  0336  168B               	bsf	11,5	;volatile
  2233  0337                     l234:
  2234  0337  0008               	return
  2235  0338                     __end_of_TMR0_Initialize:
  2236                           
  2237                           	psect	text7
  2238  02F7                     __ptext7:	
  2239 ;; *************** function _PinManager_Initialize *****************
  2240 ;; Defined at:
  2241 ;;		line 3 in file "pin_manager.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;		None
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;		None
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  1    wreg      void 
  2248 ;; Registers used:
  2249 ;;		wreg, status,2
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2255 ;;      Params:         0       0       0       0       0
  2256 ;;      Locals:         0       0       0       0       0
  2257 ;;      Temps:          0       0       0       0       0
  2258 ;;      Totals:         0       0       0       0       0
  2259 ;;Total ram usage:        0 bytes
  2260 ;; Hardware stack levels used: 1
  2261 ;; Hardware stack levels required when called: 2
  2262 ;; This function calls:
  2263 ;;		Nothing
  2264 ;; This function is called by:
  2265 ;;		_main
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           
  2270                           ;psect for function _PinManager_Initialize
  2271  02F7                     _PinManager_Initialize:
  2272  02F7                     l1334:	
  2273                           ;incstack = 0
  2274                           ; Regs used in _PinManager_Initialize: [wreg+status,2]
  2275                           
  2276                           
  2277                           ;pin_manager.c: 5:     PORTA = 0b00000000;
  2278  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  2279  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  2280  02F9  0185               	clrf	5	;volatile
  2281                           
  2282                           ;pin_manager.c: 6:     PORTB = 0b00000000;
  2283  02FA  0186               	clrf	6	;volatile
  2284                           
  2285                           ;pin_manager.c: 7:     PORTC = 0b00000000;
  2286  02FB  0187               	clrf	7	;volatile
  2287  02FC                     l1336:
  2288                           
  2289                           ;pin_manager.c: 9:     TRISA = 0b11010000;
  2290  02FC  30D0               	movlw	208
  2291  02FD  1683               	bsf	3,5	;RP0=1, select bank1
  2292  02FE  1303               	bcf	3,6	;RP1=0, select bank1
  2293  02FF  0085               	movwf	5	;volatile
  2294  0300                     l1338:
  2295                           
  2296                           ;pin_manager.c: 10:     TRISB = 0b11111111;
  2297  0300  30FF               	movlw	255
  2298  0301  0086               	movwf	6	;volatile
  2299  0302                     l1340:
  2300                           
  2301                           ;pin_manager.c: 11:     TRISC = 0b10011000;
  2302  0302  3098               	movlw	152
  2303  0303  0087               	movwf	7	;volatile
  2304  0304                     l1342:
  2305                           
  2306                           ;pin_manager.c: 13:     ADCON1 = 0b00000110;
  2307  0304  3006               	movlw	6
  2308  0305  009F               	movwf	31	;volatile
  2309  0306                     l1344:
  2310                           
  2311                           ;pin_manager.c: 15:     OPTION_REG = 0b00000100;
  2312  0306  3004               	movlw	4
  2313  0307  0081               	movwf	1	;volatile
  2314  0308                     l199:
  2315  0308  0008               	return
  2316  0309                     __end_of_PinManager_Initialize:
  2317                           
  2318                           	psect	text8
  2319  0340                     __ptext8:	
  2320 ;; *************** function _Interrupt_Enable *****************
  2321 ;; Defined at:
  2322 ;;		line 15 in file "interrupt_manager.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;		None
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;		None
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  1    wreg      void 
  2329 ;; Registers used:
  2330 ;;		None
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2336 ;;      Params:         0       0       0       0       0
  2337 ;;      Locals:         0       0       0       0       0
  2338 ;;      Temps:          0       0       0       0       0
  2339 ;;      Totals:         0       0       0       0       0
  2340 ;;Total ram usage:        0 bytes
  2341 ;; Hardware stack levels used: 1
  2342 ;; Hardware stack levels required when called: 2
  2343 ;; This function calls:
  2344 ;;		Nothing
  2345 ;; This function is called by:
  2346 ;;		_main
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           
  2351                           ;psect for function _Interrupt_Enable
  2352  0340                     _Interrupt_Enable:
  2353  0340                     l1332:	
  2354                           ;incstack = 0
  2355                           ; Regs used in _Interrupt_Enable: []
  2356                           
  2357                           
  2358                           ;interrupt_manager.c: 17:     INTCONbits.GIE = 1;
  2359  0340  178B               	bsf	11,7	;volatile
  2360                           
  2361                           ;interrupt_manager.c: 18:     INTCONbits.PEIE = 1;
  2362  0341  170B               	bsf	11,6	;volatile
  2363  0342                     l20:
  2364  0342  0008               	return
  2365  0343                     __end_of_Interrupt_Enable:
  2366                           
  2367                           	psect	text9
  2368  02AF                     __ptext9:	
  2369 ;; *************** function _InterruptManager *****************
  2370 ;; Defined at:
  2371 ;;		line 6 in file "interrupt_manager.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;		None
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;		None
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  1    wreg      void 
  2378 ;; Registers used:
  2379 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2385 ;;      Params:         0       0       0       0       0
  2386 ;;      Locals:         0       0       0       0       0
  2387 ;;      Temps:          3       0       0       0       0
  2388 ;;      Totals:         3       0       0       0       0
  2389 ;;Total ram usage:        3 bytes
  2390 ;; Hardware stack levels used: 1
  2391 ;; Hardware stack levels required when called: 1
  2392 ;; This function calls:
  2393 ;;		_TMR0_ISR
  2394 ;;		_USART_RX_ISR
  2395 ;; This function is called by:
  2396 ;;		Interrupt level 1
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           
  2401                           ;psect for function _InterruptManager
  2402  02AF                     _InterruptManager:
  2403  02AF                     i1l1374:
  2404                           
  2405                           ;interrupt_manager.c: 8:     if(INTCONbits.T0IE == 1 && INTCONbits.T0IF == 1)
  2406  02AF  1E8B               	btfss	11,5	;volatile
  2407  02B0  2AB2               	goto	u57_21
  2408  02B1  2AB3               	goto	u57_20
  2409  02B2                     u57_21:
  2410  02B2  2ABC               	goto	i1l1380
  2411  02B3                     u57_20:
  2412  02B3                     i1l1376:
  2413  02B3  1D0B               	btfss	11,2	;volatile
  2414  02B4  2AB6               	goto	u58_21
  2415  02B5  2AB7               	goto	u58_20
  2416  02B6                     u58_21:
  2417  02B6  2ABC               	goto	i1l1380
  2418  02B7                     u58_20:
  2419  02B7                     i1l1378:
  2420                           
  2421                           ;interrupt_manager.c: 9:         TMR0_ISR();
  2422  02B7  120A  118A  226D  120A  118A  	fcall	_TMR0_ISR
  2423  02BC                     i1l1380:
  2424                           
  2425                           ;interrupt_manager.c: 11:     if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  2426  02BC  1683               	bsf	3,5	;RP0=1, select bank1
  2427  02BD  1303               	bcf	3,6	;RP1=0, select bank1
  2428  02BE  1E8C               	btfss	12,5	;volatile
  2429  02BF  2AC1               	goto	u59_21
  2430  02C0  2AC2               	goto	u59_20
  2431  02C1                     u59_21:
  2432  02C1  2ACD               	goto	i1l17
  2433  02C2                     u59_20:
  2434  02C2                     i1l1382:
  2435  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  2436  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  2437  02C4  1E8C               	btfss	12,5	;volatile
  2438  02C5  2AC7               	goto	u60_21
  2439  02C6  2AC8               	goto	u60_20
  2440  02C7                     u60_21:
  2441  02C7  2ACD               	goto	i1l17
  2442  02C8                     u60_20:
  2443  02C8                     i1l1384:
  2444                           
  2445                           ;interrupt_manager.c: 12:         USART_RX_ISR();
  2446  02C8  120A  118A  22D6  120A  118A  	fcall	_USART_RX_ISR
  2447  02CD                     i1l17:
  2448  02CD  0879               	movf	??_InterruptManager+2,w
  2449  02CE  008A               	movwf	10
  2450  02CF  0878               	movf	??_InterruptManager+1,w
  2451  02D0  0084               	movwf	4
  2452  02D1  0E77               	swapf	??_InterruptManager,w
  2453  02D2  0083               	movwf	3
  2454  02D3  0EFE               	swapf	btemp,f
  2455  02D4  0E7E               	swapf	btemp,w
  2456  02D5  0009               	retfie
  2457  02D6                     __end_of_InterruptManager:
  2458                           
  2459                           	psect	intentry
  2460  0004                     __pintentry:	
  2461                           ;incstack = 0
  2462                           ; Regs used in _InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2463                           
  2464  0004                     interrupt_function:
  2465  007E                     saved_w	set	btemp
  2466  0004  00FE               	movwf	btemp
  2467  0005  0E03               	swapf	3,w
  2468  0006  00F7               	movwf	??_InterruptManager
  2469  0007  0804               	movf	4,w
  2470  0008  00F8               	movwf	??_InterruptManager+1
  2471  0009  080A               	movf	10,w
  2472  000A  00F9               	movwf	??_InterruptManager+2
  2473  000B  120A  118A  2AAF   	ljmp	_InterruptManager
  2474                           
  2475                           	psect	text10
  2476  02D6                     __ptext10:	
  2477 ;; *************** function _USART_RX_ISR *****************
  2478 ;; Defined at:
  2479 ;;		line 22 in file "usart.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;		None
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;		None
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  1    wreg      void 
  2486 ;; Registers used:
  2487 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2493 ;;      Params:         0       0       0       0       0
  2494 ;;      Locals:         0       0       0       0       0
  2495 ;;      Temps:          1       0       0       0       0
  2496 ;;      Totals:         1       0       0       0       0
  2497 ;;Total ram usage:        1 bytes
  2498 ;; Hardware stack levels used: 1
  2499 ;; This function calls:
  2500 ;;		Nothing
  2501 ;; This function is called by:
  2502 ;;		_InterruptManager
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           
  2507                           ;psect for function _USART_RX_ISR
  2508  02D6                     _USART_RX_ISR:
  2509  02D6                     i1l1316:	
  2510                           ;incstack = 0
  2511                           ; Regs used in _USART_RX_ISR: [wreg-fsr0h+status,2+status,0]
  2512                           
  2513                           
  2514                           ;usart.c: 24:     rxBuffer[rxCount] = RCREG;
  2515  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2516  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  2517  02D8  081A               	movf	26,w	;volatile
  2518  02D9  00F6               	movwf	??_USART_RX_ISR
  2519  02DA  0872               	movf	_rxCount,w
  2520  02DB  3E20               	addlw	(low (_rxBuffer| 0))& (0+255)
  2521  02DC  0084               	movwf	4
  2522  02DD  0876               	movf	??_USART_RX_ISR,w
  2523  02DE  1383               	bcf	3,7	;select IRP bank0
  2524  02DF  0080               	movwf	0
  2525  02E0                     i1l1318:
  2526                           
  2527                           ;usart.c: 25:     rxCount++;
  2528  02E0  3001               	movlw	1
  2529  02E1  00F6               	movwf	??_USART_RX_ISR
  2530  02E2  0876               	movf	??_USART_RX_ISR,w
  2531  02E3  07F2               	addwf	_rxCount,f	;volatile
  2532  02E4                     i1l1320:
  2533                           
  2534                           ;usart.c: 26:     if(rxCount >= 3)
  2535  02E4  3003               	movlw	3
  2536  02E5  0272               	subwf	_rxCount,w	;volatile
  2537  02E6  1C03               	skipc
  2538  02E7  2AE9               	goto	u54_21
  2539  02E8  2AEA               	goto	u54_20
  2540  02E9                     u54_21:
  2541  02E9  2AEE               	goto	i1l1324
  2542  02EA                     u54_20:
  2543  02EA                     i1l1322:
  2544                           
  2545                           ;usart.c: 27:         rxCount = 3 - 1;
  2546  02EA  3002               	movlw	2
  2547  02EB  00F6               	movwf	??_USART_RX_ISR
  2548  02EC  0876               	movf	??_USART_RX_ISR,w
  2549  02ED  00F2               	movwf	_rxCount	;volatile
  2550  02EE                     i1l1324:
  2551                           
  2552                           ;usart.c: 28:     if(RCSTAbits.OERR == 1)
  2553  02EE  1C98               	btfss	24,1	;volatile
  2554  02EF  2AF1               	goto	u55_21
  2555  02F0  2AF2               	goto	u55_20
  2556  02F1                     u55_21:
  2557  02F1  2AF5               	goto	i1l1330
  2558  02F2                     u55_20:
  2559  02F2                     i1l1326:
  2560                           
  2561                           ;usart.c: 29:     {;usart.c: 30:         RCSTAbits.CREN = 0;
  2562  02F2  1218               	bcf	24,4	;volatile
  2563                           
  2564                           ;usart.c: 31:         RCSTAbits.CREN = 1;
  2565  02F3  1618               	bsf	24,4	;volatile
  2566  02F4                     i1l1328:
  2567                           
  2568                           ;usart.c: 32:         rxCount = 0;
  2569  02F4  01F2               	clrf	_rxCount	;volatile
  2570  02F5                     i1l1330:
  2571                           
  2572                           ;usart.c: 34:     PIR1bits.RCIF = 0;
  2573  02F5  128C               	bcf	12,5	;volatile
  2574  02F6                     i1l293:
  2575  02F6  0008               	return
  2576  02F7                     __end_of_USART_RX_ISR:
  2577                           
  2578                           	psect	text11
  2579  026D                     __ptext11:	
  2580 ;; *************** function _TMR0_ISR *****************
  2581 ;; Defined at:
  2582 ;;		line 13 in file "tmr0.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;		None
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;		None
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  1    wreg      void 
  2589 ;; Registers used:
  2590 ;;		wreg, status,2, status,0
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2596 ;;      Params:         0       0       0       0       0
  2597 ;;      Locals:         0       0       0       0       0
  2598 ;;      Temps:          1       0       0       0       0
  2599 ;;      Totals:         1       0       0       0       0
  2600 ;;Total ram usage:        1 bytes
  2601 ;; Hardware stack levels used: 1
  2602 ;; This function calls:
  2603 ;;		Nothing
  2604 ;; This function is called by:
  2605 ;;		_InterruptManager
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608                           
  2609                           
  2610                           ;psect for function _TMR0_ISR
  2611  026D                     _TMR0_ISR:
  2612  026D                     i1l1300:	
  2613                           ;incstack = 0
  2614                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0]
  2615                           
  2616                           
  2617                           ;tmr0.c: 15:     timerbotao1++;
  2618  026D  3001               	movlw	1
  2619  026E  1283               	bcf	3,5	;RP0=0, select bank0
  2620  026F  1303               	bcf	3,6	;RP1=0, select bank0
  2621  0270  07A5               	addwf	_timerbotao1,f
  2622  0271  1803               	skipnc
  2623  0272  0AA6               	incf	_timerbotao1+1,f
  2624  0273  3000               	movlw	0
  2625  0274  07A6               	addwf	_timerbotao1+1,f
  2626                           
  2627                           ;tmr0.c: 16:     if(timerbotao1 > 1000)
  2628  0275  3003               	movlw	3
  2629  0276  0226               	subwf	_timerbotao1+1,w
  2630  0277  30E9               	movlw	233
  2631  0278  1903               	skipnz
  2632  0279  0225               	subwf	_timerbotao1,w
  2633  027A  1C03               	skipc
  2634  027B  2A7D               	goto	u52_21
  2635  027C  2A7E               	goto	u52_20
  2636  027D                     u52_21:
  2637  027D  2A82               	goto	i1l237
  2638  027E                     u52_20:
  2639  027E                     i1l1302:
  2640                           
  2641                           ;tmr0.c: 17:         timerbotao1 = 1000;
  2642  027E  30E8               	movlw	232
  2643  027F  00A5               	movwf	_timerbotao1
  2644  0280  3003               	movlw	3
  2645  0281  00A6               	movwf	_timerbotao1+1
  2646  0282                     i1l237:
  2647                           
  2648                           ;tmr0.c: 18:     timerbotao2++;
  2649  0282  3001               	movlw	1
  2650  0283  07A3               	addwf	_timerbotao2,f
  2651  0284  1803               	skipnc
  2652  0285  0AA4               	incf	_timerbotao2+1,f
  2653  0286  3000               	movlw	0
  2654  0287  07A4               	addwf	_timerbotao2+1,f
  2655                           
  2656                           ;tmr0.c: 19:     if(timerbotao2 > 1000)
  2657  0288  3003               	movlw	3
  2658  0289  0224               	subwf	_timerbotao2+1,w
  2659  028A  30E9               	movlw	233
  2660  028B  1903               	skipnz
  2661  028C  0223               	subwf	_timerbotao2,w
  2662  028D  1C03               	skipc
  2663  028E  2A90               	goto	u53_21
  2664  028F  2A91               	goto	u53_20
  2665  0290                     u53_21:
  2666  0290  2A95               	goto	i1l1306
  2667  0291                     u53_20:
  2668  0291                     i1l1304:
  2669                           
  2670                           ;tmr0.c: 20:         timerbotao2 = 1000;
  2671  0291  30E8               	movlw	232
  2672  0292  00A3               	movwf	_timerbotao2
  2673  0293  3003               	movlw	3
  2674  0294  00A4               	movwf	_timerbotao2+1
  2675  0295                     i1l1306:
  2676                           
  2677                           ;tmr0.c: 21:     timerfimcurso++;
  2678  0295  3001               	movlw	1
  2679  0296  00F6               	movwf	??_TMR0_ISR
  2680  0297  0876               	movf	??_TMR0_ISR,w
  2681  0298  07B0               	addwf	_timerfimcurso,f
  2682  0299                     i1l1308:
  2683                           
  2684                           ;tmr0.c: 22:     timerchaveNF++;
  2685  0299  3001               	movlw	1
  2686  029A  00F6               	movwf	??_TMR0_ISR
  2687  029B  0876               	movf	??_TMR0_ISR,w
  2688  029C  07AF               	addwf	_timerchaveNF,f
  2689  029D                     i1l1310:
  2690                           
  2691                           ;tmr0.c: 23:     timerchaveNA++;
  2692  029D  3001               	movlw	1
  2693  029E  00F6               	movwf	??_TMR0_ISR
  2694  029F  0876               	movf	??_TMR0_ISR,w
  2695  02A0  07AE               	addwf	_timerchaveNA,f
  2696  02A1                     i1l1312:
  2697                           
  2698                           ;tmr0.c: 24:     timerpwm++;
  2699  02A1  3001               	movlw	1
  2700  02A2  00F6               	movwf	??_TMR0_ISR
  2701  02A3  0876               	movf	??_TMR0_ISR,w
  2702  02A4  07AD               	addwf	_timerpwm,f
  2703                           
  2704                           ;tmr0.c: 25:     timer++;
  2705  02A5  3001               	movlw	1
  2706  02A6  07F0               	addwf	_timer,f
  2707  02A7  1803               	skipnc
  2708  02A8  0AF1               	incf	_timer+1,f
  2709  02A9  3000               	movlw	0
  2710  02AA  07F1               	addwf	_timer+1,f
  2711                           
  2712                           ;tmr0.c: 27:     TMR0 = 0x64;
  2713  02AB  3064               	movlw	100
  2714  02AC  0081               	movwf	1	;volatile
  2715  02AD                     i1l1314:
  2716                           
  2717                           ;tmr0.c: 28:     INTCONbits.T0IF = 0;
  2718  02AD  110B               	bcf	11,2	;volatile
  2719  02AE                     i1l239:
  2720  02AE  0008               	return
  2721  02AF                     __end_of_TMR0_ISR:
  2722  007E                     btemp	set	126	;btemp
  2723  007E                     wtemp0	set	126
  2724                           
  2725                           	psect	config
  2726                           
  2727                           ;Config register CONFIG @ 0x2007
  2728                           ;	Oscillator Selection bits
  2729                           ;	FOSC = HS, HS oscillator
  2730                           ;	Watchdog Timer Enable bit
  2731                           ;	WDTE = ON, WDT enabled
  2732                           ;	Power-up Timer Enable bit
  2733                           ;	PWRTE = ON, PWRT enabled
  2734                           ;	Brown-out Reset Enable bit
  2735                           ;	BOREN = ON, BOR enabled
  2736                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2737                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  2738                           ;	Data EEPROM Memory Code Protection bit
  2739                           ;	CPD = ON, Data EEPROM code-protected
  2740                           ;	Flash Program Memory Write Enable bits
  2741                           ;	WRT = HALF, 0000h to 0FFFh write-protected; 1000h to 1FFFh may be written to by EECON 
      +                          control
  2742                           ;	In-Circuit Debugger Mode bit
  2743                           ;	DEBUG = 0x1, unprogrammed default
  2744                           ;	Flash Program Memory Code Protection bit
  2745                           ;	CP = ON, All program memory code-protected
  2746  2007                     	org	8199
  2747  2007  18F6               	dw	6390

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      10
    BANK0            80      4      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _InterruptManager in COMMON

    _InterruptManager->_TMR0_ISR
    _InterruptManager->_USART_RX_ISR

Critical Paths under _main in BANK0

    _main->_USART_Read

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      65
                                              2 BANK0      2     2      0
                   _Interrupt_Enable
              _PinManager_Initialize
                    _TMR0_Initialize
                   _USART_Initialize
              _USART_RX_Clear_Buffer
                     _USART_RX_Ready
                         _USART_Read
                        _USART_Write
 ---------------------------------------------------------------------------------
 (1) _USART_Write                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Read                                           2     2      0      34
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _USART_RX_Ready                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_RX_Clear_Buffer                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PinManager_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupt_Enable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _InterruptManager                                     3     3      0       0
                                              1 COMMON     3     3      0
                           _TMR0_ISR
                       _USART_RX_ISR
 ---------------------------------------------------------------------------------
 (3) _USART_RX_ISR                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR0_ISR                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupt_Enable
   _PinManager_Initialize
   _TMR0_Initialize
   _USART_Initialize
   _USART_RX_Clear_Buffer
   _USART_RX_Ready
   _USART_Read
   _USART_Write

 _InterruptManager (ROOT)
   _TMR0_ISR
   _USART_RX_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4      15       5       26.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1F      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Oct 14 17:19:02 2021

            ??_InterruptManager 0077              ??_Interrupt_Enable 007A                              l20 0342  
                            l76 0048                              l97 00C4                              fsr 0004  
      __end_of_USART_Initialize 0324                             l100 00D2                             l110 012A  
                           l104 0269                             l113 0133                             l105 00EE  
                           l122 0171                             l114 013A                             l123 0177  
                           l115 013B                             l116 0147                             l108 010D  
                           l302 0327                             l150 022A                             l134 01B2  
                           l127 018D                             l136 01D9                             l128 0193  
                           l305 032D                             l234 0337                             l147 0211  
                           l308 0346                             l148 021B                             l199 0308  
                           l288 0323                             l296 0344                             l299 0316  
                           _PR2 0092                             fsr0 0004                             indf 0000  
                          l1332 0340                            l1340 0302                            l1342 0304  
                          l1334 02F7                            l1350 0317                            l1344 0306  
                          l1336 02FC                            l1352 0321                            l1360 0345  
                          l1338 0300                            l1346 032E                            l1354 0322  
                          l1362 0343                            l1348 0336                            l1700 0046  
                          l1710 005C                            l1702 0047                            l1800 00F2  
                          l1720 0069                            l1712 005E                            l1704 0049  
                          l1810 0117                            l1802 00F6                            l1730 007B  
                          l1722 0072                            l1714 0060                            l1706 004F  
                          l1820 013C                            l1812 011C                            l1804 00FF  
                          l1740 0089                            l1732 007F                            l1724 0074  
                          l1708 0053                            l1716 0061                            l1670 030B  
                          l1910 021E                            l1830 0154                            l1822 013E  
                          l1814 0125                            l1806 0108                            l1750 0093  
                          l1742 008D                            l1734 0085                            l1726 0076  
                          l1718 0065                            l1672 0315                            l1664 0327  
                          l1912 0227                            l1904 0214                            l1840 0175  
                          l1832 015A                            l1824 0142                            l1816 012E  
                          l1808 0114                            l1760 00AC                            l1744 008E  
                          l1752 0099                            l1736 0087                            l1728 0077  
                          l1680 0038                            l1666 032B                            l1906 0216  
                          l1850 0191                            l1842 0178                            l1834 015C  
                          l1826 014B                            l1818 0138                            l1770 00B7  
                          l1762 00AD                            l1754 009F                            l1746 008F  
                          l1738 0088                            l1690 003F                            l1682 003B  
                          l1668 0309                            l1860 01A8                            l1852 0194  
                          l1844 017A                            l1836 0163                            l1828 0150  
                          l1780 00C5                            l1772 00BD                            l1916 022F  
                          l1764 00AE                            l1756 00A3                            l1748 0091  
                          l1692 0040                            l1684 003C                            l1676 0024  
                          l1870 01BE                            l1862 01AD                            l1854 0196  
                          l1846 017F                            l1838 016C                            l1790 00E1  
                          l1782 00CE                            l1774 00C0                            l1758 00A9  
                          l1766 00AF                            l1694 0042                            l1686 003D  
                          l1678 0033                            l1880 01D2                            l1872 01C0  
                          l1856 019B                            l1848 0188                            l1792 00E2  
                          l1784 00D5                            l1776 00C1                            l1768 00B3  
                          l1696 0044                            l1688 003E                            l1954 0237  
                          l1874 01C5                            l1866 01B4                            l1858 01A4  
                          l1794 00E3                            l1786 00DE                            l1778 00C2  
                          l1698 0045                            l1892 01EE                            l1884 01DE  
                          l1876 01CA                            l1868 01B8                            l1796 00E7  
                          l1788 00E0                            l1894 01F8                            l1886 01E3  
                          l1878 01CC                            l1798 00EB                            l1896 0202  
                          l1888 01EC                            l1898 0209                            u1100 007B  
                          u1101 007A                            u1030 032B                            u1110 007F  
                          u1031 032A                            u1111 007E                            u1200 00CE  
                          u1120 0085                            u1040 004F                            u1201 00CD  
                          u1121 0084                            u1041 004E                            u1210 00DE  
                          u1130 008D                            u1050 0053                            u1211 00DD  
                          u1131 008C                            u1051 0052                            u1300 0138  
                          u1220 00E7                            u1140 009F                            u1060 005C  
                          u1301 0137                            u1221 00E6                            u1141 009E  
                          u1061 005B                            u1310 0142                            u1230 00EB  
                          u1150 00A3                            u1070 0065                            u1311 0141  
                          u1231 00EA                            u1151 00A2                            u1071 0064  
                          u1400 01DD                            u1320 014B                            u1240 00F2  
                          u1160 00A9                            u1080 0069                            u1401 01DC  
                          u1321 014A                            u1241 00F1                            u1161 00A8  
                          u1081 0068                            u1410 01EC                            u1330 016C  
                          u1250 00F6                            u1170 00B3                            u1090 0072  
                          u1411 01EB                            u1331 016B                            u1251 00F5  
                          u1171 00B2                            u1091 0071                            u1420 01F8  
                          u1340 0175                            u1260 00FF                            u1180 00B7  
                          u1421 01F7                            u1341 0174                            u1261 00FE  
                          u1181 00B6                            u1430 0209                            u1350 0188  
                          u1270 0108                            u1190 00BD                            u1431 0208  
                          u1351 0187                            u1271 0107                            u1191 00BC  
                          u1440 0210                            u1360 0191                            u1280 0125  
                          u1441 020F                            u1361 0190                            u1281 0124  
                          u1450 0227                            u1370 01A4                            u1290 012E  
                          u1451 0226                            u1371 01A3                            u1291 012D  
                          u1380 01A8                            u1381 01A7                            u1390 01BE  
                          u1391 01BD                            i1l17 02CD                            _TMR0 0001  
                          _main 0024                 ?_USART_RX_Ready 0076                            btemp 007E  
                          start 000E  __size_of_PinManager_Initialize 0012   __end_of_PinManager_Initialize 0309  
       __end_of_TMR0_Initialize 0338                           ?_main 0076                           _T2CON 0012  
                         i1l237 0282                           i1l239 02AE                           i1l293 02F6  
                         _RCREG 001A                           _RCSTA 0018                           _SPBRG 0099  
                         _PORTA 0005                           _PORTB 0006                           _PORTC 0007  
                         u52_20 027E                           u60_20 02C8                           u52_21 027D  
                         u60_21 02C7                           u53_20 0291                           u53_21 0290  
                         u54_20 02EA                           u54_21 02E9                           u55_20 02F2  
                         u55_21 02F1                           u57_20 02B3                           u57_21 02B2  
                         _TRISA 0085                           _TRISB 0086                           _TRISC 0087  
                         u58_20 02B7                           u58_21 02B6                           u59_20 02C2  
                         u59_21 02C1                           _TXREG 0019                           _TXSTA 0098  
              __end_of_TMR0_ISR 02AF                           _timer 0070                           pclath 000A  
                         status 0003                           wtemp0 007E                     ?_USART_Read 0076  
               __initialization 0011                    __end_of_main 026D                          ??_main 0033  
                        _ADCON1 009F                          _CCPR1L 0015                          i1l1300 026D  
                        i1l1310 029D                          i1l1302 027E                          i1l1312 02A1  
                        i1l1304 0291                          i1l1320 02E4                          i1l1314 02AD  
                        i1l1306 0295                          i1l1330 02F5                          i1l1322 02EA  
                        i1l1308 0299                          i1l1324 02EE                          i1l1316 02D6  
                        i1l1326 02F2                          i1l1318 02E0                          i1l1328 02F4  
                        i1l1380 02BC                          i1l1382 02C2                          i1l1374 02AF  
                        i1l1384 02C8                          i1l1376 02B3                          i1l1378 02B7  
                        _estado 0073                ?_TMR0_Initialize 0076                          saved_w 007E  
           __size_of_USART_Read 000E         __end_of__initialization 0020                    ?_USART_Write 0076  
                __pcstackCOMMON 0076                       ?_TMR0_ISR 0076       __size_of_InterruptManager 0027  
             ?_USART_Initialize 0076       __size_of_Interrupt_Enable 0003              ??_USART_Initialize 007A  
              ??_USART_RX_Ready 007A                      __pbssBANK0 0020           _USART_RX_Clear_Buffer 0345  
                    __pmaintext 0024                      ??_TMR0_ISR 0076                      __pintentry 0004  
                       _CCP1CON 0017                    ??_USART_Read 0031           _PinManager_Initialize 02F7  
                       __ptext1 0324                         __ptext2 0309                         __ptext3 0343  
                       __ptext4 0345                         __ptext5 0317                         __ptext6 032E  
                       __ptext7 02F7                         __ptext8 0340                         __ptext9 02AF  
                USART_Read@data 0032                         _estagio 002A                         _rxCount 0072  
            __end_of_USART_Read 0317                         clrloop0 0339            end_of_initialization 0020  
        ?_USART_RX_Clear_Buffer 0076                       _RCSTAbits 0018            __size_of_USART_Write 000A  
                     _PORTAbits 0005                       _PORTBbits 0006                       _PORTCbits 0007  
              _InterruptManager 02AF                _Interrupt_Enable 0340                      _pwm_setado 002C  
                 ?_USART_RX_ISR 0076          ?_PinManager_Initialize 0076               __size_of_TMR0_ISR 0042  
           start_initialization 0011        __size_of_TMR0_Initialize 000A                  ??_USART_RX_ISR 0076  
     __size_of_USART_Initialize 000D                     __pbssCOMMON 0070                       ___latbits 0002  
                 __pcstackBANK0 0031         ??_USART_RX_Clear_Buffer 007A               ??_TMR0_Initialize 007A  
             interrupt_function 0004        __end_of_InterruptManager 02D6                       clear_ram0 0338  
                      _PIE1bits 008C        __end_of_Interrupt_Enable 0343         __size_of_USART_RX_Ready 0002  
                      _PIR1bits 000C                        _TMR0_ISR 026D            __end_of_USART_RX_ISR 02F7  
                     _pwm_atual 002B                     _comunicacao 0074                _USART_Initialize 0317  
                 ??_USART_Write 007A         ??_PinManager_Initialize 007A                        __ptext10 02D6  
                      __ptext11 026D                        _endereco 0075                   __size_of_main 0249  
                      _rxBuffer 0020                        _timerpwm 002D             __end_of_USART_Write 032E  
                    _INTCONbits 000B                   _timerfimcurso 0030                        intlevel1 0000  
             _estagio@main$F361 0029               _estagio@main$F427 0028               _estagio@main$F545 0027  
                _USART_RX_Ready 0343           __size_of_USART_RX_ISR 0021                    _timerchaveNA 002E  
                  _timerchaveNF 002F                      _OPTION_REG 0081                 _TMR0_Initialize 032E  
                   _timerbotao1 0025                     _timerbotao2 0023                    _USART_RX_ISR 02D6  
__size_of_USART_RX_Clear_Buffer 0002   __end_of_USART_RX_Clear_Buffer 0347          __end_of_USART_RX_Ready 0345  
               USART_Write@data 0031               ?_InterruptManager 0076                      _USART_Read 0309  
                   _USART_Write 0324               ?_Interrupt_Enable 0076  
