

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Jun 16 11:36:54 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F876A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28     0000                     
    29                           ; Version 2.40
    30                           ; Generated 17/11/2021 GMT
    31                           ; 
    32                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F876A Definitions
    62                           ; 
    63                           ; SFR Addresses
    64     0000                     	;# 
    65     0001                     	;# 
    66     0002                     	;# 
    67     0003                     	;# 
    68     0004                     	;# 
    69     0005                     	;# 
    70     0006                     	;# 
    71     0007                     	;# 
    72     000A                     	;# 
    73     000B                     	;# 
    74     000C                     	;# 
    75     000D                     	;# 
    76     000E                     	;# 
    77     000E                     	;# 
    78     000F                     	;# 
    79     0010                     	;# 
    80     0011                     	;# 
    81     0012                     	;# 
    82     0013                     	;# 
    83     0014                     	;# 
    84     0015                     	;# 
    85     0015                     	;# 
    86     0016                     	;# 
    87     0017                     	;# 
    88     0018                     	;# 
    89     0019                     	;# 
    90     001A                     	;# 
    91     001B                     	;# 
    92     001B                     	;# 
    93     001C                     	;# 
    94     001D                     	;# 
    95     001E                     	;# 
    96     001F                     	;# 
    97     0081                     	;# 
    98     0085                     	;# 
    99     0086                     	;# 
   100     0087                     	;# 
   101     008C                     	;# 
   102     008D                     	;# 
   103     008E                     	;# 
   104     0091                     	;# 
   105     0092                     	;# 
   106     0093                     	;# 
   107     0094                     	;# 
   108     0098                     	;# 
   109     0099                     	;# 
   110     009C                     	;# 
   111     009D                     	;# 
   112     009E                     	;# 
   113     009F                     	;# 
   114     010C                     	;# 
   115     010D                     	;# 
   116     010E                     	;# 
   117     010F                     	;# 
   118     018C                     	;# 
   119     018D                     	;# 
   120     0000                     	;# 
   121     0001                     	;# 
   122     0002                     	;# 
   123     0003                     	;# 
   124     0004                     	;# 
   125     0005                     	;# 
   126     0006                     	;# 
   127     0007                     	;# 
   128     000A                     	;# 
   129     000B                     	;# 
   130     000C                     	;# 
   131     000D                     	;# 
   132     000E                     	;# 
   133     000E                     	;# 
   134     000F                     	;# 
   135     0010                     	;# 
   136     0011                     	;# 
   137     0012                     	;# 
   138     0013                     	;# 
   139     0014                     	;# 
   140     0015                     	;# 
   141     0015                     	;# 
   142     0016                     	;# 
   143     0017                     	;# 
   144     0018                     	;# 
   145     0019                     	;# 
   146     001A                     	;# 
   147     001B                     	;# 
   148     001B                     	;# 
   149     001C                     	;# 
   150     001D                     	;# 
   151     001E                     	;# 
   152     001F                     	;# 
   153     0081                     	;# 
   154     0085                     	;# 
   155     0086                     	;# 
   156     0087                     	;# 
   157     008C                     	;# 
   158     008D                     	;# 
   159     008E                     	;# 
   160     0091                     	;# 
   161     0092                     	;# 
   162     0093                     	;# 
   163     0094                     	;# 
   164     0098                     	;# 
   165     0099                     	;# 
   166     009C                     	;# 
   167     009D                     	;# 
   168     009E                     	;# 
   169     009F                     	;# 
   170     010C                     	;# 
   171     010D                     	;# 
   172     010E                     	;# 
   173     010F                     	;# 
   174     018C                     	;# 
   175     018D                     	;# 
   176     0000                     	;# 
   177     0001                     	;# 
   178     0002                     	;# 
   179     0003                     	;# 
   180     0004                     	;# 
   181     0005                     	;# 
   182     0006                     	;# 
   183     0007                     	;# 
   184     000A                     	;# 
   185     000B                     	;# 
   186     000C                     	;# 
   187     000D                     	;# 
   188     000E                     	;# 
   189     000E                     	;# 
   190     000F                     	;# 
   191     0010                     	;# 
   192     0011                     	;# 
   193     0012                     	;# 
   194     0013                     	;# 
   195     0014                     	;# 
   196     0015                     	;# 
   197     0015                     	;# 
   198     0016                     	;# 
   199     0017                     	;# 
   200     0018                     	;# 
   201     0019                     	;# 
   202     001A                     	;# 
   203     001B                     	;# 
   204     001B                     	;# 
   205     001C                     	;# 
   206     001D                     	;# 
   207     001E                     	;# 
   208     001F                     	;# 
   209     0081                     	;# 
   210     0085                     	;# 
   211     0086                     	;# 
   212     0087                     	;# 
   213     008C                     	;# 
   214     008D                     	;# 
   215     008E                     	;# 
   216     0091                     	;# 
   217     0092                     	;# 
   218     0093                     	;# 
   219     0094                     	;# 
   220     0098                     	;# 
   221     0099                     	;# 
   222     009C                     	;# 
   223     009D                     	;# 
   224     009E                     	;# 
   225     009F                     	;# 
   226     010C                     	;# 
   227     010D                     	;# 
   228     010E                     	;# 
   229     010F                     	;# 
   230     018C                     	;# 
   231     018D                     	;# 
   232     0000                     	;# 
   233     0001                     	;# 
   234     0002                     	;# 
   235     0003                     	;# 
   236     0004                     	;# 
   237     0005                     	;# 
   238     0006                     	;# 
   239     0007                     	;# 
   240     000A                     	;# 
   241     000B                     	;# 
   242     000C                     	;# 
   243     000D                     	;# 
   244     000E                     	;# 
   245     000E                     	;# 
   246     000F                     	;# 
   247     0010                     	;# 
   248     0011                     	;# 
   249     0012                     	;# 
   250     0013                     	;# 
   251     0014                     	;# 
   252     0015                     	;# 
   253     0015                     	;# 
   254     0016                     	;# 
   255     0017                     	;# 
   256     0018                     	;# 
   257     0019                     	;# 
   258     001A                     	;# 
   259     001B                     	;# 
   260     001B                     	;# 
   261     001C                     	;# 
   262     001D                     	;# 
   263     001E                     	;# 
   264     001F                     	;# 
   265     0081                     	;# 
   266     0085                     	;# 
   267     0086                     	;# 
   268     0087                     	;# 
   269     008C                     	;# 
   270     008D                     	;# 
   271     008E                     	;# 
   272     0091                     	;# 
   273     0092                     	;# 
   274     0093                     	;# 
   275     0094                     	;# 
   276     0098                     	;# 
   277     0099                     	;# 
   278     009C                     	;# 
   279     009D                     	;# 
   280     009E                     	;# 
   281     009F                     	;# 
   282     010C                     	;# 
   283     010D                     	;# 
   284     010E                     	;# 
   285     010F                     	;# 
   286     018C                     	;# 
   287     018D                     	;# 
   288     0000                     	;# 
   289     0001                     	;# 
   290     0002                     	;# 
   291     0003                     	;# 
   292     0004                     	;# 
   293     0005                     	;# 
   294     0006                     	;# 
   295     0007                     	;# 
   296     000A                     	;# 
   297     000B                     	;# 
   298     000C                     	;# 
   299     000D                     	;# 
   300     000E                     	;# 
   301     000E                     	;# 
   302     000F                     	;# 
   303     0010                     	;# 
   304     0011                     	;# 
   305     0012                     	;# 
   306     0013                     	;# 
   307     0014                     	;# 
   308     0015                     	;# 
   309     0015                     	;# 
   310     0016                     	;# 
   311     0017                     	;# 
   312     0018                     	;# 
   313     0019                     	;# 
   314     001A                     	;# 
   315     001B                     	;# 
   316     001B                     	;# 
   317     001C                     	;# 
   318     001D                     	;# 
   319     001E                     	;# 
   320     001F                     	;# 
   321     0081                     	;# 
   322     0085                     	;# 
   323     0086                     	;# 
   324     0087                     	;# 
   325     008C                     	;# 
   326     008D                     	;# 
   327     008E                     	;# 
   328     0091                     	;# 
   329     0092                     	;# 
   330     0093                     	;# 
   331     0094                     	;# 
   332     0098                     	;# 
   333     0099                     	;# 
   334     009C                     	;# 
   335     009D                     	;# 
   336     009E                     	;# 
   337     009F                     	;# 
   338     010C                     	;# 
   339     010D                     	;# 
   340     010E                     	;# 
   341     010F                     	;# 
   342     018C                     	;# 
   343     018D                     	;# 
   344     0000                     	;# 
   345     0001                     	;# 
   346     0002                     	;# 
   347     0003                     	;# 
   348     0004                     	;# 
   349     0005                     	;# 
   350     0006                     	;# 
   351     0007                     	;# 
   352     000A                     	;# 
   353     000B                     	;# 
   354     000C                     	;# 
   355     000D                     	;# 
   356     000E                     	;# 
   357     000E                     	;# 
   358     000F                     	;# 
   359     0010                     	;# 
   360     0011                     	;# 
   361     0012                     	;# 
   362     0013                     	;# 
   363     0014                     	;# 
   364     0015                     	;# 
   365     0015                     	;# 
   366     0016                     	;# 
   367     0017                     	;# 
   368     0018                     	;# 
   369     0019                     	;# 
   370     001A                     	;# 
   371     001B                     	;# 
   372     001B                     	;# 
   373     001C                     	;# 
   374     001D                     	;# 
   375     001E                     	;# 
   376     001F                     	;# 
   377     0081                     	;# 
   378     0085                     	;# 
   379     0086                     	;# 
   380     0087                     	;# 
   381     008C                     	;# 
   382     008D                     	;# 
   383     008E                     	;# 
   384     0091                     	;# 
   385     0092                     	;# 
   386     0093                     	;# 
   387     0094                     	;# 
   388     0098                     	;# 
   389     0099                     	;# 
   390     009C                     	;# 
   391     009D                     	;# 
   392     009E                     	;# 
   393     009F                     	;# 
   394     010C                     	;# 
   395     010D                     	;# 
   396     010E                     	;# 
   397     010F                     	;# 
   398     018C                     	;# 
   399     018D                     	;# 
   400     0000                     	;# 
   401     0001                     	;# 
   402     0002                     	;# 
   403     0003                     	;# 
   404     0004                     	;# 
   405     0005                     	;# 
   406     0006                     	;# 
   407     0007                     	;# 
   408     000A                     	;# 
   409     000B                     	;# 
   410     000C                     	;# 
   411     000D                     	;# 
   412     000E                     	;# 
   413     000E                     	;# 
   414     000F                     	;# 
   415     0010                     	;# 
   416     0011                     	;# 
   417     0012                     	;# 
   418     0013                     	;# 
   419     0014                     	;# 
   420     0015                     	;# 
   421     0015                     	;# 
   422     0016                     	;# 
   423     0017                     	;# 
   424     0018                     	;# 
   425     0019                     	;# 
   426     001A                     	;# 
   427     001B                     	;# 
   428     001B                     	;# 
   429     001C                     	;# 
   430     001D                     	;# 
   431     001E                     	;# 
   432     001F                     	;# 
   433     0081                     	;# 
   434     0085                     	;# 
   435     0086                     	;# 
   436     0087                     	;# 
   437     008C                     	;# 
   438     008D                     	;# 
   439     008E                     	;# 
   440     0091                     	;# 
   441     0092                     	;# 
   442     0093                     	;# 
   443     0094                     	;# 
   444     0098                     	;# 
   445     0099                     	;# 
   446     009C                     	;# 
   447     009D                     	;# 
   448     009E                     	;# 
   449     009F                     	;# 
   450     010C                     	;# 
   451     010D                     	;# 
   452     010E                     	;# 
   453     010F                     	;# 
   454     018C                     	;# 
   455     018D                     	;# 
   456     0000                     	;# 
   457     0001                     	;# 
   458     0002                     	;# 
   459     0003                     	;# 
   460     0004                     	;# 
   461     0005                     	;# 
   462     0006                     	;# 
   463     0007                     	;# 
   464     000A                     	;# 
   465     000B                     	;# 
   466     000C                     	;# 
   467     000D                     	;# 
   468     000E                     	;# 
   469     000E                     	;# 
   470     000F                     	;# 
   471     0010                     	;# 
   472     0011                     	;# 
   473     0012                     	;# 
   474     0013                     	;# 
   475     0014                     	;# 
   476     0015                     	;# 
   477     0015                     	;# 
   478     0016                     	;# 
   479     0017                     	;# 
   480     0018                     	;# 
   481     0019                     	;# 
   482     001A                     	;# 
   483     001B                     	;# 
   484     001B                     	;# 
   485     001C                     	;# 
   486     001D                     	;# 
   487     001E                     	;# 
   488     001F                     	;# 
   489     0081                     	;# 
   490     0085                     	;# 
   491     0086                     	;# 
   492     0087                     	;# 
   493     008C                     	;# 
   494     008D                     	;# 
   495     008E                     	;# 
   496     0091                     	;# 
   497     0092                     	;# 
   498     0093                     	;# 
   499     0094                     	;# 
   500     0098                     	;# 
   501     0099                     	;# 
   502     009C                     	;# 
   503     009D                     	;# 
   504     009E                     	;# 
   505     009F                     	;# 
   506     010C                     	;# 
   507     010D                     	;# 
   508     010E                     	;# 
   509     010F                     	;# 
   510     018C                     	;# 
   511     018D                     	;# 
   512     0015                     _CCPR1L	set	21
   513     0019                     _TXREG	set	25
   514     0018                     _RCSTAbits	set	24
   515     001A                     _RCREG	set	26
   516     0018                     _RCSTA	set	24
   517     0001                     _TMR0	set	1
   518     0007                     _PORTC	set	7
   519     0006                     _PORTB	set	6
   520     0005                     _PORTA	set	5
   521     0005                     _PORTAbits	set	5
   522     0017                     _CCP1CON	set	23
   523     0007                     _PORTCbits	set	7
   524     0006                     _PORTBbits	set	6
   525     0012                     _T2CON	set	18
   526     000C                     _PIR1bits	set	12
   527     000B                     _INTCONbits	set	11
   528     0099                     _SPBRG	set	153
   529     0098                     _TXSTA	set	152
   530     0081                     _OPTION_REG	set	129
   531     009F                     _ADCON1	set	159
   532     0087                     _TRISC	set	135
   533     0086                     _TRISB	set	134
   534     0085                     _TRISA	set	133
   535     0092                     _PR2	set	146
   536     008C                     _PIE1bits	set	140
   537                           
   538                           	psect	cinit
   539     0011                     start_initialization:	
   540                           ; #config settings
   541                           
   542     0011                     __initialization:
   543                           
   544                           ; Clear objects allocated to COMMON
   545     0011  01F6               	clrf	__pbssCOMMON& (0+127)
   546     0012  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   547     0013  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   548     0014  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   549                           
   550                           ; Clear objects allocated to BANK0
   551     0015  1383               	bcf	3,7	;select IRP bank0
   552     0016  3020               	movlw	low __pbssBANK0
   553     0017  0084               	movwf	4
   554     0018  3041               	movlw	low (__pbssBANK0+33)
   555     0019  120A  118A  2732  120A  118A  	fcall	clear_ram0
   556     001E                     end_of_initialization:	
   557                           ;End of C runtime variable initialization code
   558                           
   559     001E                     __end_of__initialization:
   560     001E  0183               	clrf	3
   561     001F  120A  118A  2822   	ljmp	_main	;jump to C main() function
   562                           
   563                           	psect	bssCOMMON
   564     0076                     __pbssCOMMON:
   565     0076                     _estado:
   566     0076                     	ds	2
   567     0078                     _comunicacao:
   568     0078                     	ds	1
   569     0079                     _endereco:
   570     0079                     	ds	1
   571                           
   572                           	psect	bssBANK0
   573     0020                     __pbssBANK0:
   574     0020                     _rxBuffer:
   575     0020                     	ds	3
   576     0023                     _escravo:
   577     0023                     	ds	2
   578     0025                     _pwm_atual:
   579     0025                     	ds	2
   580     0027                     _pwm_setado:
   581     0027                     	ds	2
   582     0029                     _timerpwm:
   583     0029                     	ds	2
   584     002B                     _timer:
   585     002B                     	ds	2
   586     002D                     _timerbotao2:
   587     002D                     	ds	2
   588     002F                     _timerbotao1:
   589     002F                     	ds	2
   590     0031                     _rxCount:
   591     0031                     	ds	1
   592     0032                     _estagio@main$F707:
   593     0032                     	ds	1
   594     0033                     _estagio@main$F558:
   595     0033                     	ds	1
   596     0034                     _estagio@main$F461:
   597     0034                     	ds	1
   598     0035                     _estagio:
   599     0035                     	ds	1
   600     0036                     _addressFail:
   601     0036                     	ds	1
   602     0037                     _countFailRx:
   603     0037                     	ds	1
   604     0038                     _pecaOK:
   605     0038                     	ds	1
   606     0039                     _sincronismo:
   607     0039                     	ds	1
   608     003A                     _naodesliga:
   609     003A                     	ds	1
   610     003B                     _naoliga:
   611     003B                     	ds	1
   612     003C                     _timeoutRx:
   613     003C                     	ds	1
   614     003D                     _timerchavecopo:
   615     003D                     	ds	1
   616     003E                     _timerchaveNA:
   617     003E                     	ds	1
   618     003F                     _timerchaveNF:
   619     003F                     	ds	1
   620     0040                     _timerfimcurso:
   621     0040                     	ds	1
   622                           
   623                           	psect	clrtext
   624     0732                     clear_ram0:	
   625                           ;	Called with FSR containing the base address, and
   626                           ;	W with the last address+1
   627                           
   628     0732  0064               	clrwdt	;clear the watchdog before getting into this loop
   629     0733                     clrloop0:
   630     0733  0180               	clrf	0	;clear RAM location pointed to by FSR
   631     0734  0A84               	incf	4,f	;increment pointer
   632     0735  0604               	xorwf	4,w	;XOR with final address
   633     0736  1903               	btfsc	3,2	;have we reached the end yet?
   634     0737  3400               	retlw	0	;all done for this memory range, return
   635     0738  0604               	xorwf	4,w	;XOR again to restore value
   636     0739  2F33               	goto	clrloop0	;do the next byte
   637                           
   638                           	psect	cstackCOMMON
   639     0070                     __pcstackCOMMON:
   640     0070                     ?_TMR0_ISR:
   641     0070                     ??_TMR0_ISR:	
   642                           ; 1 bytes @ 0x0
   643                           
   644     0070                     ?_USART_RX_ISR:	
   645                           ; 1 bytes @ 0x0
   646                           
   647     0070                     ??_USART_RX_ISR:	
   648                           ; 1 bytes @ 0x0
   649                           
   650     0070                     ?_PinManager_Initialize:	
   651                           ; 1 bytes @ 0x0
   652                           
   653     0070                     ?_PWM_Initialize:	
   654                           ; 1 bytes @ 0x0
   655                           
   656     0070                     ?_TMR0_Initialize:	
   657                           ; 1 bytes @ 0x0
   658                           
   659     0070                     ?_USART_Initialize:	
   660                           ; 1 bytes @ 0x0
   661                           
   662     0070                     ?_USART_Write:	
   663                           ; 1 bytes @ 0x0
   664                           
   665     0070                     ?_USART_RX_Ready:	
   666                           ; 1 bytes @ 0x0
   667                           
   668     0070                     ?_USART_RX_Clear_Buffer:	
   669                           ; 1 bytes @ 0x0
   670                           
   671     0070                     ?_USART_Read:	
   672                           ; 1 bytes @ 0x0
   673                           
   674     0070                     ?_InterruptManager:	
   675                           ; 1 bytes @ 0x0
   676                           
   677     0070                     ?_Interrupt_Enable:	
   678                           ; 1 bytes @ 0x0
   679                           
   680     0070                     ?_main:	
   681                           ; 1 bytes @ 0x0
   682                           
   683                           
   684                           ; 1 bytes @ 0x0
   685     0070                     	ds	1
   686     0071                     ??_InterruptManager:
   687                           
   688                           ; 1 bytes @ 0x1
   689     0071                     	ds	3
   690     0074                     ??_PinManager_Initialize:
   691     0074                     ??_TMR0_Initialize:	
   692                           ; 1 bytes @ 0x4
   693                           
   694     0074                     ??_USART_Initialize:	
   695                           ; 1 bytes @ 0x4
   696                           
   697     0074                     ??_USART_Write:	
   698                           ; 1 bytes @ 0x4
   699                           
   700     0074                     ?_PWM_LoadDutyValue:	
   701                           ; 1 bytes @ 0x4
   702                           
   703     0074                     ??_USART_RX_Ready:	
   704                           ; 1 bytes @ 0x4
   705                           
   706     0074                     ??_USART_RX_Clear_Buffer:	
   707                           ; 1 bytes @ 0x4
   708                           
   709     0074                     ??_USART_Read:	
   710                           ; 1 bytes @ 0x4
   711                           
   712     0074                     ??_Interrupt_Enable:	
   713                           ; 1 bytes @ 0x4
   714                           
   715     0074                     USART_Read@data:	
   716                           ; 1 bytes @ 0x4
   717                           
   718     0074                     USART_Write@data:	
   719                           ; 1 bytes @ 0x4
   720                           
   721     0074                     PWM_LoadDutyValue@dutyValue:	
   722                           ; 1 bytes @ 0x4
   723                           
   724                           
   725                           ; 2 bytes @ 0x4
   726     0074                     	ds	2
   727     0076                     ??_PWM_Initialize:
   728                           
   729                           	psect	cstackBANK0
   730     0041                     __pcstackBANK0:	
   731                           ; 1 bytes @ 0x6
   732                           
   733     0041                     ??_PWM_LoadDutyValue:
   734                           
   735                           ; 1 bytes @ 0x0
   736     0041                     	ds	2
   737     0043                     ??_main:
   738                           
   739                           ; 1 bytes @ 0x2
   740     0043                     	ds	2
   741                           
   742                           	psect	maintext
   743     0022                     __pmaintext:	
   744 ;;
   745 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   746 ;;
   747 ;; *************** function _main *****************
   748 ;; Defined at:
   749 ;;		line 17 in file "main.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : B00/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   763 ;;      Params:         0       0       0       0       0
   764 ;;      Locals:         0       0       0       0       0
   765 ;;      Temps:          0       2       0       0       0
   766 ;;      Totals:         0       2       0       0       0
   767 ;;Total ram usage:        2 bytes
   768 ;; Hardware stack levels required when called: 4
   769 ;; This function calls:
   770 ;;		_Interrupt_Enable
   771 ;;		_PWM_Initialize
   772 ;;		_PWM_LoadDutyValue
   773 ;;		_PinManager_Initialize
   774 ;;		_TMR0_Initialize
   775 ;;		_USART_Initialize
   776 ;;		_USART_RX_Clear_Buffer
   777 ;;		_USART_RX_Ready
   778 ;;		_USART_Read
   779 ;;		_USART_Write
   780 ;; This function is called by:
   781 ;;		Startup code after reset
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785     0022                     _main:	
   786                           ;psect for function _main
   787                           
   788     0022                     l2684:	
   789                           ;incstack = 0
   790                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   791                           
   792                           
   793                           ;main.c: 19:     PinManager_Initialize();
   794     0022  120A  118A  26EF  120A  118A  	fcall	_PinManager_Initialize
   795                           
   796                           ;main.c: 20:     PWM_Initialize();
   797     0027  120A  118A  26DA  120A  118A  	fcall	_PWM_Initialize
   798                           
   799                           ;main.c: 21:     TMR0_Initialize();
   800     002C  120A  118A  2728  120A  118A  	fcall	_TMR0_Initialize
   801                           
   802                           ;main.c: 22:     USART_Initialize();
   803     0031  120A  118A  2701  120A  118A  	fcall	_USART_Initialize
   804     0036                     l2686:
   805                           
   806                           ;main.c: 23:     Interrupt_Enable();
   807     0036  120A  118A  2742  120A  118A  	fcall	_Interrupt_Enable
   808                           
   809                           ;main.c: 25:     PR2 = 0xFF;
   810     003B  30FF               	movlw	255
   811     003C  1683               	bsf	3,5	;RP0=1, select bank1
   812     003D  1303               	bcf	3,6	;RP1=0, select bank1
   813     003E  0092               	movwf	18	;volatile
   814                           
   815                           ;main.c: 26:     T2CON = 0b00000111;
   816     003F  3007               	movlw	7
   817     0040  1283               	bcf	3,5	;RP0=0, select bank0
   818     0041  1303               	bcf	3,6	;RP1=0, select bank0
   819     0042  0092               	movwf	18	;volatile
   820     0043                     l2688:
   821                           
   822                           ;main.c: 28:     estagio = INTERROMPIDO;
   823     0043  01B5               	clrf	_estagio
   824     0044                     l2690:
   825                           
   826                           ;main.c: 29:     estado.botao1 = 0;
   827     0044  1076               	bcf	_estado,0
   828     0045                     l2692:
   829                           
   830                           ;main.c: 30:     estado.botao2 = 0;
   831     0045  10F6               	bcf	_estado,1
   832     0046                     l2694:
   833                           
   834                           ;main.c: 31:     estado.fimcurso = 0;
   835     0046  1176               	bcf	_estado,2
   836     0047                     l2696:
   837                           
   838                           ;main.c: 32:     estado.chaveNF = 0;
   839     0047  11F6               	bcf	_estado,3
   840     0048                     l2698:
   841                           
   842                           ;main.c: 33:     estado.chaveNA = 0;
   843     0048  1276               	bcf	_estado,4
   844     0049                     l2700:
   845                           
   846                           ;main.c: 34:     estado.chavecopo = 0;
   847     0049  12F6               	bcf	_estado,5
   848     004A                     l2702:
   849                           
   850                           ;main.c: 35:     timerbotao1 = 0;
   851     004A  01AF               	clrf	_timerbotao1
   852     004B  01B0               	clrf	_timerbotao1+1
   853     004C                     l2704:
   854                           
   855                           ;main.c: 36:     timerbotao2 = 0;
   856     004C  01AD               	clrf	_timerbotao2
   857     004D  01AE               	clrf	_timerbotao2+1
   858     004E                     l2706:
   859                           
   860                           ;main.c: 37:     timerfimcurso = 0;
   861     004E  01C0               	clrf	_timerfimcurso
   862     004F                     l2708:
   863                           
   864                           ;main.c: 38:     timerchaveNF = 0;
   865     004F  01BF               	clrf	_timerchaveNF
   866     0050                     l2710:
   867                           
   868                           ;main.c: 39:     timerchaveNA = 0;
   869     0050  01BE               	clrf	_timerchaveNA
   870     0051                     l2712:
   871                           
   872                           ;main.c: 40:     timerchavecopo = 0;
   873     0051  01BD               	clrf	_timerchavecopo
   874     0052                     l2714:
   875                           
   876                           ;main.c: 41:     timerpwm = 0;
   877     0052  01A9               	clrf	_timerpwm
   878     0053  01AA               	clrf	_timerpwm+1
   879     0054                     l2716:
   880                           
   881                           ;main.c: 42:     pwm_setado = 0;
   882     0054  01A7               	clrf	_pwm_setado
   883     0055  01A8               	clrf	_pwm_setado+1
   884     0056                     l104:	
   885                           ;main.c: 44:     while(1)
   886                           
   887     0056  0064               	clrwdt	;# 
   888     0057                     l2718:
   889                           
   890                           ;main.c: 48:         if(PORTBbits.RB0 == 0)
   891     0057  1283               	bcf	3,5	;RP0=0, select bank0
   892     0058  1303               	bcf	3,6	;RP1=0, select bank0
   893     0059  1806               	btfsc	6,0	;volatile
   894     005A  285C               	goto	u2081
   895     005B  285D               	goto	u2080
   896     005C                     u2081:
   897     005C  286C               	goto	l2726
   898     005D                     u2080:
   899     005D                     l2720:
   900                           
   901                           ;main.c: 49:         {;main.c: 50:             if(estado.botao1 == 0)
   902     005D  1876               	btfsc	_estado,0
   903     005E  2860               	goto	u2091
   904     005F  2861               	goto	u2090
   905     0060                     u2091:
   906     0060  286F               	goto	l2730
   907     0061                     u2090:
   908     0061                     l2722:
   909                           
   910                           ;main.c: 51:             {;main.c: 52:                 if(timerbotao1 > 100)
   911     0061  3000               	movlw	0
   912     0062  0230               	subwf	_timerbotao1+1,w
   913     0063  3065               	movlw	101
   914     0064  1903               	skipnz
   915     0065  022F               	subwf	_timerbotao1,w
   916     0066  1C03               	skipc
   917     0067  2869               	goto	u2101
   918     0068  286A               	goto	u2100
   919     0069                     u2101:
   920     0069  286F               	goto	l2730
   921     006A                     u2100:
   922     006A                     l2724:
   923                           
   924                           ;main.c: 53:                     estado.botao1 = 1;
   925     006A  1476               	bsf	_estado,0
   926     006B  286F               	goto	l2730
   927     006C                     l2726:
   928                           
   929                           ;main.c: 57:         {;main.c: 58:             timerbotao1 = 0;
   930     006C  01AF               	clrf	_timerbotao1
   931     006D  01B0               	clrf	_timerbotao1+1
   932     006E                     l2728:
   933                           
   934                           ;main.c: 59:             estado.botao1 = 0;
   935     006E  1076               	bcf	_estado,0
   936     006F                     l2730:
   937                           
   938                           ;main.c: 62:         if(PORTBbits.RB1 == 0)
   939     006F  1886               	btfsc	6,1	;volatile
   940     0070  2872               	goto	u2111
   941     0071  2873               	goto	u2110
   942     0072                     u2111:
   943     0072  2882               	goto	l2738
   944     0073                     u2110:
   945     0073                     l2732:
   946                           
   947                           ;main.c: 63:         {;main.c: 64:             if(estado.botao2 == 0)
   948     0073  18F6               	btfsc	_estado,1
   949     0074  2876               	goto	u2121
   950     0075  2877               	goto	u2120
   951     0076                     u2121:
   952     0076  2885               	goto	l2742
   953     0077                     u2120:
   954     0077                     l2734:
   955                           
   956                           ;main.c: 65:             {;main.c: 66:                 if(timerbotao2 > 100)
   957     0077  3000               	movlw	0
   958     0078  022E               	subwf	_timerbotao2+1,w
   959     0079  3065               	movlw	101
   960     007A  1903               	skipnz
   961     007B  022D               	subwf	_timerbotao2,w
   962     007C  1C03               	skipc
   963     007D  287F               	goto	u2131
   964     007E  2880               	goto	u2130
   965     007F                     u2131:
   966     007F  2885               	goto	l2742
   967     0080                     u2130:
   968     0080                     l2736:
   969                           
   970                           ;main.c: 67:                     estado.botao2 = 1;
   971     0080  14F6               	bsf	_estado,1
   972     0081  2885               	goto	l2742
   973     0082                     l2738:
   974                           
   975                           ;main.c: 71:         {;main.c: 72:             timerbotao2 = 0;
   976     0082  01AD               	clrf	_timerbotao2
   977     0083  01AE               	clrf	_timerbotao2+1
   978     0084                     l2740:
   979                           
   980                           ;main.c: 73:             estado.botao2 = 0;
   981     0084  10F6               	bcf	_estado,1
   982     0085                     l2742:
   983                           
   984                           ;main.c: 76:         if(PORTBbits.RB2 == 0)
   985     0085  1906               	btfsc	6,2	;volatile
   986     0086  2888               	goto	u2141
   987     0087  2889               	goto	u2140
   988     0088                     u2141:
   989     0088  2895               	goto	l2750
   990     0089                     u2140:
   991     0089                     l2744:
   992                           
   993                           ;main.c: 77:         {;main.c: 78:             if(estado.fimcurso == 0)
   994     0089  1976               	btfsc	_estado,2
   995     008A  288C               	goto	u2151
   996     008B  288D               	goto	u2150
   997     008C                     u2151:
   998     008C  28A7               	goto	l2766
   999     008D                     u2150:
  1000     008D                     l2746:
  1001                           
  1002                           ;main.c: 79:             {;main.c: 80:                 if(timerfimcurso > 100)
  1003     008D  3065               	movlw	101
  1004     008E  0240               	subwf	_timerfimcurso,w
  1005     008F  1C03               	skipc
  1006     0090  2892               	goto	u2161
  1007     0091  2893               	goto	u2160
  1008     0092                     u2161:
  1009     0092  28A7               	goto	l2766
  1010     0093                     u2160:
  1011     0093                     l2748:
  1012                           
  1013                           ;main.c: 81:                     estado.fimcurso = 1;
  1014     0093  1576               	bsf	_estado,2
  1015     0094  28A7               	goto	l2766
  1016     0095                     l2750:
  1017                           
  1018                           ;main.c: 85:         {;main.c: 86:             timerfimcurso = 0;
  1019     0095  01C0               	clrf	_timerfimcurso
  1020     0096                     l2752:
  1021                           
  1022                           ;main.c: 87:             estado.fimcurso = 0;
  1023     0096  1176               	bcf	_estado,2
  1024     0097                     l2754:
  1025                           
  1026                           ;main.c: 88:             if(estado.testando == 1)
  1027     0097  1F76               	btfss	_estado,6
  1028     0098  289A               	goto	u2171
  1029     0099  289B               	goto	u2170
  1030     009A                     u2171:
  1031     009A  28A7               	goto	l2766
  1032     009B                     u2170:
  1033     009B                     l2756:
  1034                           
  1035                           ;main.c: 89:             {;main.c: 90:                 estagio = INTERROMPIDO;
  1036     009B  01B5               	clrf	_estagio
  1037     009C                     l2758:
  1038                           
  1039                           ;main.c: 91:                 estado.testando = 0;
  1040     009C  1376               	bcf	_estado,6
  1041     009D                     l2760:
  1042                           
  1043                           ;main.c: 92:                 comunicacao.endereco = 0x0F;
  1044     009D  300F               	movlw	15
  1045     009E  04F8               	iorwf	_comunicacao,f
  1046     009F                     l2762:
  1047                           
  1048                           ;main.c: 93:                 comunicacao.resposta = 0x00;
  1049     009F  300F               	movlw	-241
  1050     00A0  05F8               	andwf	_comunicacao,f
  1051     00A1                     l2764:
  1052                           
  1053                           ;main.c: 94:                 USART_Write(comunicacao.byte);
  1054     00A1  0878               	movf	_comunicacao,w
  1055     00A2  120A  118A  271E  120A  118A  	fcall	_USART_Write
  1056     00A7                     l2766:
  1057                           
  1058                           ;main.c: 98:         if(PORTBbits.RB3 == 0)
  1059     00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1060     00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1061     00A9  1986               	btfsc	6,3	;volatile
  1062     00AA  28AC               	goto	u2181
  1063     00AB  28AD               	goto	u2180
  1064     00AC                     u2181:
  1065     00AC  28BA               	goto	l2774
  1066     00AD                     u2180:
  1067     00AD                     l2768:
  1068                           
  1069                           ;main.c: 99:         {;main.c: 100:             if(estado.chaveNF == 0)
  1070     00AD  19F6               	btfsc	_estado,3
  1071     00AE  28B0               	goto	u2191
  1072     00AF  28B1               	goto	u2190
  1073     00B0                     u2191:
  1074     00B0  28BD               	goto	l2780
  1075     00B1                     u2190:
  1076     00B1                     l2770:
  1077                           
  1078                           ;main.c: 101:             {;main.c: 102:                 if(timerchaveNF > 100)
  1079     00B1  3065               	movlw	101
  1080     00B2  023F               	subwf	_timerchaveNF,w
  1081     00B3  1C03               	skipc
  1082     00B4  28B6               	goto	u2201
  1083     00B5  28B7               	goto	u2200
  1084     00B6                     u2201:
  1085     00B6  28BD               	goto	l2780
  1086     00B7                     u2200:
  1087     00B7                     l2772:
  1088                           
  1089                           ;main.c: 103:                 {;main.c: 104:                     estado.chaveNF = 1;
  1090     00B7  15F6               	bsf	_estado,3
  1091                           
  1092                           ;main.c: 105:                     PORTCbits.RC0 = 1;
  1093     00B8  1407               	bsf	7,0	;volatile
  1094     00B9  28BD               	goto	l2780
  1095     00BA                     l2774:
  1096                           
  1097                           ;main.c: 110:         {;main.c: 111:             timerchaveNF = 0;
  1098     00BA  01BF               	clrf	_timerchaveNF
  1099     00BB                     l2776:
  1100                           
  1101                           ;main.c: 112:             estado.chaveNF = 0;
  1102     00BB  11F6               	bcf	_estado,3
  1103     00BC                     l2778:
  1104                           
  1105                           ;main.c: 113:             PORTCbits.RC0 = 0;
  1106     00BC  1007               	bcf	7,0	;volatile
  1107     00BD                     l2780:
  1108                           
  1109                           ;main.c: 116:         if(PORTBbits.RB4 == 0)
  1110     00BD  1A06               	btfsc	6,4	;volatile
  1111     00BE  28C0               	goto	u2211
  1112     00BF  28C1               	goto	u2210
  1113     00C0                     u2211:
  1114     00C0  28CE               	goto	l2788
  1115     00C1                     u2210:
  1116     00C1                     l2782:
  1117                           
  1118                           ;main.c: 117:         {;main.c: 118:             if(estado.chaveNA == 0)
  1119     00C1  1A76               	btfsc	_estado,4
  1120     00C2  28C4               	goto	u2221
  1121     00C3  28C5               	goto	u2220
  1122     00C4                     u2221:
  1123     00C4  28D1               	goto	l2794
  1124     00C5                     u2220:
  1125     00C5                     l2784:
  1126                           
  1127                           ;main.c: 119:             {;main.c: 120:                 if(timerchaveNA > 100)
  1128     00C5  3065               	movlw	101
  1129     00C6  023E               	subwf	_timerchaveNA,w
  1130     00C7  1C03               	skipc
  1131     00C8  28CA               	goto	u2231
  1132     00C9  28CB               	goto	u2230
  1133     00CA                     u2231:
  1134     00CA  28D1               	goto	l2794
  1135     00CB                     u2230:
  1136     00CB                     l2786:
  1137                           
  1138                           ;main.c: 121:                 {;main.c: 122:                     estado.chaveNA = 1;
  1139     00CB  1676               	bsf	_estado,4
  1140                           
  1141                           ;main.c: 123:                     PORTCbits.RC1 = 1;
  1142     00CC  1487               	bsf	7,1	;volatile
  1143     00CD  28D1               	goto	l2794
  1144     00CE                     l2788:
  1145                           
  1146                           ;main.c: 128:         {;main.c: 129:             timerchaveNA = 0;
  1147     00CE  01BE               	clrf	_timerchaveNA
  1148     00CF                     l2790:
  1149                           
  1150                           ;main.c: 130:             estado.chaveNA = 0;
  1151     00CF  1276               	bcf	_estado,4
  1152     00D0                     l2792:
  1153                           
  1154                           ;main.c: 131:             PORTCbits.RC1 = 0;
  1155     00D0  1087               	bcf	7,1	;volatile
  1156     00D1                     l2794:
  1157                           
  1158                           ;main.c: 134:         if(PORTBbits.RB5 == 0)
  1159     00D1  1A86               	btfsc	6,5	;volatile
  1160     00D2  28D4               	goto	u2241
  1161     00D3  28D5               	goto	u2240
  1162     00D4                     u2241:
  1163     00D4  28E1               	goto	l2802
  1164     00D5                     u2240:
  1165     00D5                     l2796:
  1166                           
  1167                           ;main.c: 135:         {;main.c: 136:             if(estado.chavecopo == 0)
  1168     00D5  1AF6               	btfsc	_estado,5
  1169     00D6  28D8               	goto	u2251
  1170     00D7  28D9               	goto	u2250
  1171     00D8                     u2251:
  1172     00D8  28E3               	goto	l2806
  1173     00D9                     u2250:
  1174     00D9                     l2798:
  1175                           
  1176                           ;main.c: 137:             {;main.c: 138:                 if(timerchavecopo > 100)
  1177     00D9  3065               	movlw	101
  1178     00DA  023D               	subwf	_timerchavecopo,w
  1179     00DB  1C03               	skipc
  1180     00DC  28DE               	goto	u2261
  1181     00DD  28DF               	goto	u2260
  1182     00DE                     u2261:
  1183     00DE  28E3               	goto	l2806
  1184     00DF                     u2260:
  1185     00DF                     l2800:
  1186                           
  1187                           ;main.c: 139:                     estado.chavecopo = 1;
  1188     00DF  16F6               	bsf	_estado,5
  1189     00E0  28E3               	goto	l2806
  1190     00E1                     l2802:
  1191                           
  1192                           ;main.c: 143:         {;main.c: 144:             timerchavecopo = 0;
  1193     00E1  01BD               	clrf	_timerchavecopo
  1194     00E2                     l2804:
  1195                           
  1196                           ;main.c: 145:             estado.chavecopo = 0;
  1197     00E2  12F6               	bcf	_estado,5
  1198     00E3                     l2806:
  1199                           
  1200                           ;main.c: 148:         if(pwm_setado == 105)
  1201     00E3  3069               	movlw	105
  1202     00E4  0627               	xorwf	_pwm_setado,w
  1203     00E5  0428               	iorwf	_pwm_setado+1,w
  1204     00E6  1D03               	btfss	3,2
  1205     00E7  28E9               	goto	u2271
  1206     00E8  28EA               	goto	u2270
  1207     00E9                     u2271:
  1208     00E9  290A               	goto	l2820
  1209     00EA                     u2270:
  1210     00EA                     l2808:
  1211                           
  1212                           ;main.c: 149:         {;main.c: 150:             if(pwm_atual == 0)
  1213     00EA  0825               	movf	_pwm_atual,w
  1214     00EB  0426               	iorwf	_pwm_atual+1,w
  1215     00EC  1D03               	btfss	3,2
  1216     00ED  28EF               	goto	u2281
  1217     00EE  28F0               	goto	u2280
  1218     00EF                     u2281:
  1219     00EF  28F8               	goto	l2814
  1220     00F0                     u2280:
  1221     00F0                     l2810:
  1222                           
  1223                           ;main.c: 151:             {;main.c: 152:                 PORTCbits.RC2 = 1;
  1224     00F0  1507               	bsf	7,2	;volatile
  1225     00F1                     l2812:
  1226                           
  1227                           ;main.c: 153:                 pwm_atual++;
  1228     00F1  3001               	movlw	1
  1229     00F2  07A5               	addwf	_pwm_atual,f
  1230     00F3  1803               	skipnc
  1231     00F4  0AA6               	incf	_pwm_atual+1,f
  1232     00F5  3000               	movlw	0
  1233     00F6  07A6               	addwf	_pwm_atual+1,f
  1234                           
  1235                           ;main.c: 154:             }
  1236     00F7  290A               	goto	l2820
  1237     00F8                     l2814:
  1238                           
  1239                           ;main.c: 156:             {;main.c: 157:                 if(pwm_atual == 105)
  1240     00F8  3069               	movlw	105
  1241     00F9  0625               	xorwf	_pwm_atual,w
  1242     00FA  0426               	iorwf	_pwm_atual+1,w
  1243     00FB  1D03               	btfss	3,2
  1244     00FC  28FE               	goto	u2291
  1245     00FD  28FF               	goto	u2290
  1246     00FE                     u2291:
  1247     00FE  290A               	goto	l2820
  1248     00FF                     u2290:
  1249     00FF                     l2816:
  1250                           
  1251                           ;main.c: 158:                 {;main.c: 159:                     CCP1CON = 0b00001111;
  1252     00FF  300F               	movlw	15
  1253     0100  0097               	movwf	23	;volatile
  1254     0101                     l2818:
  1255                           
  1256                           ;main.c: 160:                     PWM_LoadDutyValue(105);
  1257     0101  3069               	movlw	105
  1258     0102  00F4               	movwf	PWM_LoadDutyValue@dutyValue
  1259     0103  3000               	movlw	0
  1260     0104  00F5               	movwf	PWM_LoadDutyValue@dutyValue+1
  1261     0105  120A  118A  26BF  120A  118A  	fcall	_PWM_LoadDutyValue
  1262     010A                     l2820:
  1263                           
  1264                           ;main.c: 165:         if(pwm_setado == 170)
  1265     010A  30AA               	movlw	170
  1266     010B  1283               	bcf	3,5	;RP0=0, select bank0
  1267     010C  1303               	bcf	3,6	;RP1=0, select bank0
  1268     010D  0627               	xorwf	_pwm_setado,w
  1269     010E  0428               	iorwf	_pwm_setado+1,w
  1270     010F  1D03               	btfss	3,2
  1271     0110  2912               	goto	u2301
  1272     0111  2913               	goto	u2300
  1273     0112                     u2301:
  1274     0112  2933               	goto	l2834
  1275     0113                     u2300:
  1276     0113                     l2822:
  1277                           
  1278                           ;main.c: 166:         {;main.c: 167:             if(pwm_atual == 0)
  1279     0113  0825               	movf	_pwm_atual,w
  1280     0114  0426               	iorwf	_pwm_atual+1,w
  1281     0115  1D03               	btfss	3,2
  1282     0116  2918               	goto	u2311
  1283     0117  2919               	goto	u2310
  1284     0118                     u2311:
  1285     0118  2921               	goto	l2828
  1286     0119                     u2310:
  1287     0119                     l2824:
  1288                           
  1289                           ;main.c: 168:             {;main.c: 169:                 PORTCbits.RC2 = 1;
  1290     0119  1507               	bsf	7,2	;volatile
  1291     011A                     l2826:
  1292                           
  1293                           ;main.c: 170:                 pwm_atual++;
  1294     011A  3001               	movlw	1
  1295     011B  07A5               	addwf	_pwm_atual,f
  1296     011C  1803               	skipnc
  1297     011D  0AA6               	incf	_pwm_atual+1,f
  1298     011E  3000               	movlw	0
  1299     011F  07A6               	addwf	_pwm_atual+1,f
  1300                           
  1301                           ;main.c: 171:             }
  1302     0120  2933               	goto	l2834
  1303     0121                     l2828:
  1304                           
  1305                           ;main.c: 173:             {;main.c: 174:                 if(pwm_atual == 170)
  1306     0121  30AA               	movlw	170
  1307     0122  0625               	xorwf	_pwm_atual,w
  1308     0123  0426               	iorwf	_pwm_atual+1,w
  1309     0124  1D03               	btfss	3,2
  1310     0125  2927               	goto	u2321
  1311     0126  2928               	goto	u2320
  1312     0127                     u2321:
  1313     0127  2933               	goto	l2834
  1314     0128                     u2320:
  1315     0128                     l2830:
  1316                           
  1317                           ;main.c: 175:                 {;main.c: 176:                     CCP1CON = 0b00001111;
  1318     0128  300F               	movlw	15
  1319     0129  0097               	movwf	23	;volatile
  1320     012A                     l2832:
  1321                           
  1322                           ;main.c: 177:                     PWM_LoadDutyValue(170);
  1323     012A  30AA               	movlw	170
  1324     012B  00F4               	movwf	PWM_LoadDutyValue@dutyValue
  1325     012C  3000               	movlw	0
  1326     012D  00F5               	movwf	PWM_LoadDutyValue@dutyValue+1
  1327     012E  120A  118A  26BF  120A  118A  	fcall	_PWM_LoadDutyValue
  1328     0133                     l2834:
  1329                           
  1330                           ;main.c: 182:         if(pwm_setado == 0)
  1331     0133  1283               	bcf	3,5	;RP0=0, select bank0
  1332     0134  1303               	bcf	3,6	;RP1=0, select bank0
  1333     0135  0827               	movf	_pwm_setado,w
  1334     0136  0428               	iorwf	_pwm_setado+1,w
  1335     0137  1D03               	btfss	3,2
  1336     0138  293A               	goto	u2331
  1337     0139  293B               	goto	u2330
  1338     013A                     u2331:
  1339     013A  293F               	goto	l2840
  1340     013B                     u2330:
  1341     013B                     l2836:
  1342                           
  1343                           ;main.c: 183:         {;main.c: 184:             CCP1CON = 0b00000000;
  1344     013B  0197               	clrf	23	;volatile
  1345     013C                     l2838:
  1346                           
  1347                           ;main.c: 185:             PORTCbits.RC2 = 0;
  1348     013C  1107               	bcf	7,2	;volatile
  1349                           
  1350                           ;main.c: 186:             pwm_atual = 0;
  1351     013D  01A5               	clrf	_pwm_atual
  1352     013E  01A6               	clrf	_pwm_atual+1
  1353     013F                     l2840:
  1354                           
  1355                           ;main.c: 189:         if(timerpwm > 10)
  1356     013F  3000               	movlw	0
  1357     0140  022A               	subwf	_timerpwm+1,w
  1358     0141  300B               	movlw	11
  1359     0142  1903               	skipnz
  1360     0143  0229               	subwf	_timerpwm,w
  1361     0144  1C03               	skipc
  1362     0145  2947               	goto	u2341
  1363     0146  2948               	goto	u2340
  1364     0147                     u2341:
  1365     0147  2DE0               	goto	l3248
  1366     0148                     u2340:
  1367     0148                     l2842:
  1368                           
  1369                           ;main.c: 190:         {;main.c: 191:             timerpwm = 0;
  1370     0148  01A9               	clrf	_timerpwm
  1371     0149  01AA               	clrf	_timerpwm+1
  1372     014A                     l2844:
  1373                           
  1374                           ;main.c: 192:             if(pwm_atual != pwm_setado)
  1375     014A  0828               	movf	_pwm_setado+1,w
  1376     014B  0626               	xorwf	_pwm_atual+1,w
  1377     014C  1D03               	skipz
  1378     014D  2950               	goto	u2355
  1379     014E  0827               	movf	_pwm_setado,w
  1380     014F  0625               	xorwf	_pwm_atual,w
  1381     0150                     u2355:
  1382     0150  1903               	skipnz
  1383     0151  2953               	goto	u2351
  1384     0152  2954               	goto	u2350
  1385     0153                     u2351:
  1386     0153  2DE0               	goto	l3248
  1387     0154                     u2350:
  1388     0154                     l2846:
  1389                           
  1390                           ;main.c: 193:             {;main.c: 194:                 if(pwm_atual < pwm_setado)
  1391     0154  0828               	movf	_pwm_setado+1,w
  1392     0155  0226               	subwf	_pwm_atual+1,w
  1393     0156  1D03               	skipz
  1394     0157  295A               	goto	u2365
  1395     0158  0827               	movf	_pwm_setado,w
  1396     0159  0225               	subwf	_pwm_atual,w
  1397     015A                     u2365:
  1398     015A  1803               	skipnc
  1399     015B  295D               	goto	u2361
  1400     015C  295E               	goto	u2360
  1401     015D                     u2361:
  1402     015D  2977               	goto	l2854
  1403     015E                     u2360:
  1404     015E                     l2848:
  1405                           
  1406                           ;main.c: 195:                 {;main.c: 196:                     if(pwm_atual < 1000)
  1407     015E  3003               	movlw	3
  1408     015F  0226               	subwf	_pwm_atual+1,w
  1409     0160  30E8               	movlw	232
  1410     0161  1903               	skipnz
  1411     0162  0225               	subwf	_pwm_atual,w
  1412     0163  1803               	skipnc
  1413     0164  2966               	goto	u2371
  1414     0165  2967               	goto	u2370
  1415     0166                     u2371:
  1416     0166  296D               	goto	l2852
  1417     0167                     u2370:
  1418     0167                     l2850:
  1419                           
  1420                           ;main.c: 197:                         pwm_atual++;
  1421     0167  3001               	movlw	1
  1422     0168  07A5               	addwf	_pwm_atual,f
  1423     0169  1803               	skipnc
  1424     016A  0AA6               	incf	_pwm_atual+1,f
  1425     016B  3000               	movlw	0
  1426     016C  07A6               	addwf	_pwm_atual+1,f
  1427     016D                     l2852:
  1428                           
  1429                           ;main.c: 198:                     PWM_LoadDutyValue(pwm_atual);
  1430     016D  0826               	movf	_pwm_atual+1,w
  1431     016E  00F5               	movwf	PWM_LoadDutyValue@dutyValue+1
  1432     016F  0825               	movf	_pwm_atual,w
  1433     0170  00F4               	movwf	PWM_LoadDutyValue@dutyValue
  1434     0171  120A  118A  26BF  120A  118A  	fcall	_PWM_LoadDutyValue
  1435                           
  1436                           ;main.c: 199:                 }
  1437     0176  2DE0               	goto	l3248
  1438     0177                     l2854:
  1439                           
  1440                           ;main.c: 201:                 {;main.c: 202:                     if(pwm_atual > 0)
  1441     0177  0825               	movf	_pwm_atual,w
  1442     0178  0426               	iorwf	_pwm_atual+1,w
  1443     0179  1903               	btfsc	3,2
  1444     017A  297C               	goto	u2381
  1445     017B  297D               	goto	u2380
  1446     017C                     u2381:
  1447     017C  296D               	goto	l2852
  1448     017D                     u2380:
  1449     017D                     l2856:
  1450                           
  1451                           ;main.c: 203:                         pwm_atual--;
  1452     017D  3001               	movlw	1
  1453     017E  02A5               	subwf	_pwm_atual,f
  1454     017F  3000               	movlw	0
  1455     0180  1C03               	skipc
  1456     0181  03A6               	decf	_pwm_atual+1,f
  1457     0182  02A6               	subwf	_pwm_atual+1,f
  1458     0183  296D               	goto	l2852
  1459     0184                     l2860:
  1460                           
  1461                           ;main.c: 212:             {;main.c: 213:                 if(timer < 500)
  1462     0184  3001               	movlw	1
  1463     0185  022C               	subwf	_timer+1,w
  1464     0186  30F4               	movlw	244
  1465     0187  1903               	skipnz
  1466     0188  022B               	subwf	_timer,w
  1467     0189  1803               	skipnc
  1468     018A  298C               	goto	u2391
  1469     018B  298D               	goto	u2390
  1470     018C                     u2391:
  1471     018C  2991               	goto	l147
  1472     018D                     u2390:
  1473     018D                     l2862:
  1474                           
  1475                           ;main.c: 214:                 {;main.c: 215:                     PORTAbits.RA1 = 1;
  1476     018D  1485               	bsf	5,1	;volatile
  1477                           
  1478                           ;main.c: 216:                     PORTAbits.RA3 = 1;
  1479     018E  1585               	bsf	5,3	;volatile
  1480                           
  1481                           ;main.c: 217:                     PORTAbits.RA2 = 1;
  1482     018F  1505               	bsf	5,2	;volatile
  1483                           
  1484                           ;main.c: 218:                 }
  1485     0190  299F               	goto	l148
  1486     0191                     l147:	
  1487                           ;main.c: 219:                 else
  1488                           
  1489                           
  1490                           ;main.c: 220:                 {;main.c: 221:                     PORTAbits.RA1 = 0;
  1491     0191  1085               	bcf	5,1	;volatile
  1492                           
  1493                           ;main.c: 222:                     PORTAbits.RA3 = 0;
  1494     0192  1185               	bcf	5,3	;volatile
  1495                           
  1496                           ;main.c: 223:                     PORTAbits.RA2 = 0;
  1497     0193  1105               	bcf	5,2	;volatile
  1498     0194                     l2864:
  1499                           
  1500                           ;main.c: 224:                     if(timer > (500*2))
  1501     0194  3003               	movlw	3
  1502     0195  022C               	subwf	_timer+1,w
  1503     0196  30E9               	movlw	233
  1504     0197  1903               	skipnz
  1505     0198  022B               	subwf	_timer,w
  1506     0199  1C03               	skipc
  1507     019A  299C               	goto	u2401
  1508     019B  299D               	goto	u2400
  1509     019C                     u2401:
  1510     019C  299F               	goto	l148
  1511     019D                     u2400:
  1512     019D                     l2866:
  1513                           
  1514                           ;main.c: 225:                         timer = 0;
  1515     019D  01AB               	clrf	_timer
  1516     019E  01AC               	clrf	_timer+1
  1517     019F                     l148:	
  1518                           ;main.c: 226:                 }
  1519                           
  1520                           
  1521                           ;main.c: 227:                 pwm_setado = 0;
  1522     019F  01A7               	clrf	_pwm_setado
  1523     01A0  01A8               	clrf	_pwm_setado+1
  1524     01A1                     l2868:
  1525                           
  1526                           ;main.c: 228:                 PORTCbits.RC5 = 0;
  1527     01A1  1287               	bcf	7,5	;volatile
  1528     01A2                     l2870:
  1529                           
  1530                           ;main.c: 229:                 PORTAbits.RA5 = 0;
  1531     01A2  1285               	bcf	5,5	;volatile
  1532     01A3                     l2872:
  1533                           
  1534                           ;main.c: 230:                 if((estado.botao1 == 1) && (estado.botao2 == 1))
  1535     01A3  1C76               	btfss	_estado,0
  1536     01A4  29A6               	goto	u2411
  1537     01A5  29A7               	goto	u2410
  1538     01A6                     u2411:
  1539     01A6  2856               	goto	l104
  1540     01A7                     u2410:
  1541     01A7                     l2874:
  1542     01A7  1CF6               	btfss	_estado,1
  1543     01A8  29AA               	goto	u2421
  1544     01A9  29AB               	goto	u2420
  1545     01AA                     u2421:
  1546     01AA  2856               	goto	l104
  1547     01AB                     u2420:
  1548     01AB                     l2876:
  1549                           
  1550                           ;main.c: 231:                     estagio = TESTE_BOTOES;
  1551     01AB  01B5               	clrf	_estagio
  1552     01AC  0AB5               	incf	_estagio,f
  1553     01AD  2856               	goto	l104
  1554     01AE                     l152:	
  1555                           ;main.c: 235:             case TESTE_BOTOES:
  1556                           
  1557                           
  1558                           ;main.c: 236:             {;main.c: 237:                 if((estado.botao1 == 1) && (est
      +                          ado.botao2 == 1))
  1559     01AE  1C76               	btfss	_estado,0
  1560     01AF  29B1               	goto	u2431
  1561     01B0  29B2               	goto	u2430
  1562     01B1                     u2431:
  1563     01B1  29CA               	goto	l2886
  1564     01B2                     u2430:
  1565     01B2                     l2878:
  1566     01B2  1CF6               	btfss	_estado,1
  1567     01B3  29B5               	goto	u2441
  1568     01B4  29B6               	goto	u2440
  1569     01B5                     u2441:
  1570     01B5  29CA               	goto	l2886
  1571     01B6                     u2440:
  1572     01B6                     l2880:
  1573                           
  1574                           ;main.c: 238:                 {;main.c: 239:                     if((timerbotao1 < 500) 
      +                          && (timerbotao2 < 500))
  1575     01B6  3001               	movlw	1
  1576     01B7  0230               	subwf	_timerbotao1+1,w
  1577     01B8  30F4               	movlw	244
  1578     01B9  1903               	skipnz
  1579     01BA  022F               	subwf	_timerbotao1,w
  1580     01BB  1803               	skipnc
  1581     01BC  29BE               	goto	u2451
  1582     01BD  29BF               	goto	u2450
  1583     01BE                     u2451:
  1584     01BE  29CA               	goto	l2886
  1585     01BF                     u2450:
  1586     01BF                     l2882:
  1587     01BF  3001               	movlw	1
  1588     01C0  022E               	subwf	_timerbotao2+1,w
  1589     01C1  30F4               	movlw	244
  1590     01C2  1903               	skipnz
  1591     01C3  022D               	subwf	_timerbotao2,w
  1592     01C4  1803               	skipnc
  1593     01C5  29C7               	goto	u2461
  1594     01C6  29C8               	goto	u2460
  1595     01C7                     u2461:
  1596     01C7  29CA               	goto	l2886
  1597     01C8                     u2460:
  1598     01C8                     l2884:
  1599                           
  1600                           ;main.c: 240:                         estagio = INICIA_TESTE;
  1601     01C8  3002               	movlw	2
  1602     01C9  00B5               	movwf	_estagio
  1603     01CA                     l2886:
  1604                           
  1605                           ;main.c: 242:                 if(estado.falha == 1)
  1606     01CA  1C77               	btfss	_estado+1,0
  1607     01CB  29CD               	goto	u2471
  1608     01CC  29CE               	goto	u2470
  1609     01CD                     u2471:
  1610     01CD  2856               	goto	l104
  1611     01CE                     u2470:
  1612     01CE                     l2888:
  1613                           
  1614                           ;main.c: 243:                 {;main.c: 244:                     if(addressFail > 0)
  1615     01CE  0836               	movf	_addressFail,w
  1616     01CF  1903               	btfsc	3,2
  1617     01D0  29D2               	goto	u2481
  1618     01D1  29D3               	goto	u2480
  1619     01D2                     u2481:
  1620     01D2  29ED               	goto	l156
  1621     01D3                     u2480:
  1622     01D3                     l2890:
  1623                           
  1624                           ;main.c: 245:                     {;main.c: 246:                         if(timer < 500)
  1625     01D3  3001               	movlw	1
  1626     01D4  022C               	subwf	_timer+1,w
  1627     01D5  30F4               	movlw	244
  1628     01D6  1903               	skipnz
  1629     01D7  022B               	subwf	_timer,w
  1630     01D8  1803               	skipnc
  1631     01D9  29DB               	goto	u2491
  1632     01DA  29DC               	goto	u2490
  1633     01DB                     u2491:
  1634     01DB  29DE               	goto	l157
  1635     01DC                     u2490:
  1636     01DC                     l2892:
  1637                           
  1638                           ;main.c: 247:                             PORTAbits.RA1 = 1;
  1639     01DC  1485               	bsf	5,1	;volatile
  1640     01DD  29DF               	goto	l2894
  1641     01DE                     l157:	
  1642                           ;main.c: 248:                         else
  1643                           
  1644                           
  1645                           ;main.c: 249:                             PORTAbits.RA1 = 0;
  1646     01DE  1085               	bcf	5,1	;volatile
  1647     01DF                     l2894:
  1648                           
  1649                           ;main.c: 250:                         if(timer > (500*2))
  1650     01DF  3003               	movlw	3
  1651     01E0  022C               	subwf	_timer+1,w
  1652     01E1  30E9               	movlw	233
  1653     01E2  1903               	skipnz
  1654     01E3  022B               	subwf	_timer,w
  1655     01E4  1C03               	skipc
  1656     01E5  29E7               	goto	u2501
  1657     01E6  29E8               	goto	u2500
  1658     01E7                     u2501:
  1659     01E7  2856               	goto	l104
  1660     01E8                     u2500:
  1661     01E8                     l2896:
  1662                           
  1663                           ;main.c: 251:                         {;main.c: 252:                             address
      +                          Fail--;
  1664     01E8  3001               	movlw	1
  1665     01E9  02B6               	subwf	_addressFail,f
  1666     01EA                     l2898:
  1667                           
  1668                           ;main.c: 253:                             timer = 0;
  1669     01EA  01AB               	clrf	_timer
  1670     01EB  01AC               	clrf	_timer+1
  1671     01EC  2856               	goto	l104
  1672     01ED                     l156:	
  1673                           ;main.c: 256:                     else
  1674                           
  1675                           
  1676                           ;main.c: 257:                         PORTAbits.RA1 = 1;
  1677     01ED  1485               	bsf	5,1	;volatile
  1678     01EE  2856               	goto	l104
  1679     01EF                     l161:	
  1680                           ;main.c: 262:             case INICIA_TESTE:
  1681                           
  1682                           
  1683                           ;main.c: 263:             {;main.c: 264:                 PORTAbits.RA1 = 0;
  1684     01EF  1085               	bcf	5,1	;volatile
  1685                           
  1686                           ;main.c: 265:                 PORTAbits.RA3 = 0;
  1687     01F0  1185               	bcf	5,3	;volatile
  1688                           
  1689                           ;main.c: 266:                 PORTAbits.RA2 = 1;
  1690     01F1  1505               	bsf	5,2	;volatile
  1691                           
  1692                           ;main.c: 267:                 PORTAbits.RA0 = 0;
  1693     01F2  1005               	bcf	5,0	;volatile
  1694                           
  1695                           ;main.c: 268:                 PORTAbits.RA5 = 1;
  1696     01F3  1685               	bsf	5,5	;volatile
  1697                           
  1698                           ;main.c: 269:                 estado.reteste = 0;
  1699     01F4  13F6               	bcf	_estado,7
  1700                           
  1701                           ;main.c: 270:                 estado.falha = 0;
  1702     01F5  1077               	bcf	_estado+1,0
  1703     01F6                     l2900:
  1704                           
  1705                           ;main.c: 271:                 endereco = 0;
  1706     01F6  01F9               	clrf	_endereco
  1707                           
  1708                           ;main.c: 272:                 escravo.byte = 0;
  1709     01F7  01A3               	clrf	_escravo
  1710     01F8  01A4               	clrf	_escravo+1
  1711                           
  1712                           ;main.c: 273:                 timer = 0;
  1713     01F9  01AB               	clrf	_timer
  1714     01FA  01AC               	clrf	_timer+1
  1715                           
  1716                           ;main.c: 274:                 naoliga = 0;
  1717     01FB  01BB               	clrf	_naoliga
  1718                           
  1719                           ;main.c: 275:                 naodesliga = 0;
  1720     01FC  01BA               	clrf	_naodesliga
  1721                           
  1722                           ;main.c: 276:                 sincronismo = 0;
  1723     01FD  01B9               	clrf	_sincronismo
  1724                           
  1725                           ;main.c: 277:                 pecaOK = 0;
  1726     01FE  01B8               	clrf	_pecaOK
  1727                           
  1728                           ;main.c: 278:                 addressFail = 0;
  1729     01FF  01B6               	clrf	_addressFail
  1730     0200                     l2902:
  1731                           
  1732                           ;main.c: 279:                 estagio = TESTE_TAMPA_FECHADA;
  1733     0200  3003               	movlw	3
  1734     0201  00B5               	movwf	_estagio
  1735                           
  1736                           ;main.c: 280:             };main.c: 281:             break;
  1737     0202  2856               	goto	l104
  1738     0203                     l2904:
  1739                           
  1740                           ;main.c: 284:             {;main.c: 285:                 if(timer > 5000)
  1741     0203  3013               	movlw	19
  1742     0204  022C               	subwf	_timer+1,w
  1743     0205  3089               	movlw	137
  1744     0206  1903               	skipnz
  1745     0207  022B               	subwf	_timer,w
  1746     0208  1C03               	skipc
  1747     0209  2A0B               	goto	u2511
  1748     020A  2A0C               	goto	u2510
  1749     020B                     u2511:
  1750     020B  2A0F               	goto	l163
  1751     020C                     u2510:
  1752     020C                     l2906:
  1753                           
  1754                           ;main.c: 286:                     estagio = FALHA_FIM_CURSO;
  1755     020C  3011               	movlw	17
  1756     020D  00B5               	movwf	_estagio
  1757     020E  2856               	goto	l104
  1758     020F                     l163:	
  1759                           ;main.c: 287:                 else
  1760                           
  1761                           
  1762                           ;main.c: 288:                 {;main.c: 289:                     if(estado.fimcurso == 1
      +                          )
  1763     020F  1D76               	btfss	_estado,2
  1764     0210  2A12               	goto	u2521
  1765     0211  2A13               	goto	u2520
  1766     0212                     u2521:
  1767     0212  2E2B               	goto	l151
  1768     0213                     u2520:
  1769     0213                     l2908:
  1770                           
  1771                           ;main.c: 290:                     {;main.c: 291:                         timer = 0;
  1772     0213  01AB               	clrf	_timer
  1773     0214  01AC               	clrf	_timer+1
  1774     0215                     l2910:
  1775                           
  1776                           ;main.c: 292:                         estagio = ALIMENTA_PLACA;
  1777     0215  3004               	movlw	4
  1778     0216  00B5               	movwf	_estagio
  1779     0217  2856               	goto	l104
  1780     0218                     l166:	
  1781                           ;main.c: 298:             case ALIMENTA_PLACA:
  1782                           
  1783                           
  1784                           ;main.c: 299:             {;main.c: 300:                 estado.testando = 1;
  1785     0218  1776               	bsf	_estado,6
  1786                           
  1787                           ;main.c: 301:                 if(estado.chaveNA == 1)
  1788     0219  1E76               	btfss	_estado,4
  1789     021A  2A1C               	goto	u2531
  1790     021B  2A1D               	goto	u2530
  1791     021C                     u2531:
  1792     021C  2A20               	goto	l167
  1793     021D                     u2530:
  1794     021D                     l2912:
  1795                           
  1796                           ;main.c: 302:                     pwm_setado = 0;
  1797     021D  01A7               	clrf	_pwm_setado
  1798     021E  01A8               	clrf	_pwm_setado+1
  1799     021F  2A2D               	goto	l168
  1800     0220                     l167:	
  1801                           ;main.c: 303:                 else
  1802                           
  1803                           
  1804                           ;main.c: 304:                 {;main.c: 305:                     if(estado.chavecopo == 
      +                          1)
  1805     0220  1EF6               	btfss	_estado,5
  1806     0221  2A23               	goto	u2541
  1807     0222  2A24               	goto	u2540
  1808     0223                     u2541:
  1809     0223  2A29               	goto	l2916
  1810     0224                     u2540:
  1811     0224                     l2914:
  1812                           
  1813                           ;main.c: 306:                         pwm_setado = 170;
  1814     0224  30AA               	movlw	170
  1815     0225  00A7               	movwf	_pwm_setado
  1816     0226  3000               	movlw	0
  1817     0227  00A8               	movwf	_pwm_setado+1
  1818     0228  2A2D               	goto	l168
  1819     0229                     l2916:
  1820                           
  1821                           ;main.c: 308:                         pwm_setado = 105;
  1822     0229  3069               	movlw	105
  1823     022A  00A7               	movwf	_pwm_setado
  1824     022B  3000               	movlw	0
  1825     022C  00A8               	movwf	_pwm_setado+1
  1826     022D                     l168:	
  1827                           ;main.c: 309:                 }
  1828                           
  1829                           
  1830                           ;main.c: 310:                 if(timer > 2000)
  1831     022D  3007               	movlw	7
  1832     022E  022C               	subwf	_timer+1,w
  1833     022F  30D1               	movlw	209
  1834     0230  1903               	skipnz
  1835     0231  022B               	subwf	_timer,w
  1836     0232  1C03               	skipc
  1837     0233  2A35               	goto	u2551
  1838     0234  2A36               	goto	u2550
  1839     0235                     u2551:
  1840     0235  2856               	goto	l104
  1841     0236                     u2550:
  1842     0236                     l2918:
  1843                           
  1844                           ;main.c: 311:                 {;main.c: 312:                     PORTCbits.RC5 = 1;
  1845     0236  1687               	bsf	7,5	;volatile
  1846     0237                     l2920:
  1847                           
  1848                           ;main.c: 313:                     comunicacao.endereco = 0x0F;
  1849     0237  300F               	movlw	15
  1850     0238  04F8               	iorwf	_comunicacao,f
  1851     0239                     l2922:
  1852                           
  1853                           ;main.c: 314:                     if(estado.chaveNF == 1)
  1854     0239  1DF6               	btfss	_estado,3
  1855     023A  2A3C               	goto	u2561
  1856     023B  2A3D               	goto	u2560
  1857     023C                     u2561:
  1858     023C  2A42               	goto	l172
  1859     023D                     u2560:
  1860     023D                     l2924:
  1861                           
  1862                           ;main.c: 315:                         comunicacao.resposta = 0x09;
  1863     023D  0878               	movf	_comunicacao,w
  1864     023E  390F               	andlw	-241
  1865     023F  3890               	iorlw	144
  1866     0240  00F8               	movwf	_comunicacao
  1867     0241  2A4F               	goto	l2930
  1868     0242                     l172:	
  1869                           ;main.c: 316:                     else
  1870                           
  1871                           
  1872                           ;main.c: 317:                     {;main.c: 318:                         if(estado.chave
      +                          NA == 1)
  1873     0242  1E76               	btfss	_estado,4
  1874     0243  2A45               	goto	u2571
  1875     0244  2A46               	goto	u2570
  1876     0245                     u2571:
  1877     0245  2A4B               	goto	l2928
  1878     0246                     u2570:
  1879     0246                     l2926:
  1880                           
  1881                           ;main.c: 319:                             comunicacao.resposta = 0x05;
  1882     0246  0878               	movf	_comunicacao,w
  1883     0247  390F               	andlw	-241
  1884     0248  3850               	iorlw	80
  1885     0249  00F8               	movwf	_comunicacao
  1886     024A  2A4F               	goto	l2930
  1887     024B                     l2928:
  1888                           
  1889                           ;main.c: 321:                             comunicacao.resposta = 0x03;
  1890     024B  0878               	movf	_comunicacao,w
  1891     024C  390F               	andlw	-241
  1892     024D  3830               	iorlw	48
  1893     024E  00F8               	movwf	_comunicacao
  1894     024F                     l2930:
  1895                           
  1896                           ;main.c: 323:                     USART_Write(comunicacao.byte);
  1897     024F  0878               	movf	_comunicacao,w
  1898     0250  120A  118A  271E  120A  118A  	fcall	_USART_Write
  1899     0255                     l2932:
  1900                           
  1901                           ;main.c: 324:                     timer = 0;
  1902     0255  1283               	bcf	3,5	;RP0=0, select bank0
  1903     0256  1303               	bcf	3,6	;RP1=0, select bank0
  1904     0257  01AB               	clrf	_timer
  1905     0258  01AC               	clrf	_timer+1
  1906     0259                     l2934:
  1907                           
  1908                           ;main.c: 325:                     estagio = ESTABILIZACAO;
  1909     0259  3005               	movlw	5
  1910     025A  00B5               	movwf	_estagio
  1911     025B  2856               	goto	l104
  1912     025C                     l2936:
  1913                           
  1914                           ;main.c: 331:             {;main.c: 332:                 if(timer > 5000)
  1915     025C  3013               	movlw	19
  1916     025D  022C               	subwf	_timer+1,w
  1917     025E  3089               	movlw	137
  1918     025F  1903               	skipnz
  1919     0260  022B               	subwf	_timer,w
  1920     0261  1C03               	skipc
  1921     0262  2A64               	goto	u2581
  1922     0263  2A65               	goto	u2580
  1923     0264                     u2581:
  1924     0264  2A67               	goto	l2940
  1925     0265                     u2580:
  1926     0265                     l2938:
  1927                           
  1928                           ;main.c: 333:                     estagio = TESTE_LIGA;
  1929     0265  3006               	movlw	6
  1930     0266  00B5               	movwf	_estagio
  1931     0267                     l2940:
  1932                           
  1933                           ;main.c: 335:                 if(USART_RX_Ready() == 0)
  1934     0267  120A  118A  273A  120A  118A  	fcall	_USART_RX_Ready
  1935     026C  3A00               	xorlw	0
  1936     026D  1D03               	skipz
  1937     026E  2A70               	goto	u2591
  1938     026F  2A71               	goto	u2590
  1939     0270                     u2591:
  1940     0270  2A75               	goto	l2944
  1941     0271                     u2590:
  1942     0271                     l2942:
  1943                           
  1944                           ;main.c: 336:                     timeoutRx = 0;
  1945     0271  1283               	bcf	3,5	;RP0=0, select bank0
  1946     0272  1303               	bcf	3,6	;RP1=0, select bank0
  1947     0273  01BC               	clrf	_timeoutRx
  1948     0274  2A83               	goto	l2950
  1949     0275                     l2944:
  1950                           
  1951                           ;main.c: 338:                 {;main.c: 339:                     if(timeoutRx > 80)
  1952     0275  3051               	movlw	81
  1953     0276  1283               	bcf	3,5	;RP0=0, select bank0
  1954     0277  1303               	bcf	3,6	;RP1=0, select bank0
  1955     0278  023C               	subwf	_timeoutRx,w
  1956     0279  1C03               	skipc
  1957     027A  2A7C               	goto	u2601
  1958     027B  2A7D               	goto	u2600
  1959     027C                     u2601:
  1960     027C  2A83               	goto	l2950
  1961     027D                     u2600:
  1962     027D                     l2946:
  1963                           
  1964                           ;main.c: 340:                     {;main.c: 341:                         USART_RX_Clear_
      +                          Buffer();
  1965     027D  120A  118A  273E  120A  118A  	fcall	_USART_RX_Clear_Buffer
  1966     0282  2A71               	goto	l2942
  1967     0283                     l2950:
  1968                           
  1969                           ;main.c: 346:                 if(USART_RX_Ready() == 1)
  1970     0283  120A  118A  273A  120A  118A  	fcall	_USART_RX_Ready
  1971     0288  3A01               	xorlw	1
  1972     0289  1D03               	skipz
  1973     028A  2A8C               	goto	u2611
  1974     028B  2A8D               	goto	u2610
  1975     028C                     u2611:
  1976     028C  2856               	goto	l104
  1977     028D                     u2610:
  1978     028D                     l2952:
  1979                           
  1980                           ;main.c: 347:                 {;main.c: 348:                     comunicacao.byte = USAR
      +                          T_Read();
  1981     028D  120A  118A  2712  120A  118A  	fcall	_USART_Read
  1982     0292  00F8               	movwf	_comunicacao
  1983     0293                     l2954:
  1984                           
  1985                           ;main.c: 349:                     if(comunicacao.endereco == 0x00)
  1986     0293  0878               	movf	_comunicacao,w
  1987     0294  390F               	andlw	15
  1988     0295  3A00               	xorlw	0
  1989     0296  1D03               	skipz
  1990     0297  2A99               	goto	u2621
  1991     0298  2A9A               	goto	u2620
  1992     0299                     u2621:
  1993     0299  2856               	goto	l104
  1994     029A                     u2620:
  1995     029A                     l2956:
  1996                           
  1997                           ;main.c: 350:                     {;main.c: 351:                         if(comunicacao.
      +                          resposta == 0x0F)
  1998     029A  0E78               	swapf	_comunicacao,w
  1999     029B  390F               	andlw	15
  2000     029C  3A0F               	xorlw	15
  2001     029D  1D03               	skipz
  2002     029E  2AA0               	goto	u2631
  2003     029F  2AA1               	goto	u2630
  2004     02A0                     u2631:
  2005     02A0  2856               	goto	l104
  2006     02A1                     u2630:
  2007     02A1                     l2958:
  2008                           
  2009                           ;main.c: 352:                         {;main.c: 353:                             estagio
      +                           = FALHA;
  2010     02A1  3012               	movlw	18
  2011     02A2  1283               	bcf	3,5	;RP0=0, select bank0
  2012     02A3  1303               	bcf	3,6	;RP1=0, select bank0
  2013     02A4  00B5               	movwf	_estagio
  2014     02A5                     l2960:
  2015                           
  2016                           ;main.c: 354:                             estado.testando = 0;
  2017     02A5  1376               	bcf	_estado,6
  2018     02A6                     l2962:
  2019                           
  2020                           ;main.c: 355:                             comunicacao.endereco = 0x0F;
  2021     02A6  300F               	movlw	15
  2022     02A7  04F8               	iorwf	_comunicacao,f
  2023     02A8                     l2964:
  2024                           
  2025                           ;main.c: 356:                             comunicacao.resposta = 0x00;
  2026     02A8  300F               	movlw	-241
  2027     02A9  05F8               	andwf	_comunicacao,f
  2028     02AA                     l2966:
  2029                           
  2030                           ;main.c: 357:                             USART_Write(comunicacao.byte);
  2031     02AA  0878               	movf	_comunicacao,w
  2032     02AB  120A  118A  271E  120A  118A  	fcall	_USART_Write
  2033     02B0  2856               	goto	l104
  2034     02B1                     l184:	
  2035                           ;main.c: 364:             case TESTE_LIGA:
  2036                           
  2037                           
  2038                           ;main.c: 365:             {;main.c: 366:                 if(estado.chaveNA == 1)
  2039     02B1  1E76               	btfss	_estado,4
  2040     02B2  2AB4               	goto	u2641
  2041     02B3  2AB5               	goto	u2640
  2042     02B4                     u2641:
  2043     02B4  2ABA               	goto	l2970
  2044     02B5                     u2640:
  2045     02B5                     l2968:
  2046                           
  2047                           ;main.c: 367:                     pwm_setado = 105;
  2048     02B5  3069               	movlw	105
  2049     02B6  00A7               	movwf	_pwm_setado
  2050     02B7  3000               	movlw	0
  2051     02B8  00A8               	movwf	_pwm_setado+1
  2052     02B9  2ABE               	goto	l2972
  2053     02BA                     l2970:
  2054                           
  2055                           ;main.c: 369:                     pwm_setado = 10;
  2056     02BA  300A               	movlw	10
  2057     02BB  00A7               	movwf	_pwm_setado
  2058     02BC  3000               	movlw	0
  2059     02BD  00A8               	movwf	_pwm_setado+1
  2060     02BE                     l2972:
  2061                           
  2062                           ;main.c: 370:                 timer = 0;
  2063     02BE  01AB               	clrf	_timer
  2064     02BF  01AC               	clrf	_timer+1
  2065     02C0                     l2974:
  2066                           
  2067                           ;main.c: 371:                 estagio = AGUARDA_TEMPO_LIGA;
  2068     02C0  3007               	movlw	7
  2069     02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2070     02C2  1303               	bcf	3,6	;RP1=0, select bank0
  2071     02C3  00B5               	movwf	_estagio
  2072                           
  2073                           ;main.c: 372:             };main.c: 373:             break;
  2074     02C4  2856               	goto	l104
  2075     02C5                     l2976:
  2076                           
  2077                           ;main.c: 376:             {;main.c: 377:                 if((timer > 12000) || (escravo.
      +                          byte == 0x03FF))
  2078     02C5  302E               	movlw	46
  2079     02C6  022C               	subwf	_timer+1,w
  2080     02C7  30E1               	movlw	225
  2081     02C8  1903               	skipnz
  2082     02C9  022B               	subwf	_timer,w
  2083     02CA  1803               	skipnc
  2084     02CB  2ACD               	goto	u2651
  2085     02CC  2ACE               	goto	u2650
  2086     02CD                     u2651:
  2087     02CD  2AD6               	goto	l2980
  2088     02CE                     u2650:
  2089     02CE                     l2978:
  2090     02CE  0A23               	incf	_escravo,w
  2091     02CF  3003               	movlw	3
  2092     02D0  1903               	skipnz
  2093     02D1  0624               	xorwf	_escravo+1,w
  2094     02D2  1D03               	btfss	3,2
  2095     02D3  2AD5               	goto	u2661
  2096     02D4  2AD6               	goto	u2660
  2097     02D5                     u2661:
  2098     02D5  2AE5               	goto	l2986
  2099     02D6                     u2660:
  2100     02D6                     l2980:
  2101                           
  2102                           ;main.c: 378:                 {;main.c: 379:                     if(timer > 3000)
  2103     02D6  300B               	movlw	11
  2104     02D7  022C               	subwf	_timer+1,w
  2105     02D8  30B9               	movlw	185
  2106     02D9  1903               	skipnz
  2107     02DA  022B               	subwf	_timer,w
  2108     02DB  1C03               	skipc
  2109     02DC  2ADE               	goto	u2671
  2110     02DD  2ADF               	goto	u2670
  2111     02DE                     u2671:
  2112     02DE  2E2B               	goto	l151
  2113     02DF                     u2670:
  2114     02DF                     l2982:
  2115                           
  2116                           ;main.c: 380:                     {;main.c: 381:                         escravo.byte = 
      +                          0;
  2117     02DF  01A3               	clrf	_escravo
  2118     02E0  01A4               	clrf	_escravo+1
  2119                           
  2120                           ;main.c: 382:                         endereco = 0;
  2121     02E1  01F9               	clrf	_endereco
  2122     02E2                     l2984:
  2123                           
  2124                           ;main.c: 383:                         estagio = TESTE_DESLIGA;
  2125     02E2  300A               	movlw	10
  2126     02E3  00B5               	movwf	_estagio
  2127     02E4  2856               	goto	l104
  2128     02E5                     l2986:
  2129                           
  2130                           ;main.c: 387:                     estagio = VERIFICA_PLACAS_LIGA;
  2131     02E5  3008               	movlw	8
  2132     02E6  00B5               	movwf	_estagio
  2133     02E7  2856               	goto	l104
  2134     02E8                     l2988:
  2135                           
  2136                           ;main.c: 392:             {;main.c: 393:                 endereco++;
  2137     02E8  3001               	movlw	1
  2138     02E9  00C3               	movwf	??_main
  2139     02EA  0843               	movf	??_main,w
  2140     02EB  07F9               	addwf	_endereco,f
  2141     02EC                     l2990:
  2142                           
  2143                           ;main.c: 394:                 if(endereco <= 10)
  2144     02EC  300B               	movlw	11
  2145     02ED  0279               	subwf	_endereco,w
  2146     02EE  1803               	skipnc
  2147     02EF  2AF1               	goto	u2681
  2148     02F0  2AF2               	goto	u2680
  2149     02F1                     u2681:
  2150     02F1  2B0A               	goto	l3004
  2151     02F2                     u2680:
  2152     02F2                     l2992:
  2153                           
  2154                           ;main.c: 395:                 {;main.c: 396:                     timeoutRx = 0;
  2155     02F2  01BC               	clrf	_timeoutRx
  2156     02F3                     l2994:
  2157                           
  2158                           ;main.c: 397:                     USART_RX_Clear_Buffer();
  2159     02F3  120A  118A  273E  120A  118A  	fcall	_USART_RX_Clear_Buffer
  2160     02F8                     l2996:
  2161                           
  2162                           ;main.c: 398:                     comunicacao.endereco = endereco;
  2163     02F8  0878               	movf	_comunicacao,w
  2164     02F9  0679               	xorwf	_endereco,w
  2165     02FA  39F0               	andlw	-16
  2166     02FB  0679               	xorwf	_endereco,w
  2167     02FC  00F8               	movwf	_comunicacao
  2168     02FD                     l2998:
  2169                           
  2170                           ;main.c: 399:                     comunicacao.resposta = 0x0F;
  2171     02FD  30F0               	movlw	240
  2172     02FE  04F8               	iorwf	_comunicacao,f
  2173     02FF                     l3000:
  2174                           
  2175                           ;main.c: 400:                     USART_Write(comunicacao.byte);
  2176     02FF  0878               	movf	_comunicacao,w
  2177     0300  120A  118A  271E  120A  118A  	fcall	_USART_Write
  2178     0305                     l3002:
  2179                           
  2180                           ;main.c: 401:                     estagio = MENSAGEM_RETORNO_PLACAS_LIGA;
  2181     0305  3009               	movlw	9
  2182     0306  1283               	bcf	3,5	;RP0=0, select bank0
  2183     0307  1303               	bcf	3,6	;RP1=0, select bank0
  2184     0308  00B5               	movwf	_estagio
  2185                           
  2186                           ;main.c: 402:                 }
  2187     0309  2856               	goto	l104
  2188     030A                     l3004:
  2189                           
  2190                           ;main.c: 404:                     endereco = 0;
  2191     030A  01F9               	clrf	_endereco
  2192     030B  2856               	goto	l104
  2193     030C                     l3006:
  2194                           
  2195                           ;main.c: 409:             {;main.c: 410:                 if(timeoutRx > 80)
  2196     030C  3051               	movlw	81
  2197     030D  023C               	subwf	_timeoutRx,w
  2198     030E  1C03               	skipc
  2199     030F  2B11               	goto	u2691
  2200     0310  2B12               	goto	u2690
  2201     0311                     u2691:
  2202     0311  2B13               	goto	l3010
  2203     0312                     u2690:
  2204     0312  2AC0               	goto	l2974
  2205     0313                     l3010:
  2206                           
  2207                           ;main.c: 413:                 {;main.c: 414:                     if(USART_RX_Ready() == 
      +                          1)
  2208     0313  120A  118A  273A  120A  118A  	fcall	_USART_RX_Ready
  2209     0318  3A01               	xorlw	1
  2210     0319  1D03               	skipz
  2211     031A  2B1C               	goto	u2701
  2212     031B  2B1D               	goto	u2700
  2213     031C                     u2701:
  2214     031C  2E2B               	goto	l151
  2215     031D                     u2700:
  2216     031D                     l3012:
  2217                           
  2218                           ;main.c: 415:                     {;main.c: 416:                         comunicacao.byt
      +                          e = USART_Read();
  2219     031D  120A  118A  2712  120A  118A  	fcall	_USART_Read
  2220     0322  00F8               	movwf	_comunicacao
  2221     0323                     l3014:
  2222                           
  2223                           ;main.c: 417:                         if(comunicacao.endereco == endereco)
  2224     0323  0878               	movf	_comunicacao,w
  2225     0324  390F               	andlw	15
  2226     0325  0679               	xorwf	_endereco,w
  2227     0326  1D03               	skipz
  2228     0327  2B29               	goto	u2711
  2229     0328  2B2A               	goto	u2710
  2230     0329                     u2711:
  2231     0329  2AC0               	goto	l2974
  2232     032A                     u2710:
  2233     032A                     l3016:
  2234                           
  2235                           ;main.c: 418:                         {;main.c: 419:                             if(comu
      +                          nicacao.resposta != 0x00)
  2236     032A  0E78               	swapf	_comunicacao,w
  2237     032B  390F               	andlw	15
  2238     032C  3A00               	xorlw	0
  2239     032D  1903               	skipnz
  2240     032E  2B30               	goto	u2721
  2241     032F  2B31               	goto	u2720
  2242     0330                     u2721:
  2243     0330  2AC0               	goto	l2974
  2244     0331                     u2720:
  2245     0331  2B46               	goto	l3022
  2246     0332                     l203:	
  2247                           ;main.c: 422:                                 {;main.c: 423:                            
      +                                   case 1:
  2248                           
  2249                           
  2250                           ;main.c: 424:                                         escravo.endereco1 = 1;
  2251     0332  1423               	bsf	_escravo,0
  2252                           
  2253                           ;main.c: 425:                                     break;
  2254     0333  2AC0               	goto	l2974
  2255     0334                     l205:	
  2256                           ;main.c: 426:                                     case 2:
  2257                           
  2258                           
  2259                           ;main.c: 427:                                         escravo.endereco2 = 1;
  2260     0334  14A3               	bsf	_escravo,1
  2261                           
  2262                           ;main.c: 428:                                     break;
  2263     0335  2AC0               	goto	l2974
  2264     0336                     l206:	
  2265                           ;main.c: 429:                                     case 3:
  2266                           
  2267                           
  2268                           ;main.c: 430:                                         escravo.endereco3 = 1;
  2269     0336  1523               	bsf	_escravo,2
  2270                           
  2271                           ;main.c: 431:                                     break;
  2272     0337  2AC0               	goto	l2974
  2273     0338                     l207:	
  2274                           ;main.c: 432:                                     case 4:
  2275                           
  2276                           
  2277                           ;main.c: 433:                                         escravo.endereco4 = 1;
  2278     0338  15A3               	bsf	_escravo,3
  2279                           
  2280                           ;main.c: 434:                                     break;
  2281     0339  2AC0               	goto	l2974
  2282     033A                     l208:	
  2283                           ;main.c: 435:                                     case 5:
  2284                           
  2285                           
  2286                           ;main.c: 436:                                         escravo.endereco5 = 1;
  2287     033A  1623               	bsf	_escravo,4
  2288                           
  2289                           ;main.c: 437:                                     break;
  2290     033B  2AC0               	goto	l2974
  2291     033C                     l209:	
  2292                           ;main.c: 438:                                     case 6:
  2293                           
  2294                           
  2295                           ;main.c: 439:                                         escravo.endereco6 = 1;
  2296     033C  16A3               	bsf	_escravo,5
  2297                           
  2298                           ;main.c: 440:                                     break;
  2299     033D  2AC0               	goto	l2974
  2300     033E                     l210:	
  2301                           ;main.c: 441:                                     case 7:
  2302                           
  2303                           
  2304                           ;main.c: 442:                                         escravo.endereco7 = 1;
  2305     033E  1723               	bsf	_escravo,6
  2306                           
  2307                           ;main.c: 443:                                     break;
  2308     033F  2AC0               	goto	l2974
  2309     0340                     l211:	
  2310                           ;main.c: 444:                                     case 8:
  2311                           
  2312                           
  2313                           ;main.c: 445:                                         escravo.endereco8 = 1;
  2314     0340  17A3               	bsf	_escravo,7
  2315                           
  2316                           ;main.c: 446:                                     break;
  2317     0341  2AC0               	goto	l2974
  2318     0342                     l212:	
  2319                           ;main.c: 447:                                     case 9:
  2320                           
  2321                           
  2322                           ;main.c: 448:                                         escravo.endereco9 = 1;
  2323     0342  1424               	bsf	_escravo+1,0
  2324                           
  2325                           ;main.c: 449:                                     break;
  2326     0343  2AC0               	goto	l2974
  2327     0344                     l213:	
  2328                           ;main.c: 450:                                     case 10:
  2329                           
  2330                           
  2331                           ;main.c: 451:                                         escravo.endereco10 = 1;
  2332     0344  14A4               	bsf	_escravo+1,1
  2333                           
  2334                           ;main.c: 452:                                     break;
  2335     0345  2AC0               	goto	l2974
  2336     0346                     l3022:
  2337     0346  0879               	movf	_endereco,w
  2338     0347  1283               	bcf	3,5	;RP0=0, select bank0
  2339     0348  1303               	bcf	3,6	;RP1=0, select bank0
  2340     0349  00C3               	movwf	??_main
  2341     034A  01C4               	clrf	??_main+1
  2342                           
  2343                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2344                           ; Switch size 1, requested type "simple"
  2345                           ; Number of cases is 1, Range of values is 0 to 0
  2346                           ; switch strategies available:
  2347                           ; Name         Instructions Cycles
  2348                           ; simple_byte            4     3 (average)
  2349                           ; direct_byte           11     8 (fixed)
  2350                           ; jumptable            260     6 (fixed)
  2351                           ;	Chosen strategy is simple_byte
  2352     034B  0844               	movf	??_main+1,w
  2353     034C  3A00               	xorlw	0	; case 0
  2354     034D  1903               	skipnz
  2355     034E  2B50               	goto	l3358
  2356     034F  2AC0               	goto	l2974
  2357     0350                     l3358:
  2358                           
  2359                           ; Switch size 1, requested type "simple"
  2360                           ; Number of cases is 10, Range of values is 1 to 10
  2361                           ; switch strategies available:
  2362                           ; Name         Instructions Cycles
  2363                           ; simple_byte           31    16 (average)
  2364                           ; direct_byte           41    11 (fixed)
  2365                           ; jumptable            263     9 (fixed)
  2366                           ;	Chosen strategy is simple_byte
  2367     0350  0843               	movf	??_main,w
  2368     0351  3A01               	xorlw	1	; case 1
  2369     0352  1903               	skipnz
  2370     0353  2B32               	goto	l203
  2371     0354  3A03               	xorlw	3	; case 2
  2372     0355  1903               	skipnz
  2373     0356  2B34               	goto	l205
  2374     0357  3A01               	xorlw	1	; case 3
  2375     0358  1903               	skipnz
  2376     0359  2B36               	goto	l206
  2377     035A  3A07               	xorlw	7	; case 4
  2378     035B  1903               	skipnz
  2379     035C  2B38               	goto	l207
  2380     035D  3A01               	xorlw	1	; case 5
  2381     035E  1903               	skipnz
  2382     035F  2B3A               	goto	l208
  2383     0360  3A03               	xorlw	3	; case 6
  2384     0361  1903               	skipnz
  2385     0362  2B3C               	goto	l209
  2386     0363  3A01               	xorlw	1	; case 7
  2387     0364  1903               	skipnz
  2388     0365  2B3E               	goto	l210
  2389     0366  3A0F               	xorlw	15	; case 8
  2390     0367  1903               	skipnz
  2391     0368  2B40               	goto	l211
  2392     0369  3A01               	xorlw	1	; case 9
  2393     036A  1903               	skipnz
  2394     036B  2B42               	goto	l212
  2395     036C  3A03               	xorlw	3	; case 10
  2396     036D  1903               	skipnz
  2397     036E  2B44               	goto	l213
  2398     036F  2AC0               	goto	l2974
  2399     0370                     l214:	
  2400                           ;main.c: 462:             case TESTE_DESLIGA:
  2401                           
  2402                           
  2403                           ;main.c: 463:             {;main.c: 464:                 if(estado.chaveNA == 1)
  2404     0370  1E76               	btfss	_estado,4
  2405     0371  2B73               	goto	u2731
  2406     0372  2B74               	goto	u2730
  2407     0373                     u2731:
  2408     0373  2B79               	goto	l215
  2409     0374                     u2730:
  2410     0374                     l3026:
  2411                           
  2412                           ;main.c: 465:                     pwm_setado = 10;
  2413     0374  300A               	movlw	10
  2414     0375  00A7               	movwf	_pwm_setado
  2415     0376  3000               	movlw	0
  2416     0377  00A8               	movwf	_pwm_setado+1
  2417     0378  2B86               	goto	l3032
  2418     0379                     l215:	
  2419                           ;main.c: 466:                 else
  2420                           
  2421                           
  2422                           ;main.c: 467:                 {;main.c: 468:                     if(estado.chavecopo == 
      +                          1)
  2423     0379  1EF6               	btfss	_estado,5
  2424     037A  2B7C               	goto	u2741
  2425     037B  2B7D               	goto	u2740
  2426     037C                     u2741:
  2427     037C  2B82               	goto	l3030
  2428     037D                     u2740:
  2429     037D                     l3028:
  2430                           
  2431                           ;main.c: 469:                         pwm_setado = 170;
  2432     037D  30AA               	movlw	170
  2433     037E  00A7               	movwf	_pwm_setado
  2434     037F  3000               	movlw	0
  2435     0380  00A8               	movwf	_pwm_setado+1
  2436     0381  2B86               	goto	l3032
  2437     0382                     l3030:
  2438                           
  2439                           ;main.c: 471:                         pwm_setado = 105;
  2440     0382  3069               	movlw	105
  2441     0383  00A7               	movwf	_pwm_setado
  2442     0384  3000               	movlw	0
  2443     0385  00A8               	movwf	_pwm_setado+1
  2444     0386                     l3032:
  2445                           
  2446                           ;main.c: 473:                 timer = 0;
  2447     0386  01AB               	clrf	_timer
  2448     0387  01AC               	clrf	_timer+1
  2449     0388                     l3034:
  2450                           
  2451                           ;main.c: 474:                 estagio = AGUARDA_TEMPO_DESLIGA;
  2452     0388  300B               	movlw	11
  2453     0389  00B5               	movwf	_estagio
  2454     038A                     l3036:
  2455                           
  2456                           ;main.c: 475:                 comunicacao.endereco = 0x0F;
  2457     038A  300F               	movlw	15
  2458     038B  04F8               	iorwf	_comunicacao,f
  2459     038C                     l3038:
  2460                           
  2461                           ;main.c: 476:                 comunicacao.resposta = 0x07;
  2462     038C  0878               	movf	_comunicacao,w
  2463     038D  390F               	andlw	-241
  2464     038E  3870               	iorlw	112
  2465     038F  00F8               	movwf	_comunicacao
  2466     0390                     l3040:
  2467                           
  2468                           ;main.c: 477:                 USART_Write(comunicacao.byte);
  2469     0390  0878               	movf	_comunicacao,w
  2470     0391  120A  118A  271E  120A  118A  	fcall	_USART_Write
  2471                           
  2472                           ;main.c: 478:             };main.c: 479:             break;
  2473     0396  2856               	goto	l104
  2474     0397                     l3042:
  2475                           
  2476                           ;main.c: 482:             {;main.c: 483:                 if((timer > 10000) || (escravo.
      +                          byte == 0x03FF))
  2477     0397  3027               	movlw	39
  2478     0398  022C               	subwf	_timer+1,w
  2479     0399  3011               	movlw	17
  2480     039A  1903               	skipnz
  2481     039B  022B               	subwf	_timer,w
  2482     039C  1803               	skipnc
  2483     039D  2B9F               	goto	u2751
  2484     039E  2BA0               	goto	u2750
  2485     039F                     u2751:
  2486     039F  2BA8               	goto	l3046
  2487     03A0                     u2750:
  2488     03A0                     l3044:
  2489     03A0  0A23               	incf	_escravo,w
  2490     03A1  3003               	movlw	3
  2491     03A2  1903               	skipnz
  2492     03A3  0624               	xorwf	_escravo+1,w
  2493     03A4  1D03               	btfss	3,2
  2494     03A5  2BA7               	goto	u2761
  2495     03A6  2BA8               	goto	u2760
  2496     03A7                     u2761:
  2497     03A7  2BC4               	goto	l3058
  2498     03A8                     u2760:
  2499     03A8                     l3046:
  2500                           
  2501                           ;main.c: 484:                 {;main.c: 485:                     if((timer > 8000) || (e
      +                          stado.reteste == 1))
  2502     03A8  301F               	movlw	31
  2503     03A9  022C               	subwf	_timer+1,w
  2504     03AA  3041               	movlw	65
  2505     03AB  1903               	skipnz
  2506     03AC  022B               	subwf	_timer,w
  2507     03AD  1803               	skipnc
  2508     03AE  2BB0               	goto	u2771
  2509     03AF  2BB1               	goto	u2770
  2510     03B0                     u2771:
  2511     03B0  2BB5               	goto	l3050
  2512     03B1                     u2770:
  2513     03B1                     l3048:
  2514     03B1  1FF6               	btfss	_estado,7
  2515     03B2  2BB4               	goto	u2781
  2516     03B3  2BB5               	goto	u2780
  2517     03B4                     u2781:
  2518     03B4  2856               	goto	l104
  2519     03B5                     u2780:
  2520     03B5                     l3050:
  2521                           
  2522                           ;main.c: 486:                     {;main.c: 487:                         escravo.byte = 
      +                          0;
  2523     03B5  01A3               	clrf	_escravo
  2524     03B6  01A4               	clrf	_escravo+1
  2525                           
  2526                           ;main.c: 488:                         endereco = 0;
  2527     03B7  01F9               	clrf	_endereco
  2528     03B8                     l3052:
  2529                           
  2530                           ;main.c: 489:                         if(estado.reteste == 1)
  2531     03B8  1FF6               	btfss	_estado,7
  2532     03B9  2BBB               	goto	u2791
  2533     03BA  2BBC               	goto	u2790
  2534     03BB                     u2791:
  2535     03BB  2BC1               	goto	l3056
  2536     03BC                     u2790:
  2537     03BC                     l3054:
  2538                           
  2539                           ;main.c: 490:                             estagio = VERIFICA_PLACAS;
  2540     03BC  300F               	movlw	15
  2541     03BD  1283               	bcf	3,5	;RP0=0, select bank0
  2542     03BE  1303               	bcf	3,6	;RP1=0, select bank0
  2543     03BF  00B5               	movwf	_estagio
  2544     03C0  2856               	goto	l104
  2545     03C1                     l3056:
  2546                           
  2547                           ;main.c: 492:                             estagio = RETESTE;
  2548     03C1  300E               	movlw	14
  2549     03C2  00B5               	movwf	_estagio
  2550     03C3  2856               	goto	l104
  2551     03C4                     l3058:
  2552                           
  2553                           ;main.c: 496:                     estagio = VERIFICA_PLACAS_DESLIGA;
  2554     03C4  300C               	movlw	12
  2555     03C5  00B5               	movwf	_estagio
  2556     03C6  2856               	goto	l104
  2557     03C7                     l3060:
  2558                           
  2559                           ;main.c: 501:             {;main.c: 502:                 endereco++;
  2560     03C7  3001               	movlw	1
  2561     03C8  00C3               	movwf	??_main
  2562     03C9  0843               	movf	??_main,w
  2563     03CA  07F9               	addwf	_endereco,f
  2564     03CB                     l3062:
  2565                           
  2566                           ;main.c: 503:                 if(endereco <= 10)
  2567     03CB  300B               	movlw	11
  2568     03CC  0279               	subwf	_endereco,w
  2569     03CD  1803               	skipnc
  2570     03CE  2BD0               	goto	u2801
  2571     03CF  2BD1               	goto	u2800
  2572     03D0                     u2801:
  2573     03D0  2B0A               	goto	l3004
  2574     03D1                     u2800:
  2575     03D1                     l3064:
  2576                           
  2577                           ;main.c: 504:                 {;main.c: 505:                     timeoutRx = 0;
  2578     03D1  01BC               	clrf	_timeoutRx
  2579     03D2                     l3066:
  2580                           
  2581                           ;main.c: 506:                     USART_RX_Clear_Buffer();
  2582     03D2  120A  118A  273E  120A  118A  	fcall	_USART_RX_Clear_Buffer
  2583     03D7                     l3068:
  2584                           
  2585                           ;main.c: 507:                     comunicacao.endereco = endereco;
  2586     03D7  0878               	movf	_comunicacao,w
  2587     03D8  0679               	xorwf	_endereco,w
  2588     03D9  39F0               	andlw	-16
  2589     03DA  0679               	xorwf	_endereco,w
  2590     03DB  00F8               	movwf	_comunicacao
  2591     03DC                     l3070:
  2592                           
  2593                           ;main.c: 508:                     comunicacao.resposta = 0x0F;
  2594     03DC  30F0               	movlw	240
  2595     03DD  04F8               	iorwf	_comunicacao,f
  2596     03DE                     l3072:
  2597                           
  2598                           ;main.c: 509:                     USART_Write(comunicacao.byte);
  2599     03DE  0878               	movf	_comunicacao,w
  2600     03DF  120A  118A  271E  120A  118A  	fcall	_USART_Write
  2601     03E4                     l3074:
  2602                           
  2603                           ;main.c: 510:                     estagio = MENSAGEM_RETORNO_PLACAS_DESLIGA;
  2604     03E4  300D               	movlw	13
  2605     03E5  1283               	bcf	3,5	;RP0=0, select bank0
  2606     03E6  1303               	bcf	3,6	;RP1=0, select bank0
  2607     03E7  00B5               	movwf	_estagio
  2608                           
  2609                           ;main.c: 511:                 }
  2610     03E8  2856               	goto	l104
  2611     03E9                     l3078:
  2612                           
  2613                           ;main.c: 518:             {;main.c: 519:                 if(timeoutRx > 80)
  2614     03E9  3051               	movlw	81
  2615     03EA  023C               	subwf	_timeoutRx,w
  2616     03EB  1C03               	skipc
  2617     03EC  2BEE               	goto	u2811
  2618     03ED  2BEF               	goto	u2810
  2619     03EE                     u2811:
  2620     03EE  2BF4               	goto	l3082
  2621     03EF                     u2810:
  2622     03EF                     l3080:
  2623                           
  2624                           ;main.c: 520:                     estagio = AGUARDA_TEMPO_DESLIGA;
  2625     03EF  300B               	movlw	11
  2626     03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2627     03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2628     03F2  00B5               	movwf	_estagio
  2629     03F3  2856               	goto	l104
  2630     03F4                     l3082:
  2631                           
  2632                           ;main.c: 522:                 {;main.c: 523:                     if(USART_RX_Ready() == 
      +                          1)
  2633     03F4  120A  118A  273A  120A  118A  	fcall	_USART_RX_Ready
  2634     03F9  3A01               	xorlw	1
  2635     03FA  1D03               	skipz
  2636     03FB  2BFD               	goto	u2821
  2637     03FC  2BFE               	goto	u2820
  2638     03FD                     u2821:
  2639     03FD  2E2B               	goto	l151
  2640     03FE                     u2820:
  2641     03FE                     l3084:
  2642                           
  2643                           ;main.c: 524:                     {;main.c: 525:                         comunicacao.byt
      +                          e = USART_Read();
  2644     03FE  120A  118A  2712  120A  118A  	fcall	_USART_Read
  2645     0403  00F8               	movwf	_comunicacao
  2646     0404                     l3086:
  2647                           
  2648                           ;main.c: 526:                         if(comunicacao.endereco == endereco)
  2649     0404  0878               	movf	_comunicacao,w
  2650     0405  390F               	andlw	15
  2651     0406  0679               	xorwf	_endereco,w
  2652     0407  1D03               	skipz
  2653     0408  2C0A               	goto	u2831
  2654     0409  2C0B               	goto	u2830
  2655     040A                     u2831:
  2656     040A  2BEF               	goto	l3080
  2657     040B                     u2830:
  2658     040B                     l3088:
  2659                           
  2660                           ;main.c: 527:                         {;main.c: 528:                             if(comu
      +                          nicacao.resposta != 0x00)
  2661     040B  0E78               	swapf	_comunicacao,w
  2662     040C  390F               	andlw	15
  2663     040D  3A00               	xorlw	0
  2664     040E  1903               	skipnz
  2665     040F  2C11               	goto	u2841
  2666     0410  2C12               	goto	u2840
  2667     0411                     u2841:
  2668     0411  2BEF               	goto	l3080
  2669     0412                     u2840:
  2670     0412  2C27               	goto	l3094
  2671     0413                     l239:	
  2672                           ;main.c: 531:                                 {;main.c: 532:                            
      +                                   case 1:
  2673                           
  2674                           
  2675                           ;main.c: 533:                                         escravo.endereco1 = 1;
  2676     0413  1423               	bsf	_escravo,0
  2677                           
  2678                           ;main.c: 534:                                     break;
  2679     0414  2BEF               	goto	l3080
  2680     0415                     l241:	
  2681                           ;main.c: 535:                                     case 2:
  2682                           
  2683                           
  2684                           ;main.c: 536:                                         escravo.endereco2 = 1;
  2685     0415  14A3               	bsf	_escravo,1
  2686                           
  2687                           ;main.c: 537:                                     break;
  2688     0416  2BEF               	goto	l3080
  2689     0417                     l242:	
  2690                           ;main.c: 538:                                     case 3:
  2691                           
  2692                           
  2693                           ;main.c: 539:                                         escravo.endereco3 = 1;
  2694     0417  1523               	bsf	_escravo,2
  2695                           
  2696                           ;main.c: 540:                                     break;
  2697     0418  2BEF               	goto	l3080
  2698     0419                     l243:	
  2699                           ;main.c: 541:                                     case 4:
  2700                           
  2701                           
  2702                           ;main.c: 542:                                         escravo.endereco4 = 1;
  2703     0419  15A3               	bsf	_escravo,3
  2704                           
  2705                           ;main.c: 543:                                     break;
  2706     041A  2BEF               	goto	l3080
  2707     041B                     l244:	
  2708                           ;main.c: 544:                                     case 5:
  2709                           
  2710                           
  2711                           ;main.c: 545:                                         escravo.endereco5 = 1;
  2712     041B  1623               	bsf	_escravo,4
  2713                           
  2714                           ;main.c: 546:                                     break;
  2715     041C  2BEF               	goto	l3080
  2716     041D                     l245:	
  2717                           ;main.c: 547:                                     case 6:
  2718                           
  2719                           
  2720                           ;main.c: 548:                                         escravo.endereco6 = 1;
  2721     041D  16A3               	bsf	_escravo,5
  2722                           
  2723                           ;main.c: 549:                                     break;
  2724     041E  2BEF               	goto	l3080
  2725     041F                     l246:	
  2726                           ;main.c: 550:                                     case 7:
  2727                           
  2728                           
  2729                           ;main.c: 551:                                         escravo.endereco7 = 1;
  2730     041F  1723               	bsf	_escravo,6
  2731                           
  2732                           ;main.c: 552:                                     break;
  2733     0420  2BEF               	goto	l3080
  2734     0421                     l247:	
  2735                           ;main.c: 553:                                     case 8:
  2736                           
  2737                           
  2738                           ;main.c: 554:                                         escravo.endereco8 = 1;
  2739     0421  17A3               	bsf	_escravo,7
  2740                           
  2741                           ;main.c: 555:                                     break;
  2742     0422  2BEF               	goto	l3080
  2743     0423                     l248:	
  2744                           ;main.c: 556:                                     case 9:
  2745                           
  2746                           
  2747                           ;main.c: 557:                                         escravo.endereco9 = 1;
  2748     0423  1424               	bsf	_escravo+1,0
  2749                           
  2750                           ;main.c: 558:                                     break;
  2751     0424  2BEF               	goto	l3080
  2752     0425                     l249:	
  2753                           ;main.c: 559:                                     case 10:
  2754                           
  2755                           
  2756                           ;main.c: 560:                                         escravo.endereco10 = 1;
  2757     0425  14A4               	bsf	_escravo+1,1
  2758                           
  2759                           ;main.c: 561:                                     break;
  2760     0426  2BEF               	goto	l3080
  2761     0427                     l3094:
  2762     0427  0879               	movf	_endereco,w
  2763     0428  1283               	bcf	3,5	;RP0=0, select bank0
  2764     0429  1303               	bcf	3,6	;RP1=0, select bank0
  2765     042A  00C3               	movwf	??_main
  2766     042B  01C4               	clrf	??_main+1
  2767                           
  2768                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2769                           ; Switch size 1, requested type "simple"
  2770                           ; Number of cases is 1, Range of values is 0 to 0
  2771                           ; switch strategies available:
  2772                           ; Name         Instructions Cycles
  2773                           ; simple_byte            4     3 (average)
  2774                           ; direct_byte           11     8 (fixed)
  2775                           ; jumptable            260     6 (fixed)
  2776                           ;	Chosen strategy is simple_byte
  2777     042C  0844               	movf	??_main+1,w
  2778     042D  3A00               	xorlw	0	; case 0
  2779     042E  1903               	skipnz
  2780     042F  2C31               	goto	l3360
  2781     0430  2BEF               	goto	l3080
  2782     0431                     l3360:
  2783                           
  2784                           ; Switch size 1, requested type "simple"
  2785                           ; Number of cases is 10, Range of values is 1 to 10
  2786                           ; switch strategies available:
  2787                           ; Name         Instructions Cycles
  2788                           ; simple_byte           31    16 (average)
  2789                           ; direct_byte           41    11 (fixed)
  2790                           ; jumptable            263     9 (fixed)
  2791                           ;	Chosen strategy is simple_byte
  2792     0431  0843               	movf	??_main,w
  2793     0432  3A01               	xorlw	1	; case 1
  2794     0433  1903               	skipnz
  2795     0434  2C13               	goto	l239
  2796     0435  3A03               	xorlw	3	; case 2
  2797     0436  1903               	skipnz
  2798     0437  2C15               	goto	l241
  2799     0438  3A01               	xorlw	1	; case 3
  2800     0439  1903               	skipnz
  2801     043A  2C17               	goto	l242
  2802     043B  3A07               	xorlw	7	; case 4
  2803     043C  1903               	skipnz
  2804     043D  2C19               	goto	l243
  2805     043E  3A01               	xorlw	1	; case 5
  2806     043F  1903               	skipnz
  2807     0440  2C1B               	goto	l244
  2808     0441  3A03               	xorlw	3	; case 6
  2809     0442  1903               	skipnz
  2810     0443  2C1D               	goto	l245
  2811     0444  3A01               	xorlw	1	; case 7
  2812     0445  1903               	skipnz
  2813     0446  2C1F               	goto	l246
  2814     0447  3A0F               	xorlw	15	; case 8
  2815     0448  1903               	skipnz
  2816     0449  2C21               	goto	l247
  2817     044A  3A01               	xorlw	1	; case 9
  2818     044B  1903               	skipnz
  2819     044C  2C23               	goto	l248
  2820     044D  3A03               	xorlw	3	; case 10
  2821     044E  1903               	skipnz
  2822     044F  2C25               	goto	l249
  2823     0450  2BEF               	goto	l3080
  2824     0451                     l250:	
  2825                           ;main.c: 571:             case RETESTE:
  2826                           
  2827                           
  2828                           ;main.c: 572:             {;main.c: 573:                 estado.reteste = 1;
  2829     0451  17F6               	bsf	_estado,7
  2830     0452                     l3098:
  2831                           
  2832                           ;main.c: 574:                 estagio = TESTE_LIGA;
  2833     0452  3006               	movlw	6
  2834     0453  00B5               	movwf	_estagio
  2835     0454                     l3100:
  2836                           
  2837                           ;main.c: 575:                 comunicacao.endereco = 0x0F;
  2838     0454  300F               	movlw	15
  2839     0455  04F8               	iorwf	_comunicacao,f
  2840     0456                     l3102:
  2841                           
  2842                           ;main.c: 576:                 comunicacao.resposta = 0x0C;
  2843     0456  0878               	movf	_comunicacao,w
  2844     0457  390F               	andlw	-241
  2845     0458  38C0               	iorlw	192
  2846     0459  00F8               	movwf	_comunicacao
  2847     045A                     l3104:
  2848                           
  2849                           ;main.c: 577:                 USART_Write(comunicacao.byte);
  2850     045A  0878               	movf	_comunicacao,w
  2851     045B  120A  118A  271E  120A  118A  	fcall	_USART_Write
  2852                           
  2853                           ;main.c: 578:             };main.c: 579:             break;
  2854     0460  2856               	goto	l104
  2855     0461                     l3106:
  2856                           
  2857                           ;main.c: 582:             {;main.c: 583:                 endereco++;
  2858     0461  3001               	movlw	1
  2859     0462  00C3               	movwf	??_main
  2860     0463  0843               	movf	??_main,w
  2861     0464  07F9               	addwf	_endereco,f
  2862     0465                     l3108:
  2863                           
  2864                           ;main.c: 584:                 if(endereco <= 10)
  2865     0465  300B               	movlw	11
  2866     0466  0279               	subwf	_endereco,w
  2867     0467  1803               	skipnc
  2868     0468  2C6A               	goto	u2851
  2869     0469  2C6B               	goto	u2850
  2870     046A                     u2851:
  2871     046A  2C84               	goto	l252
  2872     046B                     u2850:
  2873     046B                     l3110:
  2874                           
  2875                           ;main.c: 585:                 {;main.c: 586:                     countFailRx = 0;
  2876     046B  01B7               	clrf	_countFailRx
  2877                           
  2878                           ;main.c: 587:                     timeoutRx = 0;
  2879     046C  01BC               	clrf	_timeoutRx
  2880     046D                     l3112:
  2881                           
  2882                           ;main.c: 588:                     USART_RX_Clear_Buffer();
  2883     046D  120A  118A  273E  120A  118A  	fcall	_USART_RX_Clear_Buffer
  2884     0472                     l3114:
  2885                           
  2886                           ;main.c: 589:                     comunicacao.endereco = endereco;
  2887     0472  0878               	movf	_comunicacao,w
  2888     0473  0679               	xorwf	_endereco,w
  2889     0474  39F0               	andlw	-16
  2890     0475  0679               	xorwf	_endereco,w
  2891     0476  00F8               	movwf	_comunicacao
  2892     0477                     l3116:
  2893                           
  2894                           ;main.c: 590:                     comunicacao.resposta = 0x0F;
  2895     0477  30F0               	movlw	240
  2896     0478  04F8               	iorwf	_comunicacao,f
  2897     0479                     l3118:
  2898                           
  2899                           ;main.c: 591:                     USART_Write(comunicacao.byte);
  2900     0479  0878               	movf	_comunicacao,w
  2901     047A  120A  118A  271E  120A  118A  	fcall	_USART_Write
  2902     047F                     l3120:
  2903                           
  2904                           ;main.c: 592:                     estagio = MENSAGEM_RETORNO_PLACAS;
  2905     047F  3010               	movlw	16
  2906     0480  1283               	bcf	3,5	;RP0=0, select bank0
  2907     0481  1303               	bcf	3,6	;RP1=0, select bank0
  2908     0482  00B5               	movwf	_estagio
  2909                           
  2910                           ;main.c: 593:                 }
  2911     0483  2856               	goto	l104
  2912     0484                     l252:	
  2913                           ;main.c: 594:                 else
  2914                           
  2915                           
  2916                           ;main.c: 595:                 {;main.c: 596:                     if(estado.falha == 1)
  2917     0484  1C77               	btfss	_estado+1,0
  2918     0485  2C87               	goto	u2861
  2919     0486  2C88               	goto	u2860
  2920     0487                     u2861:
  2921     0487  2C8B               	goto	l3124
  2922     0488                     u2860:
  2923     0488                     l3122:
  2924                           
  2925                           ;main.c: 597:                         estagio = FALHA;
  2926     0488  3012               	movlw	18
  2927     0489  00B5               	movwf	_estagio
  2928     048A  2856               	goto	l104
  2929     048B                     l3124:
  2930                           
  2931                           ;main.c: 599:                         estagio = OK;
  2932     048B  3013               	movlw	19
  2933     048C  00B5               	movwf	_estagio
  2934     048D  2856               	goto	l104
  2935     048E                     l3126:
  2936                           
  2937                           ;main.c: 605:             {;main.c: 606:                 if(timeoutRx > 80)
  2938     048E  3051               	movlw	81
  2939     048F  023C               	subwf	_timeoutRx,w
  2940     0490  1C03               	skipc
  2941     0491  2C93               	goto	u2871
  2942     0492  2C94               	goto	u2870
  2943     0493                     u2871:
  2944     0493  2CB8               	goto	l3146
  2945     0494                     u2870:
  2946     0494                     l3128:
  2947                           
  2948                           ;main.c: 607:                 {;main.c: 608:                     if(countFailRx < 3)
  2949     0494  3003               	movlw	3
  2950     0495  0237               	subwf	_countFailRx,w
  2951     0496  1803               	skipnc
  2952     0497  2C99               	goto	u2881
  2953     0498  2C9A               	goto	u2880
  2954     0499                     u2881:
  2955     0499  2CB2               	goto	l258
  2956     049A                     u2880:
  2957     049A                     l3130:
  2958                           
  2959                           ;main.c: 609:                     {;main.c: 610:                         countFailRx++;
  2960     049A  3001               	movlw	1
  2961     049B  00C3               	movwf	??_main
  2962     049C  0843               	movf	??_main,w
  2963     049D  07B7               	addwf	_countFailRx,f
  2964     049E                     l3132:
  2965                           
  2966                           ;main.c: 611:                         timeoutRx = 0;
  2967     049E  01BC               	clrf	_timeoutRx
  2968     049F                     l3134:
  2969                           
  2970                           ;main.c: 612:                         USART_RX_Clear_Buffer();
  2971     049F  120A  118A  273E  120A  118A  	fcall	_USART_RX_Clear_Buffer
  2972     04A4                     l3136:
  2973                           
  2974                           ;main.c: 613:                         comunicacao.endereco = endereco;
  2975     04A4  0878               	movf	_comunicacao,w
  2976     04A5  0679               	xorwf	_endereco,w
  2977     04A6  39F0               	andlw	-16
  2978     04A7  0679               	xorwf	_endereco,w
  2979     04A8  00F8               	movwf	_comunicacao
  2980     04A9                     l3138:
  2981                           
  2982                           ;main.c: 614:                         comunicacao.resposta = 0x0F;
  2983     04A9  30F0               	movlw	240
  2984     04AA  04F8               	iorwf	_comunicacao,f
  2985     04AB                     l3140:
  2986                           
  2987                           ;main.c: 615:                         USART_Write(comunicacao.byte);
  2988     04AB  0878               	movf	_comunicacao,w
  2989     04AC  120A  118A  271E  120A  118A  	fcall	_USART_Write
  2990     04B1  2C7F               	goto	l3120
  2991     04B2                     l258:	
  2992                           ;main.c: 618:                     else
  2993                           
  2994                           
  2995                           ;main.c: 619:                     {;main.c: 620:                         estado.falha = 
      +                          1;
  2996     04B2  1477               	bsf	_estado+1,0
  2997     04B3                     l3144:
  2998                           
  2999                           ;main.c: 621:                         addressFail = endereco;
  3000     04B3  0879               	movf	_endereco,w
  3001     04B4  00B6               	movwf	_addressFail
  3002                           
  3003                           ;main.c: 622:                         estagio = VERIFICA_PLACAS;
  3004     04B5  300F               	movlw	15
  3005     04B6  00B5               	movwf	_estagio
  3006     04B7  2856               	goto	l104
  3007     04B8                     l3146:
  3008                           
  3009                           ;main.c: 626:                 {;main.c: 627:                     if(USART_RX_Ready() == 
      +                          1)
  3010     04B8  120A  118A  273A  120A  118A  	fcall	_USART_RX_Ready
  3011     04BD  3A01               	xorlw	1
  3012     04BE  1D03               	skipz
  3013     04BF  2CC1               	goto	u2891
  3014     04C0  2CC2               	goto	u2890
  3015     04C1                     u2891:
  3016     04C1  2E2B               	goto	l151
  3017     04C2                     u2890:
  3018     04C2                     l3148:
  3019                           
  3020                           ;main.c: 628:                     {;main.c: 629:                         comunicacao.byt
      +                          e = USART_Read();
  3021     04C2  120A  118A  2712  120A  118A  	fcall	_USART_Read
  3022     04C7  00F8               	movwf	_comunicacao
  3023     04C8                     l3150:
  3024                           
  3025                           ;main.c: 630:                         if(comunicacao.endereco == endereco)
  3026     04C8  0878               	movf	_comunicacao,w
  3027     04C9  390F               	andlw	15
  3028     04CA  0679               	xorwf	_endereco,w
  3029     04CB  1D03               	skipz
  3030     04CC  2CCE               	goto	u2901
  3031     04CD  2CCF               	goto	u2900
  3032     04CE                     u2901:
  3033     04CE  2D17               	goto	l3164
  3034     04CF                     u2900:
  3035     04CF                     l3152:
  3036                           
  3037                           ;main.c: 631:                         {;main.c: 632:                             if(comu
      +                          nicacao.resposta == 0x02)
  3038     04CF  0E78               	swapf	_comunicacao,w
  3039     04D0  390F               	andlw	15
  3040     04D1  3A02               	xorlw	2
  3041     04D2  1D03               	skipz
  3042     04D3  2CD5               	goto	u2911
  3043     04D4  2CD6               	goto	u2910
  3044     04D5                     u2911:
  3045     04D5  2CDC               	goto	l263
  3046     04D6                     u2910:
  3047     04D6                     l3154:
  3048                           
  3049                           ;main.c: 633:                                 naodesliga++;
  3050     04D6  3001               	movlw	1
  3051     04D7  1283               	bcf	3,5	;RP0=0, select bank0
  3052     04D8  1303               	bcf	3,6	;RP1=0, select bank0
  3053     04D9  00C3               	movwf	??_main
  3054     04DA  0843               	movf	??_main,w
  3055     04DB  07BA               	addwf	_naodesliga,f
  3056     04DC                     l263:
  3057                           
  3058                           ;main.c: 634:                             if(comunicacao.resposta == 0x03)
  3059     04DC  0E78               	swapf	_comunicacao,w
  3060     04DD  390F               	andlw	15
  3061     04DE  3A03               	xorlw	3
  3062     04DF  1D03               	skipz
  3063     04E0  2CE2               	goto	u2921
  3064     04E1  2CE3               	goto	u2920
  3065     04E2                     u2921:
  3066     04E2  2CE9               	goto	l264
  3067     04E3                     u2920:
  3068     04E3                     l3156:
  3069                           
  3070                           ;main.c: 635:                                 naoliga++;
  3071     04E3  3001               	movlw	1
  3072     04E4  1283               	bcf	3,5	;RP0=0, select bank0
  3073     04E5  1303               	bcf	3,6	;RP1=0, select bank0
  3074     04E6  00C3               	movwf	??_main
  3075     04E7  0843               	movf	??_main,w
  3076     04E8  07BB               	addwf	_naoliga,f
  3077     04E9                     l264:
  3078                           
  3079                           ;main.c: 636:                             if(comunicacao.resposta == 0x04)
  3080     04E9  0E78               	swapf	_comunicacao,w
  3081     04EA  390F               	andlw	15
  3082     04EB  3A04               	xorlw	4
  3083     04EC  1D03               	skipz
  3084     04ED  2CEF               	goto	u2931
  3085     04EE  2CF0               	goto	u2930
  3086     04EF                     u2931:
  3087     04EF  2CF6               	goto	l265
  3088     04F0                     u2930:
  3089     04F0                     l3158:
  3090                           
  3091                           ;main.c: 637:                                 sincronismo++;
  3092     04F0  3001               	movlw	1
  3093     04F1  1283               	bcf	3,5	;RP0=0, select bank0
  3094     04F2  1303               	bcf	3,6	;RP1=0, select bank0
  3095     04F3  00C3               	movwf	??_main
  3096     04F4  0843               	movf	??_main,w
  3097     04F5  07B9               	addwf	_sincronismo,f
  3098     04F6                     l265:
  3099                           
  3100                           ;main.c: 638:                             if(comunicacao.resposta == 0x08)
  3101     04F6  0E78               	swapf	_comunicacao,w
  3102     04F7  390F               	andlw	15
  3103     04F8  3A08               	xorlw	8
  3104     04F9  1D03               	skipz
  3105     04FA  2CFC               	goto	u2941
  3106     04FB  2CFD               	goto	u2940
  3107     04FC                     u2941:
  3108     04FC  2D03               	goto	l266
  3109     04FD                     u2940:
  3110     04FD                     l3160:
  3111                           
  3112                           ;main.c: 639:                                 pecaOK++;
  3113     04FD  3001               	movlw	1
  3114     04FE  1283               	bcf	3,5	;RP0=0, select bank0
  3115     04FF  1303               	bcf	3,6	;RP1=0, select bank0
  3116     0500  00C3               	movwf	??_main
  3117     0501  0843               	movf	??_main,w
  3118     0502  07B8               	addwf	_pecaOK,f
  3119     0503                     l266:
  3120                           
  3121                           ;main.c: 640:                             if(comunicacao.resposta == 0x0F)
  3122     0503  0E78               	swapf	_comunicacao,w
  3123     0504  390F               	andlw	15
  3124     0505  3A0F               	xorlw	15
  3125     0506  1D03               	skipz
  3126     0507  2D09               	goto	u2951
  3127     0508  2D0A               	goto	u2950
  3128     0509                     u2951:
  3129     0509  2D10               	goto	l267
  3130     050A                     u2950:
  3131     050A                     l3162:
  3132                           
  3133                           ;main.c: 641:                                 sincronismo++;
  3134     050A  3001               	movlw	1
  3135     050B  1283               	bcf	3,5	;RP0=0, select bank0
  3136     050C  1303               	bcf	3,6	;RP1=0, select bank0
  3137     050D  00C3               	movwf	??_main
  3138     050E  0843               	movf	??_main,w
  3139     050F  07B9               	addwf	_sincronismo,f
  3140     0510                     l267:
  3141                           
  3142                           ;main.c: 642:                             if(comunicacao.resposta != 0x08)
  3143     0510  0E78               	swapf	_comunicacao,w
  3144     0511  390F               	andlw	15
  3145     0512  3A08               	xorlw	8
  3146     0513  1903               	skipnz
  3147     0514  2D16               	goto	u2961
  3148     0515  2D17               	goto	u2960
  3149     0516                     u2961:
  3150     0516  2BBC               	goto	l3054
  3151     0517                     u2960:
  3152     0517                     l3164:
  3153                           
  3154                           ;main.c: 643:                                 estado.falha = 1;
  3155     0517  1477               	bsf	_estado+1,0
  3156     0518  2BBC               	goto	l3054
  3157     0519                     l3168:
  3158                           
  3159                           ;main.c: 654:             {;main.c: 655:                 comunicacao.endereco = 0x0F;
  3160     0519  300F               	movlw	15
  3161     051A  04F8               	iorwf	_comunicacao,f
  3162                           
  3163                           ;main.c: 656:                 comunicacao.resposta = 0x00;
  3164     051B  300F               	movlw	-241
  3165     051C  05F8               	andwf	_comunicacao,f
  3166     051D                     l3170:
  3167                           
  3168                           ;main.c: 657:                 USART_Write(comunicacao.byte);
  3169     051D  0878               	movf	_comunicacao,w
  3170     051E  120A  118A  271E  120A  118A  	fcall	_USART_Write
  3171     0523                     l3172:
  3172                           
  3173                           ;main.c: 658:                 pwm_setado = 0;
  3174     0523  1283               	bcf	3,5	;RP0=0, select bank0
  3175     0524  1303               	bcf	3,6	;RP1=0, select bank0
  3176     0525  01A7               	clrf	_pwm_setado
  3177     0526  01A8               	clrf	_pwm_setado+1
  3178     0527                     l3174:
  3179                           
  3180                           ;main.c: 659:                 PORTAbits.RA1 = 1;
  3181     0527  1485               	bsf	5,1	;volatile
  3182     0528                     l3176:
  3183                           
  3184                           ;main.c: 660:                 PORTAbits.RA0 = 1;
  3185     0528  1405               	bsf	5,0	;volatile
  3186     0529                     l3178:
  3187                           
  3188                           ;main.c: 661:                 timer = 0;
  3189     0529  01AB               	clrf	_timer
  3190     052A  01AC               	clrf	_timer+1
  3191     052B                     l3180:
  3192                           
  3193                           ;main.c: 662:                 estagio = TESTE_FINALIZADO;
  3194     052B  3014               	movlw	20
  3195     052C  00B5               	movwf	_estagio
  3196                           
  3197                           ;main.c: 663:             };main.c: 664:             break;
  3198     052D  2856               	goto	l104
  3199     052E                     l3182:
  3200                           
  3201                           ;main.c: 667:             {;main.c: 668:                 pwm_setado = 0;
  3202     052E  01A7               	clrf	_pwm_setado
  3203     052F  01A8               	clrf	_pwm_setado+1
  3204     0530                     l3184:
  3205                           
  3206                           ;main.c: 669:                 PORTAbits.RA1 = 1;
  3207     0530  1485               	bsf	5,1	;volatile
  3208     0531                     l3186:
  3209                           
  3210                           ;main.c: 670:                 PORTAbits.RA0 = 1;
  3211     0531  1405               	bsf	5,0	;volatile
  3212                           
  3213                           ;main.c: 671:                 timer = 0;
  3214     0532  01AB               	clrf	_timer
  3215     0533  01AC               	clrf	_timer+1
  3216     0534  2D2B               	goto	l3180
  3217     0535                     l3190:
  3218                           
  3219                           ;main.c: 677:             {;main.c: 678:                 pwm_setado = 0;
  3220     0535  01A7               	clrf	_pwm_setado
  3221     0536  01A8               	clrf	_pwm_setado+1
  3222     0537                     l3192:
  3223                           
  3224                           ;main.c: 679:                 PORTAbits.RA3 = 1;
  3225     0537  1585               	bsf	5,3	;volatile
  3226     0538  2D2B               	goto	l3180
  3227     0539                     l3196:
  3228                           
  3229                           ;main.c: 685:             {;main.c: 686:                 if(timer > 2000)
  3230     0539  3007               	movlw	7
  3231     053A  022C               	subwf	_timer+1,w
  3232     053B  30D1               	movlw	209
  3233     053C  1903               	skipnz
  3234     053D  022B               	subwf	_timer,w
  3235     053E  1C03               	skipc
  3236     053F  2D41               	goto	u2971
  3237     0540  2D42               	goto	u2970
  3238     0541                     u2971:
  3239     0541  2DDB               	goto	l3238
  3240     0542                     u2970:
  3241     0542                     l3198:
  3242                           
  3243                           ;main.c: 687:                 {;main.c: 688:                     PORTAbits.RA0 = 0;
  3244     0542  1005               	bcf	5,0	;volatile
  3245     0543                     l3200:
  3246                           
  3247                           ;main.c: 689:                     comunicacao.endereco = 0x0B;
  3248     0543  0878               	movf	_comunicacao,w
  3249     0544  39F0               	andlw	-16
  3250     0545  380B               	iorlw	11
  3251     0546  00F8               	movwf	_comunicacao
  3252                           
  3253                           ;main.c: 690:                     comunicacao.resposta = naoliga;
  3254     0547  083B               	movf	_naoliga,w
  3255     0548  00C3               	movwf	??_main
  3256     0549  0EC3               	swapf	??_main,f
  3257     054A  0878               	movf	_comunicacao,w
  3258     054B  0643               	xorwf	??_main,w
  3259     054C  390F               	andlw	-241
  3260     054D  0643               	xorwf	??_main,w
  3261     054E  00F8               	movwf	_comunicacao
  3262     054F                     l3202:
  3263                           
  3264                           ;main.c: 691:                     USART_Write(comunicacao.byte);
  3265     054F  0878               	movf	_comunicacao,w
  3266     0550  120A  118A  271E  120A  118A  	fcall	_USART_Write
  3267     0555                     l3204:
  3268                           
  3269                           ;main.c: 692:                     comunicacao.endereco = 0x0C;
  3270     0555  0878               	movf	_comunicacao,w
  3271     0556  39F0               	andlw	-16
  3272     0557  380C               	iorlw	12
  3273     0558  00F8               	movwf	_comunicacao
  3274     0559                     l3206:
  3275                           
  3276                           ;main.c: 693:                     comunicacao.resposta = naodesliga;
  3277     0559  1283               	bcf	3,5	;RP0=0, select bank0
  3278     055A  1303               	bcf	3,6	;RP1=0, select bank0
  3279     055B  083A               	movf	_naodesliga,w
  3280     055C  00C3               	movwf	??_main
  3281     055D  0EC3               	swapf	??_main,f
  3282     055E  0878               	movf	_comunicacao,w
  3283     055F  0643               	xorwf	??_main,w
  3284     0560  390F               	andlw	-241
  3285     0561  0643               	xorwf	??_main,w
  3286     0562  00F8               	movwf	_comunicacao
  3287     0563                     l3208:
  3288                           
  3289                           ;main.c: 694:                     USART_Write(comunicacao.byte);
  3290     0563  0878               	movf	_comunicacao,w
  3291     0564  120A  118A  271E  120A  118A  	fcall	_USART_Write
  3292                           
  3293                           ;main.c: 695:                     comunicacao.endereco = 0x0D;
  3294     0569  0878               	movf	_comunicacao,w
  3295     056A  39F0               	andlw	-16
  3296     056B  380D               	iorlw	13
  3297     056C  00F8               	movwf	_comunicacao
  3298                           
  3299                           ;main.c: 696:                     comunicacao.resposta = sincronismo;
  3300     056D  1283               	bcf	3,5	;RP0=0, select bank0
  3301     056E  1303               	bcf	3,6	;RP1=0, select bank0
  3302     056F  0839               	movf	_sincronismo,w
  3303     0570  00C3               	movwf	??_main
  3304     0571  0EC3               	swapf	??_main,f
  3305     0572  0878               	movf	_comunicacao,w
  3306     0573  0643               	xorwf	??_main,w
  3307     0574  390F               	andlw	-241
  3308     0575  0643               	xorwf	??_main,w
  3309     0576  00F8               	movwf	_comunicacao
  3310     0577                     l3210:
  3311                           
  3312                           ;main.c: 697:                     USART_Write(comunicacao.byte);
  3313     0577  0878               	movf	_comunicacao,w
  3314     0578  120A  118A  271E  120A  118A  	fcall	_USART_Write
  3315     057D                     l3212:
  3316                           
  3317                           ;main.c: 698:                     comunicacao.endereco = 0x0E;
  3318     057D  0878               	movf	_comunicacao,w
  3319     057E  39F0               	andlw	-16
  3320     057F  380E               	iorlw	14
  3321     0580  00F8               	movwf	_comunicacao
  3322     0581                     l3214:
  3323                           
  3324                           ;main.c: 699:                     comunicacao.resposta = pecaOK;
  3325     0581  1283               	bcf	3,5	;RP0=0, select bank0
  3326     0582  1303               	bcf	3,6	;RP1=0, select bank0
  3327     0583  0838               	movf	_pecaOK,w
  3328     0584  00C3               	movwf	??_main
  3329     0585  0EC3               	swapf	??_main,f
  3330     0586  0878               	movf	_comunicacao,w
  3331     0587  0643               	xorwf	??_main,w
  3332     0588  390F               	andlw	-241
  3333     0589  0643               	xorwf	??_main,w
  3334     058A  00F8               	movwf	_comunicacao
  3335     058B                     l3216:
  3336                           
  3337                           ;main.c: 700:                     USART_Write(comunicacao.byte);
  3338     058B  0878               	movf	_comunicacao,w
  3339     058C  120A  118A  271E  120A  118A  	fcall	_USART_Write
  3340                           
  3341                           ;main.c: 701:                     comunicacao.endereco = 0x00;
  3342     0591  30F0               	movlw	-16
  3343     0592  05F8               	andwf	_comunicacao,f
  3344     0593                     l3218:
  3345                           
  3346                           ;main.c: 702:                     if(estado.chavecopo == 1)
  3347     0593  1EF6               	btfss	_estado,5
  3348     0594  2D96               	goto	u2981
  3349     0595  2D97               	goto	u2980
  3350     0596                     u2981:
  3351     0596  2D9C               	goto	l3222
  3352     0597                     u2980:
  3353     0597                     l3220:
  3354                           
  3355                           ;main.c: 703:                         comunicacao.resposta = 1;
  3356     0597  0878               	movf	_comunicacao,w
  3357     0598  390F               	andlw	-241
  3358     0599  3810               	iorlw	16
  3359     059A  00F8               	movwf	_comunicacao
  3360     059B  2D9E               	goto	l3224
  3361     059C                     l3222:
  3362                           
  3363                           ;main.c: 705:                         comunicacao.resposta = 0;
  3364     059C  300F               	movlw	-241
  3365     059D  05F8               	andwf	_comunicacao,f
  3366     059E                     l3224:
  3367                           
  3368                           ;main.c: 706:                     if(estado.chaveNF == 1)
  3369     059E  1DF6               	btfss	_estado,3
  3370     059F  2DA1               	goto	u2991
  3371     05A0  2DA2               	goto	u2990
  3372     05A1                     u2991:
  3373     05A1  2DB0               	goto	l277
  3374     05A2                     u2990:
  3375     05A2                     l3226:
  3376                           
  3377                           ;main.c: 707:                         comunicacao.resposta += 0x02;
  3378     05A2  0E78               	swapf	_comunicacao,w
  3379     05A3  390F               	andlw	15
  3380     05A4  1283               	bcf	3,5	;RP0=0, select bank0
  3381     05A5  1303               	bcf	3,6	;RP1=0, select bank0
  3382     05A6  00C3               	movwf	??_main
  3383     05A7  3002               	movlw	2
  3384     05A8  07C3               	addwf	??_main,f
  3385     05A9  0EC3               	swapf	??_main,f
  3386     05AA  0878               	movf	_comunicacao,w
  3387     05AB  0643               	xorwf	??_main,w
  3388     05AC  390F               	andlw	-241
  3389     05AD  0643               	xorwf	??_main,w
  3390     05AE  00F8               	movwf	_comunicacao
  3391     05AF  2DCF               	goto	l3232
  3392     05B0                     l277:	
  3393                           ;main.c: 708:                     else
  3394                           
  3395                           
  3396                           ;main.c: 709:                     {;main.c: 710:                         if(estado.chave
      +                          NA == 1)
  3397     05B0  1E76               	btfss	_estado,4
  3398     05B1  2DB3               	goto	u3001
  3399     05B2  2DB4               	goto	u3000
  3400     05B3                     u3001:
  3401     05B3  2DC2               	goto	l3230
  3402     05B4                     u3000:
  3403     05B4                     l3228:
  3404                           
  3405                           ;main.c: 711:                             comunicacao.resposta += 0x08;
  3406     05B4  0E78               	swapf	_comunicacao,w
  3407     05B5  390F               	andlw	15
  3408     05B6  1283               	bcf	3,5	;RP0=0, select bank0
  3409     05B7  1303               	bcf	3,6	;RP1=0, select bank0
  3410     05B8  00C3               	movwf	??_main
  3411     05B9  3008               	movlw	8
  3412     05BA  07C3               	addwf	??_main,f
  3413     05BB  0EC3               	swapf	??_main,f
  3414     05BC  0878               	movf	_comunicacao,w
  3415     05BD  0643               	xorwf	??_main,w
  3416     05BE  390F               	andlw	-241
  3417     05BF  0643               	xorwf	??_main,w
  3418     05C0  00F8               	movwf	_comunicacao
  3419     05C1  2DCF               	goto	l3232
  3420     05C2                     l3230:
  3421                           
  3422                           ;main.c: 713:                             comunicacao.resposta += 0x04;
  3423     05C2  0E78               	swapf	_comunicacao,w
  3424     05C3  390F               	andlw	15
  3425     05C4  1283               	bcf	3,5	;RP0=0, select bank0
  3426     05C5  1303               	bcf	3,6	;RP1=0, select bank0
  3427     05C6  00C3               	movwf	??_main
  3428     05C7  3004               	movlw	4
  3429     05C8  07C3               	addwf	??_main,f
  3430     05C9  0EC3               	swapf	??_main,f
  3431     05CA  0878               	movf	_comunicacao,w
  3432     05CB  0643               	xorwf	??_main,w
  3433     05CC  390F               	andlw	-241
  3434     05CD  0643               	xorwf	??_main,w
  3435     05CE  00F8               	movwf	_comunicacao
  3436     05CF                     l3232:
  3437                           
  3438                           ;main.c: 715:                     USART_Write(comunicacao.byte);
  3439     05CF  0878               	movf	_comunicacao,w
  3440     05D0  120A  118A  271E  120A  118A  	fcall	_USART_Write
  3441     05D5                     l3234:
  3442                           
  3443                           ;main.c: 716:                     timer = 0;
  3444     05D5  1283               	bcf	3,5	;RP0=0, select bank0
  3445     05D6  1303               	bcf	3,6	;RP1=0, select bank0
  3446     05D7  01AB               	clrf	_timer
  3447     05D8  01AC               	clrf	_timer+1
  3448     05D9                     l3236:
  3449                           
  3450                           ;main.c: 717:                     estagio = TESTE_BOTOES;
  3451     05D9  01B5               	clrf	_estagio
  3452     05DA  0AB5               	incf	_estagio,f
  3453     05DB                     l3238:
  3454                           
  3455                           ;main.c: 719:                 PORTAbits.RA2 = 0;
  3456     05DB  1105               	bcf	5,2	;volatile
  3457     05DC                     l3240:
  3458                           
  3459                           ;main.c: 720:                 PORTCbits.RC5 = 0;
  3460     05DC  1287               	bcf	7,5	;volatile
  3461     05DD                     l3242:
  3462                           
  3463                           ;main.c: 721:                 PORTAbits.RA5 = 0;
  3464     05DD  1285               	bcf	5,5	;volatile
  3465     05DE                     l3244:
  3466                           
  3467                           ;main.c: 722:                 estado.testando = 0;
  3468     05DE  1376               	bcf	_estado,6
  3469                           
  3470                           ;main.c: 723:             };main.c: 724:             break;
  3471     05DF  2856               	goto	l104
  3472     05E0                     l3248:
  3473     05E0  1283               	bcf	3,5	;RP0=0, select bank0
  3474     05E1  1303               	bcf	3,6	;RP1=0, select bank0
  3475     05E2  0835               	movf	_estagio,w
  3476     05E3  00C3               	movwf	??_main
  3477     05E4  01C4               	clrf	??_main+1
  3478                           
  3479                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3480                           ; Switch size 1, requested type "simple"
  3481                           ; Number of cases is 1, Range of values is 0 to 0
  3482                           ; switch strategies available:
  3483                           ; Name         Instructions Cycles
  3484                           ; simple_byte            4     3 (average)
  3485                           ; direct_byte           11     8 (fixed)
  3486                           ; jumptable            260     6 (fixed)
  3487                           ;	Chosen strategy is simple_byte
  3488     05E5  0844               	movf	??_main+1,w
  3489     05E6  3A00               	xorlw	0	; case 0
  3490     05E7  1903               	skipnz
  3491     05E8  2DEA               	goto	l3362
  3492     05E9  2856               	goto	l104
  3493     05EA                     l3362:
  3494                           
  3495                           ; Switch size 1, requested type "simple"
  3496                           ; Number of cases is 21, Range of values is 0 to 20
  3497                           ; switch strategies available:
  3498                           ; Name         Instructions Cycles
  3499                           ; simple_byte           64    33 (average)
  3500                           ; direct_byte           71     8 (fixed)
  3501                           ; jumptable            260     6 (fixed)
  3502                           ;	Chosen strategy is simple_byte
  3503     05EA  0843               	movf	??_main,w
  3504     05EB  3A00               	xorlw	0	; case 0
  3505     05EC  1903               	skipnz
  3506     05ED  2984               	goto	l2860
  3507     05EE  3A01               	xorlw	1	; case 1
  3508     05EF  1903               	skipnz
  3509     05F0  29AE               	goto	l152
  3510     05F1  3A03               	xorlw	3	; case 2
  3511     05F2  1903               	skipnz
  3512     05F3  29EF               	goto	l161
  3513     05F4  3A01               	xorlw	1	; case 3
  3514     05F5  1903               	skipnz
  3515     05F6  2A03               	goto	l2904
  3516     05F7  3A07               	xorlw	7	; case 4
  3517     05F8  1903               	skipnz
  3518     05F9  2A18               	goto	l166
  3519     05FA  3A01               	xorlw	1	; case 5
  3520     05FB  1903               	skipnz
  3521     05FC  2A5C               	goto	l2936
  3522     05FD  3A03               	xorlw	3	; case 6
  3523     05FE  1903               	skipnz
  3524     05FF  2AB1               	goto	l184
  3525     0600  3A01               	xorlw	1	; case 7
  3526     0601  1903               	skipnz
  3527     0602  2AC5               	goto	l2976
  3528     0603  3A0F               	xorlw	15	; case 8
  3529     0604  1903               	skipnz
  3530     0605  2AE8               	goto	l2988
  3531     0606  3A01               	xorlw	1	; case 9
  3532     0607  1903               	skipnz
  3533     0608  2B0C               	goto	l3006
  3534     0609  3A03               	xorlw	3	; case 10
  3535     060A  1903               	skipnz
  3536     060B  2B70               	goto	l214
  3537     060C  3A01               	xorlw	1	; case 11
  3538     060D  1903               	skipnz
  3539     060E  2B97               	goto	l3042
  3540     060F  3A07               	xorlw	7	; case 12
  3541     0610  1903               	skipnz
  3542     0611  2BC7               	goto	l3060
  3543     0612  3A01               	xorlw	1	; case 13
  3544     0613  1903               	skipnz
  3545     0614  2BE9               	goto	l3078
  3546     0615  3A03               	xorlw	3	; case 14
  3547     0616  1903               	skipnz
  3548     0617  2C51               	goto	l250
  3549     0618  3A01               	xorlw	1	; case 15
  3550     0619  1903               	skipnz
  3551     061A  2C61               	goto	l3106
  3552     061B  3A1F               	xorlw	31	; case 16
  3553     061C  1903               	skipnz
  3554     061D  2C8E               	goto	l3126
  3555     061E  3A01               	xorlw	1	; case 17
  3556     061F  1903               	skipnz
  3557     0620  2D19               	goto	l3168
  3558     0621  3A03               	xorlw	3	; case 18
  3559     0622  1903               	skipnz
  3560     0623  2D2E               	goto	l3182
  3561     0624  3A01               	xorlw	1	; case 19
  3562     0625  1903               	skipnz
  3563     0626  2D35               	goto	l3190
  3564     0627  3A07               	xorlw	7	; case 20
  3565     0628  1903               	skipnz
  3566     0629  2D39               	goto	l3196
  3567     062A  2856               	goto	l104
  3568     062B                     l151:
  3569     062B  2856               	goto	l104
  3570     062C  120A  118A  280E   	ljmp	start
  3571     062F                     __end_of_main:
  3572                           
  3573                           	psect	text1
  3574     071E                     __ptext1:	
  3575 ;; *************** function _USART_Write *****************
  3576 ;; Defined at:
  3577 ;;		line 51 in file "usart.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;  data            1    wreg     unsigned char 
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;  data            1    4[COMMON] unsigned char 
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  1    wreg      void 
  3584 ;; Registers used:
  3585 ;;		wreg
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3591 ;;      Params:         0       0       0       0       0
  3592 ;;      Locals:         1       0       0       0       0
  3593 ;;      Temps:          0       0       0       0       0
  3594 ;;      Totals:         1       0       0       0       0
  3595 ;;Total ram usage:        1 bytes
  3596 ;; Hardware stack levels used: 1
  3597 ;; Hardware stack levels required when called: 2
  3598 ;; This function calls:
  3599 ;;		Nothing
  3600 ;; This function is called by:
  3601 ;;		_main
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605     071E                     _USART_Write:	
  3606                           ;psect for function _USART_Write
  3607                           
  3608                           
  3609                           ;incstack = 0
  3610                           ; Regs used in _USART_Write: [wreg]
  3611                           ;USART_Write@data stored from wreg
  3612     071E  00F4               	movwf	USART_Write@data
  3613     071F                     l1938:
  3614     071F                     l486:	
  3615                           ;usart.c: 54:     {;usart.c: 55:     }
  3616                           
  3617                           
  3618                           ;usart.c: 53:     while(PIR1bits.TXIF == 0)
  3619     071F  1283               	bcf	3,5	;RP0=0, select bank0
  3620     0720  1303               	bcf	3,6	;RP1=0, select bank0
  3621     0721  1E0C               	btfss	12,4	;volatile
  3622     0722  2F24               	goto	u1091
  3623     0723  2F25               	goto	u1090
  3624     0724                     u1091:
  3625     0724  2F1F               	goto	l486
  3626     0725                     u1090:
  3627     0725                     l1940:
  3628                           
  3629                           ;usart.c: 56:     TXREG = data;
  3630     0725  0874               	movf	USART_Write@data,w
  3631     0726  0099               	movwf	25	;volatile
  3632     0727                     l489:
  3633     0727  0008               	return
  3634     0728                     __end_of_USART_Write:
  3635                           
  3636                           	psect	text2
  3637     0712                     __ptext2:	
  3638 ;; *************** function _USART_Read *****************
  3639 ;; Defined at:
  3640 ;;		line 42 in file "usart.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;		None
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  data            1    4[COMMON] unsigned char 
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  1    wreg      unsigned char 
  3647 ;; Registers used:
  3648 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3654 ;;      Params:         0       0       0       0       0
  3655 ;;      Locals:         1       0       0       0       0
  3656 ;;      Temps:          0       0       0       0       0
  3657 ;;      Totals:         1       0       0       0       0
  3658 ;;Total ram usage:        1 bytes
  3659 ;; Hardware stack levels used: 1
  3660 ;; Hardware stack levels required when called: 2
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_main
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668     0712                     _USART_Read:	
  3669                           ;psect for function _USART_Read
  3670                           
  3671     0712                     l1948:	
  3672                           ;incstack = 0
  3673                           ; Regs used in _USART_Read: [wreg-fsr0h+status,2+status,0]
  3674                           
  3675                           
  3676                           ;usart.c: 44:     unsigned char data;;usart.c: 46:     rxCount--;
  3677     0712  3001               	movlw	1
  3678     0713  1283               	bcf	3,5	;RP0=0, select bank0
  3679     0714  1303               	bcf	3,6	;RP1=0, select bank0
  3680     0715  02B1               	subwf	_rxCount,f	;volatile
  3681     0716                     l1950:
  3682                           
  3683                           ;usart.c: 47:     data = rxBuffer[rxCount];
  3684     0716  0831               	movf	_rxCount,w
  3685     0717  3E20               	addlw	(low (_rxBuffer| 0))& (0+255)
  3686     0718  0084               	movwf	4
  3687     0719  1383               	bcf	3,7	;select IRP bank0
  3688     071A  0800               	movf	0,w
  3689     071B  00F4               	movwf	USART_Read@data
  3690     071C                     l1952:
  3691                           
  3692                           ;usart.c: 48:     return data;
  3693     071C  0874               	movf	USART_Read@data,w
  3694     071D                     l483:
  3695     071D  0008               	return
  3696     071E                     __end_of_USART_Read:
  3697                           
  3698                           	psect	text3
  3699     073A                     __ptext3:	
  3700 ;; *************** function _USART_RX_Ready *****************
  3701 ;; Defined at:
  3702 ;;		line 37 in file "usart.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;		None
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;		None
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  1    wreg      unsigned char 
  3709 ;; Registers used:
  3710 ;;		wreg
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3716 ;;      Params:         0       0       0       0       0
  3717 ;;      Locals:         0       0       0       0       0
  3718 ;;      Temps:          0       0       0       0       0
  3719 ;;      Totals:         0       0       0       0       0
  3720 ;;Total ram usage:        0 bytes
  3721 ;; Hardware stack levels used: 1
  3722 ;; Hardware stack levels required when called: 2
  3723 ;; This function calls:
  3724 ;;		Nothing
  3725 ;; This function is called by:
  3726 ;;		_main
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730     073A                     _USART_RX_Ready:	
  3731                           ;psect for function _USART_RX_Ready
  3732                           
  3733     073A                     l1942:	
  3734                           ;incstack = 0
  3735                           ; Regs used in _USART_RX_Ready: [wreg]
  3736                           
  3737                           
  3738                           ;usart.c: 39:     return rxCount;
  3739     073A  1283               	bcf	3,5	;RP0=0, select bank0
  3740     073B  1303               	bcf	3,6	;RP1=0, select bank0
  3741     073C  0831               	movf	_rxCount,w	;volatile
  3742     073D                     l480:
  3743     073D  0008               	return
  3744     073E                     __end_of_USART_RX_Ready:
  3745                           
  3746                           	psect	text4
  3747     073E                     __ptext4:	
  3748 ;; *************** function _USART_RX_Clear_Buffer *****************
  3749 ;; Defined at:
  3750 ;;		line 59 in file "usart.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;		None
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;		None
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  1    wreg      void 
  3757 ;; Registers used:
  3758 ;;		status,2
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3764 ;;      Params:         0       0       0       0       0
  3765 ;;      Locals:         0       0       0       0       0
  3766 ;;      Temps:          0       0       0       0       0
  3767 ;;      Totals:         0       0       0       0       0
  3768 ;;Total ram usage:        0 bytes
  3769 ;; Hardware stack levels used: 1
  3770 ;; Hardware stack levels required when called: 2
  3771 ;; This function calls:
  3772 ;;		Nothing
  3773 ;; This function is called by:
  3774 ;;		_main
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778     073E                     _USART_RX_Clear_Buffer:	
  3779                           ;psect for function _USART_RX_Clear_Buffer
  3780                           
  3781     073E                     l1946:	
  3782                           ;incstack = 0
  3783                           ; Regs used in _USART_RX_Clear_Buffer: [status,2]
  3784                           
  3785                           
  3786                           ;usart.c: 61:     rxCount = 0;
  3787     073E  1283               	bcf	3,5	;RP0=0, select bank0
  3788     073F  1303               	bcf	3,6	;RP1=0, select bank0
  3789     0740  01B1               	clrf	_rxCount	;volatile
  3790     0741                     l492:
  3791     0741  0008               	return
  3792     0742                     __end_of_USART_RX_Clear_Buffer:
  3793                           
  3794                           	psect	text5
  3795     0701                     __ptext5:	
  3796 ;; *************** function _USART_Initialize *****************
  3797 ;; Defined at:
  3798 ;;		line 9 in file "usart.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;		None
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;		None
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  1    wreg      void 
  3805 ;; Registers used:
  3806 ;;		wreg, status,2
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3812 ;;      Params:         0       0       0       0       0
  3813 ;;      Locals:         0       0       0       0       0
  3814 ;;      Temps:          0       0       0       0       0
  3815 ;;      Totals:         0       0       0       0       0
  3816 ;;Total ram usage:        0 bytes
  3817 ;; Hardware stack levels used: 1
  3818 ;; Hardware stack levels required when called: 2
  3819 ;; This function calls:
  3820 ;;		Nothing
  3821 ;; This function is called by:
  3822 ;;		_main
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826     0701                     _USART_Initialize:	
  3827                           ;psect for function _USART_Initialize
  3828                           
  3829     0701                     l1932:	
  3830                           ;incstack = 0
  3831                           ; Regs used in _USART_Initialize: [wreg+status,2]
  3832                           
  3833                           
  3834                           ;usart.c: 11:     RCSTA = 0b10010000;
  3835     0701  3090               	movlw	144
  3836     0702  1283               	bcf	3,5	;RP0=0, select bank0
  3837     0703  1303               	bcf	3,6	;RP1=0, select bank0
  3838     0704  0098               	movwf	24	;volatile
  3839                           
  3840                           ;usart.c: 12:     TXSTA = 0b00100000;
  3841     0705  3020               	movlw	32
  3842     0706  1683               	bsf	3,5	;RP0=1, select bank1
  3843     0707  1303               	bcf	3,6	;RP1=0, select bank1
  3844     0708  0098               	movwf	24	;volatile
  3845                           
  3846                           ;usart.c: 15:     SPBRG = 0x81;
  3847     0709  3081               	movlw	129
  3848     070A  0099               	movwf	25	;volatile
  3849     070B                     l1934:
  3850                           
  3851                           ;usart.c: 17:     rxCount = 0;
  3852     070B  1283               	bcf	3,5	;RP0=0, select bank0
  3853     070C  1303               	bcf	3,6	;RP1=0, select bank0
  3854     070D  01B1               	clrf	_rxCount	;volatile
  3855     070E                     l1936:
  3856                           
  3857                           ;usart.c: 19:     PIE1bits.RCIE = 1;
  3858     070E  1683               	bsf	3,5	;RP0=1, select bank1
  3859     070F  1303               	bcf	3,6	;RP1=0, select bank1
  3860     0710  168C               	bsf	12,5	;volatile
  3861     0711                     l472:
  3862     0711  0008               	return
  3863     0712                     __end_of_USART_Initialize:
  3864                           
  3865                           	psect	text6
  3866     0728                     __ptext6:	
  3867 ;; *************** function _TMR0_Initialize *****************
  3868 ;; Defined at:
  3869 ;;		line 5 in file "tmr0.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;		None
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;		None
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  1    wreg      void 
  3876 ;; Registers used:
  3877 ;;		wreg
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3883 ;;      Params:         0       0       0       0       0
  3884 ;;      Locals:         0       0       0       0       0
  3885 ;;      Temps:          0       0       0       0       0
  3886 ;;      Totals:         0       0       0       0       0
  3887 ;;Total ram usage:        0 bytes
  3888 ;; Hardware stack levels used: 1
  3889 ;; Hardware stack levels required when called: 2
  3890 ;; This function calls:
  3891 ;;		Nothing
  3892 ;; This function is called by:
  3893 ;;		_main
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897     0728                     _TMR0_Initialize:	
  3898                           ;psect for function _TMR0_Initialize
  3899                           
  3900     0728                     l1928:	
  3901                           ;incstack = 0
  3902                           ; Regs used in _TMR0_Initialize: [wreg]
  3903                           
  3904                           
  3905                           ;tmr0.c: 8:     OPTION_REG = 0b00000100;
  3906     0728  3004               	movlw	4
  3907     0729  1683               	bsf	3,5	;RP0=1, select bank1
  3908     072A  1303               	bcf	3,6	;RP1=0, select bank1
  3909     072B  0081               	movwf	1	;volatile
  3910                           
  3911                           ;tmr0.c: 9:     TMR0 = 0x64;
  3912     072C  3064               	movlw	100
  3913     072D  1283               	bcf	3,5	;RP0=0, select bank0
  3914     072E  1303               	bcf	3,6	;RP1=0, select bank0
  3915     072F  0081               	movwf	1	;volatile
  3916     0730                     l1930:
  3917                           
  3918                           ;tmr0.c: 11:     INTCONbits.T0IE = 1;
  3919     0730  168B               	bsf	11,5	;volatile
  3920     0731                     l400:
  3921     0731  0008               	return
  3922     0732                     __end_of_TMR0_Initialize:
  3923                           
  3924                           	psect	text7
  3925     06EF                     __ptext7:	
  3926 ;; *************** function _PinManager_Initialize *****************
  3927 ;; Defined at:
  3928 ;;		line 3 in file "pin_manager.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;		None
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;		None
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, status,2
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3942 ;;      Params:         0       0       0       0       0
  3943 ;;      Locals:         0       0       0       0       0
  3944 ;;      Temps:          0       0       0       0       0
  3945 ;;      Totals:         0       0       0       0       0
  3946 ;;Total ram usage:        0 bytes
  3947 ;; Hardware stack levels used: 1
  3948 ;; Hardware stack levels required when called: 2
  3949 ;; This function calls:
  3950 ;;		Nothing
  3951 ;; This function is called by:
  3952 ;;		_main
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956     06EF                     _PinManager_Initialize:	
  3957                           ;psect for function _PinManager_Initialize
  3958                           
  3959     06EF                     l1912:	
  3960                           ;incstack = 0
  3961                           ; Regs used in _PinManager_Initialize: [wreg+status,2]
  3962                           
  3963                           
  3964                           ;pin_manager.c: 5:     PORTA = 0b00000000;
  3965     06EF  1283               	bcf	3,5	;RP0=0, select bank0
  3966     06F0  1303               	bcf	3,6	;RP1=0, select bank0
  3967     06F1  0185               	clrf	5	;volatile
  3968                           
  3969                           ;pin_manager.c: 6:     PORTB = 0b00000000;
  3970     06F2  0186               	clrf	6	;volatile
  3971                           
  3972                           ;pin_manager.c: 7:     PORTC = 0b00000000;
  3973     06F3  0187               	clrf	7	;volatile
  3974     06F4                     l1914:
  3975                           
  3976                           ;pin_manager.c: 9:     TRISA = 0b11010000;
  3977     06F4  30D0               	movlw	208
  3978     06F5  1683               	bsf	3,5	;RP0=1, select bank1
  3979     06F6  1303               	bcf	3,6	;RP1=0, select bank1
  3980     06F7  0085               	movwf	5	;volatile
  3981     06F8                     l1916:
  3982                           
  3983                           ;pin_manager.c: 10:     TRISB = 0b11111111;
  3984     06F8  30FF               	movlw	255
  3985     06F9  0086               	movwf	6	;volatile
  3986     06FA                     l1918:
  3987                           
  3988                           ;pin_manager.c: 11:     TRISC = 0b10010000;
  3989     06FA  3090               	movlw	144
  3990     06FB  0087               	movwf	7	;volatile
  3991     06FC                     l1920:
  3992                           
  3993                           ;pin_manager.c: 13:     ADCON1 = 0b00000110;
  3994     06FC  3006               	movlw	6
  3995     06FD  009F               	movwf	31	;volatile
  3996     06FE                     l1922:
  3997                           
  3998                           ;pin_manager.c: 15:     OPTION_REG = 0b00000100;
  3999     06FE  3004               	movlw	4
  4000     06FF  0081               	movwf	1	;volatile
  4001     0700                     l347:
  4002     0700  0008               	return
  4003     0701                     __end_of_PinManager_Initialize:
  4004                           
  4005                           	psect	text8
  4006     06DA                     __ptext8:	
  4007 ;; *************** function _PWM_Initialize *****************
  4008 ;; Defined at:
  4009 ;;		line 3 in file "pwm.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;		None
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;		None
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  1    wreg      void 
  4016 ;; Registers used:
  4017 ;;		wreg, status,2, status,0, pclath, cstack
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4023 ;;      Params:         0       0       0       0       0
  4024 ;;      Locals:         0       0       0       0       0
  4025 ;;      Temps:          0       0       0       0       0
  4026 ;;      Totals:         0       0       0       0       0
  4027 ;;Total ram usage:        0 bytes
  4028 ;; Hardware stack levels used: 1
  4029 ;; Hardware stack levels required when called: 3
  4030 ;; This function calls:
  4031 ;;		_PWM_LoadDutyValue
  4032 ;; This function is called by:
  4033 ;;		_main
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037     06DA                     _PWM_Initialize:	
  4038                           ;psect for function _PWM_Initialize
  4039                           
  4040     06DA                     l2680:	
  4041                           ;incstack = 0
  4042                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4043                           
  4044                           
  4045                           ;pwm.c: 5:  CCP1CON = 0b00001111;
  4046     06DA  300F               	movlw	15
  4047     06DB  1283               	bcf	3,5	;RP0=0, select bank0
  4048     06DC  1303               	bcf	3,6	;RP1=0, select bank0
  4049     06DD  0097               	movwf	23	;volatile
  4050                           
  4051                           ;pwm.c: 8:     PR2 = 0xFF;
  4052     06DE  30FF               	movlw	255
  4053     06DF  1683               	bsf	3,5	;RP0=1, select bank1
  4054     06E0  1303               	bcf	3,6	;RP1=0, select bank1
  4055     06E1  0092               	movwf	18	;volatile
  4056                           
  4057                           ;pwm.c: 9:     T2CON = 0b00000111;
  4058     06E2  3007               	movlw	7
  4059     06E3  1283               	bcf	3,5	;RP0=0, select bank0
  4060     06E4  1303               	bcf	3,6	;RP1=0, select bank0
  4061     06E5  0092               	movwf	18	;volatile
  4062     06E6                     l2682:
  4063                           
  4064                           ;pwm.c: 11:     PWM_LoadDutyValue(0);
  4065     06E6  3000               	movlw	0
  4066     06E7  00F4               	movwf	PWM_LoadDutyValue@dutyValue
  4067     06E8  00F5               	movwf	PWM_LoadDutyValue@dutyValue+1
  4068     06E9  120A  118A  26BF  120A  118A  	fcall	_PWM_LoadDutyValue
  4069     06EE                     l505:
  4070     06EE  0008               	return
  4071     06EF                     __end_of_PWM_Initialize:
  4072                           
  4073                           	psect	text9
  4074     06BF                     __ptext9:	
  4075 ;; *************** function _PWM_LoadDutyValue *****************
  4076 ;; Defined at:
  4077 ;;		line 14 in file "pwm.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;  dutyValue       2    4[COMMON] unsigned int 
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;		None
  4082 ;; Return value:  Size  Location     Type
  4083 ;;                  1    wreg      void 
  4084 ;; Registers used:
  4085 ;;		wreg, status,2, status,0
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4091 ;;      Params:         2       0       0       0       0
  4092 ;;      Locals:         0       0       0       0       0
  4093 ;;      Temps:          0       2       0       0       0
  4094 ;;      Totals:         2       2       0       0       0
  4095 ;;Total ram usage:        4 bytes
  4096 ;; Hardware stack levels used: 1
  4097 ;; Hardware stack levels required when called: 2
  4098 ;; This function calls:
  4099 ;;		Nothing
  4100 ;; This function is called by:
  4101 ;;		_main
  4102 ;;		_PWM_Initialize
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           
  4106     06BF                     _PWM_LoadDutyValue:	
  4107                           ;psect for function _PWM_LoadDutyValue
  4108                           
  4109     06BF                     l2678:	
  4110                           ;incstack = 0
  4111                           ; Regs used in _PWM_LoadDutyValue: [wreg+status,2+status,0]
  4112                           
  4113                           
  4114                           ;pwm.c: 14: void PWM_LoadDutyValue(unsigned int dutyValue);pwm.c: 15: {;pwm.c: 16:     C
      +                          CPR1L = (unsigned char)(dutyValue >> 2);
  4115     06BF  0875               	movf	PWM_LoadDutyValue@dutyValue+1,w
  4116     06C0  1283               	bcf	3,5	;RP0=0, select bank0
  4117     06C1  1303               	bcf	3,6	;RP1=0, select bank0
  4118     06C2  00C2               	movwf	??_PWM_LoadDutyValue+1
  4119     06C3  0874               	movf	PWM_LoadDutyValue@dutyValue,w
  4120     06C4  00C1               	movwf	??_PWM_LoadDutyValue
  4121     06C5  1003               	clrc
  4122     06C6  0CC2               	rrf	??_PWM_LoadDutyValue+1,f
  4123     06C7  0CC1               	rrf	??_PWM_LoadDutyValue,f
  4124     06C8  1003               	clrc
  4125     06C9  0CC2               	rrf	??_PWM_LoadDutyValue+1,f
  4126     06CA  0CC1               	rrf	??_PWM_LoadDutyValue,f
  4127     06CB  0841               	movf	??_PWM_LoadDutyValue,w
  4128     06CC  0095               	movwf	21	;volatile
  4129                           
  4130                           ;pwm.c: 17:     CCP1CON = (unsigned char)(CCP1CON | (dutyValue << 4));
  4131     06CD  0874               	movf	PWM_LoadDutyValue@dutyValue,w
  4132     06CE  00C1               	movwf	??_PWM_LoadDutyValue
  4133     06CF  3003               	movlw	3
  4134     06D0                     u2075:
  4135     06D0  1003               	clrc
  4136     06D1  0DC1               	rlf	??_PWM_LoadDutyValue,f
  4137     06D2  3EFF               	addlw	-1
  4138     06D3  1D03               	skipz
  4139     06D4  2ED0               	goto	u2075
  4140     06D5  1003               	clrc
  4141     06D6  0D41               	rlf	??_PWM_LoadDutyValue,w
  4142     06D7  0417               	iorwf	23,w
  4143     06D8  0097               	movwf	23	;volatile
  4144     06D9                     l508:
  4145     06D9  0008               	return
  4146     06DA                     __end_of_PWM_LoadDutyValue:
  4147                           
  4148                           	psect	text10
  4149     0742                     __ptext10:	
  4150 ;; *************** function _Interrupt_Enable *****************
  4151 ;; Defined at:
  4152 ;;		line 15 in file "interrupt_manager.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;		None
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;		None
  4157 ;; Return value:  Size  Location     Type
  4158 ;;                  1    wreg      void 
  4159 ;; Registers used:
  4160 ;;		None
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4166 ;;      Params:         0       0       0       0       0
  4167 ;;      Locals:         0       0       0       0       0
  4168 ;;      Temps:          0       0       0       0       0
  4169 ;;      Totals:         0       0       0       0       0
  4170 ;;Total ram usage:        0 bytes
  4171 ;; Hardware stack levels used: 1
  4172 ;; Hardware stack levels required when called: 2
  4173 ;; This function calls:
  4174 ;;		Nothing
  4175 ;; This function is called by:
  4176 ;;		_main
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180     0742                     _Interrupt_Enable:	
  4181                           ;psect for function _Interrupt_Enable
  4182                           
  4183     0742                     l1910:	
  4184                           ;incstack = 0
  4185                           ; Regs used in _Interrupt_Enable: []
  4186                           
  4187                           
  4188                           ;interrupt_manager.c: 17:     INTCONbits.GIE = 1;
  4189     0742  178B               	bsf	11,7	;volatile
  4190                           
  4191                           ;interrupt_manager.c: 18:     INTCONbits.PEIE = 1;
  4192     0743  170B               	bsf	11,6	;volatile
  4193     0744                     l20:
  4194     0744  0008               	return
  4195     0745                     __end_of_Interrupt_Enable:
  4196                           
  4197                           	psect	text11
  4198     067B                     __ptext11:	
  4199 ;; *************** function _InterruptManager *****************
  4200 ;; Defined at:
  4201 ;;		line 6 in file "interrupt_manager.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;		None
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;		None
  4206 ;; Return value:  Size  Location     Type
  4207 ;;                  1    wreg      void 
  4208 ;; Registers used:
  4209 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4210 ;; Tracked objects:
  4211 ;;		On entry : 0/0
  4212 ;;		On exit  : 0/0
  4213 ;;		Unchanged: 0/0
  4214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4215 ;;      Params:         0       0       0       0       0
  4216 ;;      Locals:         0       0       0       0       0
  4217 ;;      Temps:          3       0       0       0       0
  4218 ;;      Totals:         3       0       0       0       0
  4219 ;;Total ram usage:        3 bytes
  4220 ;; Hardware stack levels used: 1
  4221 ;; Hardware stack levels required when called: 1
  4222 ;; This function calls:
  4223 ;;		_TMR0_ISR
  4224 ;;		_USART_RX_ISR
  4225 ;; This function is called by:
  4226 ;;		Interrupt level 1
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230     067B                     _InterruptManager:	
  4231                           ;psect for function _InterruptManager
  4232                           
  4233     067B                     i1l1956:
  4234                           
  4235                           ;interrupt_manager.c: 8:     if(INTCONbits.T0IE == 1 && INTCONbits.T0IF == 1)
  4236     067B  1E8B               	btfss	11,5	;volatile
  4237     067C  2E7E               	goto	u110_21
  4238     067D  2E7F               	goto	u110_20
  4239     067E                     u110_21:
  4240     067E  2E88               	goto	i1l1962
  4241     067F                     u110_20:
  4242     067F                     i1l1958:
  4243     067F  1D0B               	btfss	11,2	;volatile
  4244     0680  2E82               	goto	u111_21
  4245     0681  2E83               	goto	u111_20
  4246     0682                     u111_21:
  4247     0682  2E88               	goto	i1l1962
  4248     0683                     u111_20:
  4249     0683                     i1l1960:
  4250                           
  4251                           ;interrupt_manager.c: 9:         TMR0_ISR();
  4252     0683  120A  118A  262F  120A  118A  	fcall	_TMR0_ISR
  4253     0688                     i1l1962:
  4254                           
  4255                           ;interrupt_manager.c: 11:     if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  4256     0688  1683               	bsf	3,5	;RP0=1, select bank1
  4257     0689  1303               	bcf	3,6	;RP1=0, select bank1
  4258     068A  1E8C               	btfss	12,5	;volatile
  4259     068B  2E8D               	goto	u112_21
  4260     068C  2E8E               	goto	u112_20
  4261     068D                     u112_21:
  4262     068D  2E99               	goto	i1l17
  4263     068E                     u112_20:
  4264     068E                     i1l1964:
  4265     068E  1283               	bcf	3,5	;RP0=0, select bank0
  4266     068F  1303               	bcf	3,6	;RP1=0, select bank0
  4267     0690  1E8C               	btfss	12,5	;volatile
  4268     0691  2E93               	goto	u113_21
  4269     0692  2E94               	goto	u113_20
  4270     0693                     u113_21:
  4271     0693  2E99               	goto	i1l17
  4272     0694                     u113_20:
  4273     0694                     i1l1966:
  4274                           
  4275                           ;interrupt_manager.c: 12:         USART_RX_ISR();
  4276     0694  120A  118A  26A2  120A  118A  	fcall	_USART_RX_ISR
  4277     0699                     i1l17:
  4278     0699  0873               	movf	??_InterruptManager+2,w
  4279     069A  008A               	movwf	10
  4280     069B  0872               	movf	??_InterruptManager+1,w
  4281     069C  0084               	movwf	4
  4282     069D  0E71               	swapf	??_InterruptManager,w
  4283     069E  0083               	movwf	3
  4284     069F  0EFE               	swapf	btemp,f
  4285     06A0  0E7E               	swapf	btemp,w
  4286     06A1  0009               	retfie
  4287     06A2                     __end_of_InterruptManager:
  4288                           
  4289                           	psect	intentry
  4290     0004                     __pintentry:	
  4291                           ;incstack = 0
  4292                           ; Regs used in _InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4293                           
  4294     0004                     interrupt_function:
  4295     007E                     saved_w	set	btemp
  4296     0004  00FE               	movwf	btemp
  4297     0005  0E03               	swapf	3,w
  4298     0006  00F1               	movwf	??_InterruptManager
  4299     0007  0804               	movf	4,w
  4300     0008  00F2               	movwf	??_InterruptManager+1
  4301     0009  080A               	movf	10,w
  4302     000A  00F3               	movwf	??_InterruptManager+2
  4303     000B  120A  118A  2E7B   	ljmp	_InterruptManager
  4304                           
  4305                           	psect	text12
  4306     06A2                     __ptext12:	
  4307 ;; *************** function _USART_RX_ISR *****************
  4308 ;; Defined at:
  4309 ;;		line 22 in file "usart.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;		None
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;		None
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      void 
  4316 ;; Registers used:
  4317 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4323 ;;      Params:         0       0       0       0       0
  4324 ;;      Locals:         0       0       0       0       0
  4325 ;;      Temps:          1       0       0       0       0
  4326 ;;      Totals:         1       0       0       0       0
  4327 ;;Total ram usage:        1 bytes
  4328 ;; Hardware stack levels used: 1
  4329 ;; This function calls:
  4330 ;;		Nothing
  4331 ;; This function is called by:
  4332 ;;		_InterruptManager
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336     06A2                     _USART_RX_ISR:	
  4337                           ;psect for function _USART_RX_ISR
  4338                           
  4339     06A2                     i1l1894:	
  4340                           ;incstack = 0
  4341                           ; Regs used in _USART_RX_ISR: [wreg-fsr0h+status,2+status,0]
  4342                           
  4343                           
  4344                           ;usart.c: 24:     rxBuffer[rxCount] = RCREG;
  4345     06A2  1283               	bcf	3,5	;RP0=0, select bank0
  4346     06A3  1303               	bcf	3,6	;RP1=0, select bank0
  4347     06A4  0831               	movf	_rxCount,w
  4348     06A5  3E20               	addlw	(low (_rxBuffer| 0))& (0+255)
  4349     06A6  0084               	movwf	4
  4350     06A7  081A               	movf	26,w	;volatile
  4351     06A8  1383               	bcf	3,7	;select IRP bank0
  4352     06A9  0080               	movwf	0
  4353     06AA                     i1l1896:
  4354                           
  4355                           ;usart.c: 25:     rxCount++;
  4356     06AA  3001               	movlw	1
  4357     06AB  00F0               	movwf	??_USART_RX_ISR
  4358     06AC  0870               	movf	??_USART_RX_ISR,w
  4359     06AD  07B1               	addwf	_rxCount,f	;volatile
  4360     06AE                     i1l1898:
  4361                           
  4362                           ;usart.c: 26:     if(rxCount >= 3)
  4363     06AE  3003               	movlw	3
  4364     06AF  0231               	subwf	_rxCount,w	;volatile
  4365     06B0  1C03               	skipc
  4366     06B1  2EB3               	goto	u107_21
  4367     06B2  2EB4               	goto	u107_20
  4368     06B3                     u107_21:
  4369     06B3  2EB6               	goto	i1l1902
  4370     06B4                     u107_20:
  4371     06B4                     i1l1900:
  4372                           
  4373                           ;usart.c: 27:         rxCount = 3 - 1;
  4374     06B4  3002               	movlw	2
  4375     06B5  00B1               	movwf	_rxCount	;volatile
  4376     06B6                     i1l1902:
  4377                           
  4378                           ;usart.c: 28:     if(RCSTAbits.OERR == 1)
  4379     06B6  1C98               	btfss	24,1	;volatile
  4380     06B7  2EB9               	goto	u108_21
  4381     06B8  2EBA               	goto	u108_20
  4382     06B9                     u108_21:
  4383     06B9  2EBD               	goto	i1l1908
  4384     06BA                     u108_20:
  4385     06BA                     i1l1904:
  4386                           
  4387                           ;usart.c: 29:     {;usart.c: 30:         RCSTAbits.CREN = 0;
  4388     06BA  1218               	bcf	24,4	;volatile
  4389                           
  4390                           ;usart.c: 31:         RCSTAbits.CREN = 1;
  4391     06BB  1618               	bsf	24,4	;volatile
  4392     06BC                     i1l1906:
  4393                           
  4394                           ;usart.c: 32:         rxCount = 0;
  4395     06BC  01B1               	clrf	_rxCount	;volatile
  4396     06BD                     i1l1908:
  4397                           
  4398                           ;usart.c: 34:     PIR1bits.RCIF = 0;
  4399     06BD  128C               	bcf	12,5	;volatile
  4400     06BE                     i1l477:
  4401     06BE  0008               	return
  4402     06BF                     __end_of_USART_RX_ISR:
  4403                           
  4404                           	psect	text13
  4405     062F                     __ptext13:	
  4406 ;; *************** function _TMR0_ISR *****************
  4407 ;; Defined at:
  4408 ;;		line 14 in file "tmr0.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;		None
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;		None
  4413 ;; Return value:  Size  Location     Type
  4414 ;;                  1    wreg      void 
  4415 ;; Registers used:
  4416 ;;		wreg, status,2, status,0
  4417 ;; Tracked objects:
  4418 ;;		On entry : 0/0
  4419 ;;		On exit  : 0/0
  4420 ;;		Unchanged: 0/0
  4421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4422 ;;      Params:         0       0       0       0       0
  4423 ;;      Locals:         0       0       0       0       0
  4424 ;;      Temps:          1       0       0       0       0
  4425 ;;      Totals:         1       0       0       0       0
  4426 ;;Total ram usage:        1 bytes
  4427 ;; Hardware stack levels used: 1
  4428 ;; This function calls:
  4429 ;;		Nothing
  4430 ;; This function is called by:
  4431 ;;		_InterruptManager
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435     062F                     _TMR0_ISR:	
  4436                           ;psect for function _TMR0_ISR
  4437                           
  4438     062F                     i1l1874:	
  4439                           ;incstack = 0
  4440                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0]
  4441                           
  4442                           
  4443                           ;tmr0.c: 16:     timerbotao1++;
  4444     062F  3001               	movlw	1
  4445     0630  1283               	bcf	3,5	;RP0=0, select bank0
  4446     0631  1303               	bcf	3,6	;RP1=0, select bank0
  4447     0632  07AF               	addwf	_timerbotao1,f
  4448     0633  1803               	skipnc
  4449     0634  0AB0               	incf	_timerbotao1+1,f
  4450     0635  3000               	movlw	0
  4451     0636  07B0               	addwf	_timerbotao1+1,f
  4452                           
  4453                           ;tmr0.c: 17:     if(timerbotao1 > 1000)
  4454     0637  3003               	movlw	3
  4455     0638  0230               	subwf	_timerbotao1+1,w
  4456     0639  30E9               	movlw	233
  4457     063A  1903               	skipnz
  4458     063B  022F               	subwf	_timerbotao1,w
  4459     063C  1C03               	skipc
  4460     063D  2E3F               	goto	u105_21
  4461     063E  2E40               	goto	u105_20
  4462     063F                     u105_21:
  4463     063F  2E44               	goto	i1l403
  4464     0640                     u105_20:
  4465     0640                     i1l1876:
  4466                           
  4467                           ;tmr0.c: 18:         timerbotao1 = 1000;
  4468     0640  30E8               	movlw	232
  4469     0641  00AF               	movwf	_timerbotao1
  4470     0642  3003               	movlw	3
  4471     0643  00B0               	movwf	_timerbotao1+1
  4472     0644                     i1l403:
  4473                           
  4474                           ;tmr0.c: 19:     timerbotao2++;
  4475     0644  3001               	movlw	1
  4476     0645  07AD               	addwf	_timerbotao2,f
  4477     0646  1803               	skipnc
  4478     0647  0AAE               	incf	_timerbotao2+1,f
  4479     0648  3000               	movlw	0
  4480     0649  07AE               	addwf	_timerbotao2+1,f
  4481                           
  4482                           ;tmr0.c: 20:     if(timerbotao2 > 1000)
  4483     064A  3003               	movlw	3
  4484     064B  022E               	subwf	_timerbotao2+1,w
  4485     064C  30E9               	movlw	233
  4486     064D  1903               	skipnz
  4487     064E  022D               	subwf	_timerbotao2,w
  4488     064F  1C03               	skipc
  4489     0650  2E52               	goto	u106_21
  4490     0651  2E53               	goto	u106_20
  4491     0652                     u106_21:
  4492     0652  2E57               	goto	i1l1880
  4493     0653                     u106_20:
  4494     0653                     i1l1878:
  4495                           
  4496                           ;tmr0.c: 21:         timerbotao2 = 1000;
  4497     0653  30E8               	movlw	232
  4498     0654  00AD               	movwf	_timerbotao2
  4499     0655  3003               	movlw	3
  4500     0656  00AE               	movwf	_timerbotao2+1
  4501     0657                     i1l1880:
  4502                           
  4503                           ;tmr0.c: 22:     timerfimcurso++;
  4504     0657  3001               	movlw	1
  4505     0658  00F0               	movwf	??_TMR0_ISR
  4506     0659  0870               	movf	??_TMR0_ISR,w
  4507     065A  07C0               	addwf	_timerfimcurso,f
  4508     065B                     i1l1882:
  4509                           
  4510                           ;tmr0.c: 23:     timerchaveNF++;
  4511     065B  3001               	movlw	1
  4512     065C  00F0               	movwf	??_TMR0_ISR
  4513     065D  0870               	movf	??_TMR0_ISR,w
  4514     065E  07BF               	addwf	_timerchaveNF,f
  4515     065F                     i1l1884:
  4516                           
  4517                           ;tmr0.c: 24:     timerchaveNA++;
  4518     065F  3001               	movlw	1
  4519     0660  00F0               	movwf	??_TMR0_ISR
  4520     0661  0870               	movf	??_TMR0_ISR,w
  4521     0662  07BE               	addwf	_timerchaveNA,f
  4522     0663                     i1l1886:
  4523                           
  4524                           ;tmr0.c: 25:     timerchavecopo++;
  4525     0663  3001               	movlw	1
  4526     0664  00F0               	movwf	??_TMR0_ISR
  4527     0665  0870               	movf	??_TMR0_ISR,w
  4528     0666  07BD               	addwf	_timerchavecopo,f
  4529                           
  4530                           ;tmr0.c: 26:     timer++;
  4531     0667  3001               	movlw	1
  4532     0668  07AB               	addwf	_timer,f
  4533     0669  1803               	skipnc
  4534     066A  0AAC               	incf	_timer+1,f
  4535     066B  3000               	movlw	0
  4536     066C  07AC               	addwf	_timer+1,f
  4537                           
  4538                           ;tmr0.c: 27:     timerpwm++;
  4539     066D  3001               	movlw	1
  4540     066E  07A9               	addwf	_timerpwm,f
  4541     066F  1803               	skipnc
  4542     0670  0AAA               	incf	_timerpwm+1,f
  4543     0671  3000               	movlw	0
  4544     0672  07AA               	addwf	_timerpwm+1,f
  4545     0673                     i1l1888:
  4546                           
  4547                           ;tmr0.c: 28:     timeoutRx++;
  4548     0673  3001               	movlw	1
  4549     0674  00F0               	movwf	??_TMR0_ISR
  4550     0675  0870               	movf	??_TMR0_ISR,w
  4551     0676  07BC               	addwf	_timeoutRx,f
  4552     0677                     i1l1890:
  4553                           
  4554                           ;tmr0.c: 30:     TMR0 = 0x64;
  4555     0677  3064               	movlw	100
  4556     0678  0081               	movwf	1	;volatile
  4557     0679                     i1l1892:
  4558                           
  4559                           ;tmr0.c: 31:     INTCONbits.T0IF = 0;
  4560     0679  110B               	bcf	11,2	;volatile
  4561     067A                     i1l405:
  4562     067A  0008               	return
  4563     067B                     __end_of_TMR0_ISR:
  4564     007E                     btemp	set	126	;btemp
  4565     007E                     wtemp0	set	126
  4566                           
  4567                           	psect	idloc
  4568                           
  4569                           ;Config register IDLOC0 @ 0x2000
  4570                           ;	unspecified, using default values
  4571     2000                     	org	8192
  4572     2000  3FFF               	dw	16383
  4573                           
  4574                           ;Config register IDLOC1 @ 0x2001
  4575                           ;	unspecified, using default values
  4576     2001                     	org	8193
  4577     2001  3FFF               	dw	16383
  4578                           
  4579                           ;Config register IDLOC2 @ 0x2002
  4580                           ;	unspecified, using default values
  4581     2002                     	org	8194
  4582     2002  3FFF               	dw	16383
  4583                           
  4584                           ;Config register IDLOC3 @ 0x2003
  4585                           ;	unspecified, using default values
  4586     2003                     	org	8195
  4587     2003  3FFF               	dw	16383
  4588                           
  4589                           	psect	config
  4590                           
  4591                           ;Config register CONFIG @ 0x2007
  4592                           ;	Oscillator Selection bits
  4593                           ;	FOSC = HS, HS oscillator
  4594                           ;	Watchdog Timer Enable bit
  4595                           ;	WDTE = ON, WDT enabled
  4596                           ;	Power-up Timer Enable bit
  4597                           ;	PWRTE = ON, PWRT enabled
  4598                           ;	Brown-out Reset Enable bit
  4599                           ;	BOREN = ON, BOR enabled
  4600                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4601                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4602                           ;	Data EEPROM Memory Code Protection bit
  4603                           ;	CPD = ON, Data EEPROM code-protected
  4604                           ;	Flash Program Memory Write Enable bits
  4605                           ;	WRT = HALF, 0000h to 0FFFh write-protected; 1000h to 1FFFh may be written to by EECON 
      +                          control
  4606                           ;	In-Circuit Debugger Mode bit
  4607                           ;	DEBUG = 0x1, unprogrammed default
  4608                           ;	Flash Program Memory Code Protection bit
  4609                           ;	CP = ON, All program memory code-protected
  4610     2007                     	org	8199
  4611     2007  1876               	dw	6262

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      4      37
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM_LoadDutyValue
    _PWM_Initialize->_PWM_LoadDutyValue

Critical Paths under _InterruptManager in COMMON

    _InterruptManager->_TMR0_ISR
    _InterruptManager->_USART_RX_ISR

Critical Paths under _main in BANK0

    _main->_PWM_LoadDutyValue
    _PWM_Initialize->_PWM_LoadDutyValue

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1069
                                              2 BANK0      2     2      0
                   _Interrupt_Enable
                     _PWM_Initialize
                  _PWM_LoadDutyValue
              _PinManager_Initialize
                    _TMR0_Initialize
                   _USART_Initialize
              _USART_RX_Clear_Buffer
                     _USART_RX_Ready
                         _USART_Read
                        _USART_Write
 ---------------------------------------------------------------------------------
 (1) _USART_Write                                          1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Read                                           1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_RX_Ready                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_RX_Clear_Buffer                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PinManager_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Initialize                                       0     0      0     512
                  _PWM_LoadDutyValue
 ---------------------------------------------------------------------------------
 (1) _PWM_LoadDutyValue                                    4     2      2     512
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Interrupt_Enable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _InterruptManager                                     3     3      0       0
                                              1 COMMON     3     3      0
                           _TMR0_ISR
                       _USART_RX_ISR
 ---------------------------------------------------------------------------------
 (4) _USART_RX_ISR                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _TMR0_ISR                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupt_Enable
   _PWM_Initialize
     _PWM_LoadDutyValue
   _PWM_LoadDutyValue
   _PinManager_Initialize
   _TMR0_Initialize
   _USART_Initialize
   _USART_RX_Clear_Buffer
   _USART_RX_Ready
   _USART_Read
   _USART_Write

 _InterruptManager (ROOT)
   _TMR0_ISR
   _USART_RX_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4      25       5       46.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2F      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Jun 16 11:36:54 2023

           ??_InterruptManager 0071             ??_Interrupt_Enable 0074                             l20 0744  
                           fsr 0004       __end_of_USART_Initialize 0712                            l104 0056  
                          l210 033E                            l211 0340                            l203 0332  
                          l212 0342                            l213 0344                            l205 0334  
                          l214 0370                            l206 0336                            l215 0379  
                          l207 0338                            l151 062B                            l400 0731  
                          l208 033A                            l152 01AE                            l241 0415  
                          l209 033C                            l161 01EF                            l250 0451  
                          l242 0417                            l243 0419                            l163 020F  
                          l147 0191                            l252 0484                            l244 041B  
                          l172 0242                            l156 01ED                            l148 019F  
                          l245 041D                            l157 01DE                            l246 041F  
                          l166 0218                            l263 04DC                            l247 0421  
                          l239 0413                            l167 0220                            l264 04E9  
                          l248 0423                            l184 02B1                            l168 022D  
                          l505 06EE                            l265 04F6                            l249 0425  
                          l266 0503                            l258 04B2                            l347 0700  
                          l267 0510                            l508 06D9                            l277 05B0  
                          l472 0711                            l480 073D                            l483 071D  
                          l492 0741                            l486 071F                            l489 0727  
                          _PR2 0092                            fsr0 0004                            indf 0000  
                         l3000 02FF                           l3010 0313                           l3002 0305  
                         l3100 0454                           l3012 031D                           l3004 030A  
                         l3110 046B                           l3102 0456                           l3030 0382  
                         l3022 0346                           l3014 0323                           l3006 030C  
                         l3200 0543                           l3120 047F                           l3112 046D  
                         l3104 045A                           l3040 0390                           l3032 0386  
                         l3016 032A                           l3210 0577                           l3202 054F  
                         l3130 049A                           l3122 0488                           l3114 0472  
                         l3106 0461                           l3050 03B5                           l3042 0397  
                         l3034 0388                           l3026 0374                           l3220 0597  
                         l3212 057D                           l3204 0555                           l3140 04AB  
                         l3132 049E                           l3124 048B                           l3116 0477  
                         l3108 0465                           l3060 03C7                           l3052 03B8  
                         l3044 03A0                           l3036 038A                           l3028 037D  
                         l3230 05C2                           l3222 059C                           l3214 0581  
                         l3206 0559                           l3150 04C8                           l3134 049F  
                         l3126 048E                           l3118 0479                           l3070 03DC  
                         l3062 03CB                           l3054 03BC                           l3046 03A8  
                         l3038 038C                           l3240 05DC                           l3232 05CF  
                         l3224 059E                           l3216 058B                           l3208 0563  
                         l3160 04FD                           l3152 04CF                           l3144 04B3  
                         l3136 04A4                           l3128 0494                           l3080 03EF  
                         l3072 03DE                           l3064 03D1                           l3056 03C1  
                         l3048 03B1                           l3242 05DD                           l3234 05D5  
                         l3226 05A2                           l3218 0593                           l3170 051D  
                         l3162 050A                           l3154 04D6                           l3138 04A9  
                         l3146 04B8                           l3082 03F4                           l3074 03E4  
                         l3066 03D2                           l3058 03C4                           l3244 05DE  
                         l3236 05D9                           l3228 05B4                           l3180 052B  
                         l3172 0523                           l3156 04E3                           l3164 0517  
                         l3148 04C2                           l3084 03FE                           l3068 03D7  
                         l2700 0049                           l1910 0742                           l3238 05DB  
                         l3190 0535                           l3182 052E                           l3174 0527  
                         l3158 04F0                           l3094 0427                           l3086 0404  
                         l3078 03E9                           l2710 0050                           l2702 004A  
                         l1920 06FC                           l1912 06EF                           l3192 0537  
                         l3184 0530                           l3176 0528                           l3168 0519  
                         l3360 0431                           l3088 040B                           l3248 05E0  
                         l2800 00DF                           l2720 005D                           l2712 0051  
                         l2704 004C                           l1922 06FE                           l1914 06F4  
                         l1930 0730                           l3362 05EA                           l3186 0531  
                         l3178 0529                           l3098 0452                           l2810 00F0  
                         l2802 00E1                           l2722 0061                           l2730 006F  
                         l2714 0052                           l2706 004E                           l1916 06F8  
                         l1932 0701                           l1940 0725                           l3196 0539  
                         l2900 01F6                           l2812 00F1                           l2820 010A  
                         l2804 00E2                           l2740 0084                           l2732 0073  
                         l2724 006A                           l2716 0054                           l2708 004F  
                         l1918 06FA                           l1934 070B                           l1942 073A  
                         l1950 0716                           l3198 0542                           l3358 0350  
                         l2910 0215                           l2902 0200                           l2830 0128  
                         l2822 0113                           l2814 00F8                           l2806 00E3  
                         l2750 0095                           l2734 0077                           l2742 0085  
                         l2726 006C                           l2718 0057                           l2680 06DA  
                         l1928 0728                           l1936 070E                           l1952 071C  
                         l2920 0237                           l2912 021D                           l2904 0203  
                         l2840 013F                           l2832 012A                           l2824 0119  
                         l2816 00FF                           l2808 00EA                           l2760 009D  
                         l2752 0096                           l2744 0089                           l2736 0080  
                         l2728 006E                           l2682 06E6                           l1946 073E  
                         l1938 071F                           l2930 024F                           l2922 0239  
                         l2914 0224                           l2906 020C                           l2850 0167  
                         l2842 0148                           l2826 011A                           l2834 0133  
                         l2818 0101                           l2770 00B1                           l2762 009F  
                         l2754 0097                           l2746 008D                           l2738 0082  
                         l2690 0044                           l1948 0712                           l2940 0267  
                         l2932 0255                           l2924 023D                           l2916 0229  
                         l2908 0213                           l2860 0184                           l2852 016D  
                         l2844 014A                           l2836 013B                           l2828 0121  
                         l2772 00B7                           l2780 00BD                           l2764 00A1  
                         l2756 009B                           l2748 0093                           l2692 0045  
                         l2684 0022                           l2678 06BF                           l2950 0283  
                         l2942 0271                           l2934 0259                           l2926 0246  
                         l2918 0236                           l2870 01A2                           l2862 018D  
                         l2854 0177                           l2846 0154                           l2838 013C  
                         l2790 00CF                           l2782 00C1                           l2774 00BA  
                         l2758 009C                           l2766 00A7                           l2694 0046  
                         l2686 0036                           l2960 02A5                           l2952 028D  
                         l2944 0275                           l2936 025C                           l2928 024B  
                         l2880 01B6                           l2872 01A3                           l2864 0194  
                         l2856 017D                           l2848 015E                           l2792 00D0  
                         l2784 00C5                           l2776 00BB                           l2768 00AD  
                         l2696 0047                           l2688 0043                           l2970 02BA  
                         l2962 02A6                           l2954 0293                           l2946 027D  
                         l2938 0265                           l2890 01D3                           l2882 01BF  
                         l2874 01A7                           l2866 019D                           l2786 00CB  
                         l2794 00D1                           l2778 00BC                           l2698 0048  
                         l2980 02D6                           l2972 02BE                           l2964 02A8  
                         l2956 029A                           l2892 01DC                           l2884 01C8  
                         l2876 01AB                           l2868 01A1                           l2796 00D5  
                         l2788 00CE                           l2990 02EC                           l2982 02DF  
                         l2974 02C0                           l2966 02AA                           l2958 02A1  
                         l2894 01DF                           l2878 01B2                           l2886 01CA  
                         l2798 00D9                           l2992 02F2                           l2984 02E2  
                         l2976 02C5                           l2968 02B5                           l2896 01E8  
                         l2888 01CE                           l2994 02F3                           l2986 02E5  
                         l2978 02CE                           l2898 01EA                           l2996 02F8  
                         l2988 02E8                           l2998 02FD                           u2100 006A  
                         u2101 0069                           u2110 0073                           u2111 0072  
                         u3000 05B4                           u2200 00B7                           u2120 0077  
                         u3001 05B3                           u2201 00B6                           u2121 0076  
                         u1090 0725                           u2210 00C1                           u2130 0080  
                         u1091 0724                           u2211 00C0                           u2131 007F  
                         u2300 0113                           u2220 00C5                           u2140 0089  
                         u2301 0112                           u2221 00C4                           u2141 0088  
                         u2310 0119                           u2230 00CB                           u2150 008D  
                         u2311 0118                           u2231 00CA                           u2151 008C  
                         u2400 019D                           u2320 0128                           u2240 00D5  
                         u2160 0093                           u2080 005D                           u2401 019C  
                         u2321 0127                           u2241 00D4                           u2161 0092  
                         u2081 005C                           u2410 01A7                           u2330 013B  
                         u2250 00D9                           u2170 009B                           u2090 0061  
                         u2075 06D0                           u2411 01A6                           u2331 013A  
                         u2251 00D8                           u2171 009A                           u2091 0060  
                         u2500 01E8                           u2420 01AB                           u2340 0148  
                         u2260 00DF                           u2180 00AD                           u2501 01E7  
                         u2421 01AA                           u2341 0147                           u2261 00DE  
                         u2181 00AC                           u2510 020C                           u2430 01B2  
                         u2350 0154                           u2270 00EA                           u2190 00B1  
                         u2511 020B                           u2431 01B1                           u2351 0153  
                         u2271 00E9                           u2191 00B0                           u2600 027D  
                         u2520 0213                           u2440 01B6                           u2360 015E  
                         u2280 00F0                           u2601 027C                           u2521 0212  
                         u2441 01B5                           u2361 015D                           u2281 00EF  
                         u2610 028D                           u2530 021D                           u2450 01BF  
                         u2370 0167                           u2290 00FF                           u2611 028C  
                         u2531 021C                           u2451 01BE                           u2371 0166  
                         u2355 0150                           u2291 00FE                           u2700 031D  
                         u2620 029A                           u2540 0224                           u2460 01C8  
                         u2380 017D                           u2701 031C                           u2621 0299  
                         u2541 0223                           u2461 01C7                           u2381 017C  
                         u2365 015A                           u2710 032A                           u2630 02A1  
                         u2550 0236                           u2470 01CE                           u2390 018D  
                         u2711 0329                           u2631 02A0                           u2551 0235  
                         u2471 01CD                           u2391 018C                           u2800 03D1  
                         u2720 0331                           u2640 02B5                           u2560 023D  
                         u2480 01D3                           u2801 03D0                           u2721 0330  
                         u2641 02B4                           u2561 023C                           u2481 01D2  
                         u2810 03EF                           u2730 0374                           u2650 02CE  
                         u2570 0246                           u2490 01DC                           u2811 03EE  
                         u2731 0373                           u2651 02CD                           u2571 0245  
                         u2491 01DB                           u2900 04CF                           u2820 03FE  
                         u2740 037D                           u2660 02D6                           u2580 0265  
                         u2901 04CE                           u2821 03FD                           u2741 037C  
                         u2661 02D5                           u2581 0264                           u2910 04D6  
                         u2830 040B                           u2750 03A0                           u2670 02DF  
                         u2590 0271                           u2911 04D5                           u2831 040A  
                         u2751 039F                           u2671 02DE                           u2591 0270  
                         u2920 04E3                           u2840 0412                           u2760 03A8  
                         u2680 02F2                           u2921 04E2                           u2841 0411  
                         u2761 03A7                           u2681 02F1                           u2930 04F0  
                         u2850 046B                           u2770 03B1                           u2690 0312  
                         u2931 04EF                           u2851 046A                           u2771 03B0  
                         u2691 0311                           u2940 04FD                           u2860 0488  
                         u2780 03B5                           u2941 04FC                           u2861 0487  
                         u2781 03B4                           u2950 050A                           u2870 0494  
                         u2790 03BC                           u2951 0509                           u2871 0493  
                         u2791 03BB                           u2960 0517                           u2880 049A  
                         i1l17 0699                           u2961 0516                           u2881 0499  
                         u2970 0542                           u2890 04C2                           u2971 0541  
                         u2891 04C1                           u2980 0597                           u2981 0596  
                         u2990 05A2                           u2991 05A1                           _TMR0 0001  
                         _main 0022                ?_USART_RX_Ready 0070                           btemp 007E  
                         start 000E  __end_of_PinManager_Initialize 0701        __end_of_TMR0_Initialize 0732  
                        ?_main 0070                          _T2CON 0012                          i1l403 0644  
                        i1l405 067A                          i1l477 06BE                          _RCREG 001A  
                        _RCSTA 0018                          _SPBRG 0099                          _PORTA 0005  
                        _PORTB 0006                          _PORTC 0007                          _TRISA 0085  
                        _TRISB 0086                          _TRISC 0087                          _TXREG 0019  
                        _TXSTA 0098               __end_of_TMR0_ISR 067B                          _timer 002B  
                        pclath 000A                          status 0003                          wtemp0 007E  
                  ?_USART_Read 0070                __initialization 0011                   __end_of_main 062F  
                       ??_main 0043                         _ADCON1 009F                         _CCPR1L 0015  
                       u110_20 067F                         u110_21 067E                         u111_20 0683  
                       u111_21 0682                         u112_20 068E                         u112_21 068D  
                       u105_20 0640                         u113_20 0694                         u105_21 063F  
                       u113_21 0693                         i1l1900 06B4                         i1l1902 06B6  
                       u106_20 0653                         i1l1904 06BA                         u106_21 0652  
                       i1l1906 06BC                         i1l1908 06BD                         i1l1880 0657  
                       u107_20 06B4                         i1l1960 0683                         u107_21 06B3  
                       i1l1890 0677                         i1l1882 065B                         i1l1874 062F  
                       i1l1962 0688                         i1l1892 0679                         i1l1884 065F  
                       i1l1876 0640                         i1l1964 068E                         i1l1956 067B  
                       i1l1886 0663                         i1l1878 0653                         i1l1894 06A2  
                       i1l1966 0694                         i1l1958 067F                         i1l1888 0673  
                       u108_20 06BA                         i1l1896 06AA                         u108_21 06B9  
                       i1l1898 06AE                 _PWM_Initialize 06DA                         _pecaOK 0038  
                       _estado 0076               ?_TMR0_Initialize 0070                         saved_w 007E  
      __end_of__initialization 001E                   ?_USART_Write 0070         __end_of_PWM_Initialize 06EF  
               __pcstackCOMMON 0070                      ?_TMR0_ISR 0070              ?_USART_Initialize 0070  
           ??_USART_Initialize 0074               ??_USART_RX_Ready 0074                     __pbssBANK0 0020  
        _USART_RX_Clear_Buffer 073E                ?_PWM_Initialize 0070                     __pmaintext 0022  
                   ??_TMR0_ISR 0070                     __pintentry 0004                        _CCP1CON 0017  
                 ??_USART_Read 0074                     _naodesliga 003A          _PinManager_Initialize 06EF  
                      __ptext1 071E                        __ptext2 0712                        __ptext3 073A  
                      __ptext4 073E                        __ptext5 0701                        __ptext6 0728  
                      __ptext7 06EF                        __ptext8 06DA                        __ptext9 06BF  
                      _escravo 0023                 USART_Read@data 0074                        _naoliga 003B  
                      _estagio 0035                        _rxCount 0031             __end_of_USART_Read 071E  
                      clrloop0 0733           end_of_initialization 001E         ?_USART_RX_Clear_Buffer 0070  
                    _RCSTAbits 0018                      _PORTAbits 0005                      _PORTBbits 0006  
                    _PORTCbits 0007               _InterruptManager 067B               _Interrupt_Enable 0742  
                   _pwm_setado 0027                  ?_USART_RX_ISR 0070              _PWM_LoadDutyValue 06BF  
           ?_PWM_LoadDutyValue 0074            ??_PWM_LoadDutyValue 0041         ?_PinManager_Initialize 0070  
          start_initialization 0011                 ??_USART_RX_ISR 0070      __end_of_PWM_LoadDutyValue 06DA  
             ??_PWM_Initialize 0076                    _addressFail 0036                    __pbssCOMMON 0076  
                    ___latbits 0002                  __pcstackBANK0 0041        ??_USART_RX_Clear_Buffer 0074  
            ??_TMR0_Initialize 0074              interrupt_function 0004       __end_of_InterruptManager 06A2  
                    clear_ram0 0732                       _PIE1bits 008C       __end_of_Interrupt_Enable 0745  
                     _PIR1bits 000C                       _TMR0_ISR 062F                      _timeoutRx 003C  
         __end_of_USART_RX_ISR 06BF                      _pwm_atual 0025                    _comunicacao 0078  
               _timerchavecopo 003D                    _countFailRx 0037               _USART_Initialize 0701  
                ??_USART_Write 0074     PWM_LoadDutyValue@dutyValue 0074        ??_PinManager_Initialize 0074  
                     __ptext10 0742                       __ptext11 067B                       __ptext12 06A2  
                     __ptext13 062F                       _endereco 0079                       _rxBuffer 0020  
                     _timerpwm 0029            __end_of_USART_Write 0728                     _INTCONbits 000B  
                _timerfimcurso 0040                       intlevel1 0000              _estagio@main$F461 0034  
            _estagio@main$F707 0032              _estagio@main$F558 0033                 _USART_RX_Ready 073A  
                 _timerchaveNA 003E                   _timerchaveNF 003F                     _OPTION_REG 0081  
              _TMR0_Initialize 0728                    _sincronismo 0039                    _timerbotao1 002F  
                  _timerbotao2 002D                   _USART_RX_ISR 06A2  __end_of_USART_RX_Clear_Buffer 0742  
       __end_of_USART_RX_Ready 073E                USART_Write@data 0074              ?_InterruptManager 0070  
                   _USART_Read 0712                    _USART_Write 071E              ?_Interrupt_Enable 0070  
