

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Sep 13 10:33:23 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F876A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28     0000                     
    29                           ; Version 2.40
    30                           ; Generated 17/11/2021 GMT
    31                           ; 
    32                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F876A Definitions
    62                           ; 
    63                           ; SFR Addresses
    64     0000                     	;# 
    65     0001                     	;# 
    66     0002                     	;# 
    67     0003                     	;# 
    68     0004                     	;# 
    69     0005                     	;# 
    70     0006                     	;# 
    71     0007                     	;# 
    72     000A                     	;# 
    73     000B                     	;# 
    74     000C                     	;# 
    75     000D                     	;# 
    76     000E                     	;# 
    77     000E                     	;# 
    78     000F                     	;# 
    79     0010                     	;# 
    80     0011                     	;# 
    81     0012                     	;# 
    82     0013                     	;# 
    83     0014                     	;# 
    84     0015                     	;# 
    85     0015                     	;# 
    86     0016                     	;# 
    87     0017                     	;# 
    88     0018                     	;# 
    89     0019                     	;# 
    90     001A                     	;# 
    91     001B                     	;# 
    92     001B                     	;# 
    93     001C                     	;# 
    94     001D                     	;# 
    95     001E                     	;# 
    96     001F                     	;# 
    97     0081                     	;# 
    98     0085                     	;# 
    99     0086                     	;# 
   100     0087                     	;# 
   101     008C                     	;# 
   102     008D                     	;# 
   103     008E                     	;# 
   104     0091                     	;# 
   105     0092                     	;# 
   106     0093                     	;# 
   107     0094                     	;# 
   108     0098                     	;# 
   109     0099                     	;# 
   110     009C                     	;# 
   111     009D                     	;# 
   112     009E                     	;# 
   113     009F                     	;# 
   114     010C                     	;# 
   115     010D                     	;# 
   116     010E                     	;# 
   117     010F                     	;# 
   118     018C                     	;# 
   119     018D                     	;# 
   120     0000                     	;# 
   121     0001                     	;# 
   122     0002                     	;# 
   123     0003                     	;# 
   124     0004                     	;# 
   125     0005                     	;# 
   126     0006                     	;# 
   127     0007                     	;# 
   128     000A                     	;# 
   129     000B                     	;# 
   130     000C                     	;# 
   131     000D                     	;# 
   132     000E                     	;# 
   133     000E                     	;# 
   134     000F                     	;# 
   135     0010                     	;# 
   136     0011                     	;# 
   137     0012                     	;# 
   138     0013                     	;# 
   139     0014                     	;# 
   140     0015                     	;# 
   141     0015                     	;# 
   142     0016                     	;# 
   143     0017                     	;# 
   144     0018                     	;# 
   145     0019                     	;# 
   146     001A                     	;# 
   147     001B                     	;# 
   148     001B                     	;# 
   149     001C                     	;# 
   150     001D                     	;# 
   151     001E                     	;# 
   152     001F                     	;# 
   153     0081                     	;# 
   154     0085                     	;# 
   155     0086                     	;# 
   156     0087                     	;# 
   157     008C                     	;# 
   158     008D                     	;# 
   159     008E                     	;# 
   160     0091                     	;# 
   161     0092                     	;# 
   162     0093                     	;# 
   163     0094                     	;# 
   164     0098                     	;# 
   165     0099                     	;# 
   166     009C                     	;# 
   167     009D                     	;# 
   168     009E                     	;# 
   169     009F                     	;# 
   170     010C                     	;# 
   171     010D                     	;# 
   172     010E                     	;# 
   173     010F                     	;# 
   174     018C                     	;# 
   175     018D                     	;# 
   176     0000                     	;# 
   177     0001                     	;# 
   178     0002                     	;# 
   179     0003                     	;# 
   180     0004                     	;# 
   181     0005                     	;# 
   182     0006                     	;# 
   183     0007                     	;# 
   184     000A                     	;# 
   185     000B                     	;# 
   186     000C                     	;# 
   187     000D                     	;# 
   188     000E                     	;# 
   189     000E                     	;# 
   190     000F                     	;# 
   191     0010                     	;# 
   192     0011                     	;# 
   193     0012                     	;# 
   194     0013                     	;# 
   195     0014                     	;# 
   196     0015                     	;# 
   197     0015                     	;# 
   198     0016                     	;# 
   199     0017                     	;# 
   200     0018                     	;# 
   201     0019                     	;# 
   202     001A                     	;# 
   203     001B                     	;# 
   204     001B                     	;# 
   205     001C                     	;# 
   206     001D                     	;# 
   207     001E                     	;# 
   208     001F                     	;# 
   209     0081                     	;# 
   210     0085                     	;# 
   211     0086                     	;# 
   212     0087                     	;# 
   213     008C                     	;# 
   214     008D                     	;# 
   215     008E                     	;# 
   216     0091                     	;# 
   217     0092                     	;# 
   218     0093                     	;# 
   219     0094                     	;# 
   220     0098                     	;# 
   221     0099                     	;# 
   222     009C                     	;# 
   223     009D                     	;# 
   224     009E                     	;# 
   225     009F                     	;# 
   226     010C                     	;# 
   227     010D                     	;# 
   228     010E                     	;# 
   229     010F                     	;# 
   230     018C                     	;# 
   231     018D                     	;# 
   232     0000                     	;# 
   233     0001                     	;# 
   234     0002                     	;# 
   235     0003                     	;# 
   236     0004                     	;# 
   237     0005                     	;# 
   238     0006                     	;# 
   239     0007                     	;# 
   240     000A                     	;# 
   241     000B                     	;# 
   242     000C                     	;# 
   243     000D                     	;# 
   244     000E                     	;# 
   245     000E                     	;# 
   246     000F                     	;# 
   247     0010                     	;# 
   248     0011                     	;# 
   249     0012                     	;# 
   250     0013                     	;# 
   251     0014                     	;# 
   252     0015                     	;# 
   253     0015                     	;# 
   254     0016                     	;# 
   255     0017                     	;# 
   256     0018                     	;# 
   257     0019                     	;# 
   258     001A                     	;# 
   259     001B                     	;# 
   260     001B                     	;# 
   261     001C                     	;# 
   262     001D                     	;# 
   263     001E                     	;# 
   264     001F                     	;# 
   265     0081                     	;# 
   266     0085                     	;# 
   267     0086                     	;# 
   268     0087                     	;# 
   269     008C                     	;# 
   270     008D                     	;# 
   271     008E                     	;# 
   272     0091                     	;# 
   273     0092                     	;# 
   274     0093                     	;# 
   275     0094                     	;# 
   276     0098                     	;# 
   277     0099                     	;# 
   278     009C                     	;# 
   279     009D                     	;# 
   280     009E                     	;# 
   281     009F                     	;# 
   282     010C                     	;# 
   283     010D                     	;# 
   284     010E                     	;# 
   285     010F                     	;# 
   286     018C                     	;# 
   287     018D                     	;# 
   288     0000                     	;# 
   289     0001                     	;# 
   290     0002                     	;# 
   291     0003                     	;# 
   292     0004                     	;# 
   293     0005                     	;# 
   294     0006                     	;# 
   295     0007                     	;# 
   296     000A                     	;# 
   297     000B                     	;# 
   298     000C                     	;# 
   299     000D                     	;# 
   300     000E                     	;# 
   301     000E                     	;# 
   302     000F                     	;# 
   303     0010                     	;# 
   304     0011                     	;# 
   305     0012                     	;# 
   306     0013                     	;# 
   307     0014                     	;# 
   308     0015                     	;# 
   309     0015                     	;# 
   310     0016                     	;# 
   311     0017                     	;# 
   312     0018                     	;# 
   313     0019                     	;# 
   314     001A                     	;# 
   315     001B                     	;# 
   316     001B                     	;# 
   317     001C                     	;# 
   318     001D                     	;# 
   319     001E                     	;# 
   320     001F                     	;# 
   321     0081                     	;# 
   322     0085                     	;# 
   323     0086                     	;# 
   324     0087                     	;# 
   325     008C                     	;# 
   326     008D                     	;# 
   327     008E                     	;# 
   328     0091                     	;# 
   329     0092                     	;# 
   330     0093                     	;# 
   331     0094                     	;# 
   332     0098                     	;# 
   333     0099                     	;# 
   334     009C                     	;# 
   335     009D                     	;# 
   336     009E                     	;# 
   337     009F                     	;# 
   338     010C                     	;# 
   339     010D                     	;# 
   340     010E                     	;# 
   341     010F                     	;# 
   342     018C                     	;# 
   343     018D                     	;# 
   344     0000                     	;# 
   345     0001                     	;# 
   346     0002                     	;# 
   347     0003                     	;# 
   348     0004                     	;# 
   349     0005                     	;# 
   350     0006                     	;# 
   351     0007                     	;# 
   352     000A                     	;# 
   353     000B                     	;# 
   354     000C                     	;# 
   355     000D                     	;# 
   356     000E                     	;# 
   357     000E                     	;# 
   358     000F                     	;# 
   359     0010                     	;# 
   360     0011                     	;# 
   361     0012                     	;# 
   362     0013                     	;# 
   363     0014                     	;# 
   364     0015                     	;# 
   365     0015                     	;# 
   366     0016                     	;# 
   367     0017                     	;# 
   368     0018                     	;# 
   369     0019                     	;# 
   370     001A                     	;# 
   371     001B                     	;# 
   372     001B                     	;# 
   373     001C                     	;# 
   374     001D                     	;# 
   375     001E                     	;# 
   376     001F                     	;# 
   377     0081                     	;# 
   378     0085                     	;# 
   379     0086                     	;# 
   380     0087                     	;# 
   381     008C                     	;# 
   382     008D                     	;# 
   383     008E                     	;# 
   384     0091                     	;# 
   385     0092                     	;# 
   386     0093                     	;# 
   387     0094                     	;# 
   388     0098                     	;# 
   389     0099                     	;# 
   390     009C                     	;# 
   391     009D                     	;# 
   392     009E                     	;# 
   393     009F                     	;# 
   394     010C                     	;# 
   395     010D                     	;# 
   396     010E                     	;# 
   397     010F                     	;# 
   398     018C                     	;# 
   399     018D                     	;# 
   400     0000                     	;# 
   401     0001                     	;# 
   402     0002                     	;# 
   403     0003                     	;# 
   404     0004                     	;# 
   405     0005                     	;# 
   406     0006                     	;# 
   407     0007                     	;# 
   408     000A                     	;# 
   409     000B                     	;# 
   410     000C                     	;# 
   411     000D                     	;# 
   412     000E                     	;# 
   413     000E                     	;# 
   414     000F                     	;# 
   415     0010                     	;# 
   416     0011                     	;# 
   417     0012                     	;# 
   418     0013                     	;# 
   419     0014                     	;# 
   420     0015                     	;# 
   421     0015                     	;# 
   422     0016                     	;# 
   423     0017                     	;# 
   424     0018                     	;# 
   425     0019                     	;# 
   426     001A                     	;# 
   427     001B                     	;# 
   428     001B                     	;# 
   429     001C                     	;# 
   430     001D                     	;# 
   431     001E                     	;# 
   432     001F                     	;# 
   433     0081                     	;# 
   434     0085                     	;# 
   435     0086                     	;# 
   436     0087                     	;# 
   437     008C                     	;# 
   438     008D                     	;# 
   439     008E                     	;# 
   440     0091                     	;# 
   441     0092                     	;# 
   442     0093                     	;# 
   443     0094                     	;# 
   444     0098                     	;# 
   445     0099                     	;# 
   446     009C                     	;# 
   447     009D                     	;# 
   448     009E                     	;# 
   449     009F                     	;# 
   450     010C                     	;# 
   451     010D                     	;# 
   452     010E                     	;# 
   453     010F                     	;# 
   454     018C                     	;# 
   455     018D                     	;# 
   456     0000                     	;# 
   457     0001                     	;# 
   458     0002                     	;# 
   459     0003                     	;# 
   460     0004                     	;# 
   461     0005                     	;# 
   462     0006                     	;# 
   463     0007                     	;# 
   464     000A                     	;# 
   465     000B                     	;# 
   466     000C                     	;# 
   467     000D                     	;# 
   468     000E                     	;# 
   469     000E                     	;# 
   470     000F                     	;# 
   471     0010                     	;# 
   472     0011                     	;# 
   473     0012                     	;# 
   474     0013                     	;# 
   475     0014                     	;# 
   476     0015                     	;# 
   477     0015                     	;# 
   478     0016                     	;# 
   479     0017                     	;# 
   480     0018                     	;# 
   481     0019                     	;# 
   482     001A                     	;# 
   483     001B                     	;# 
   484     001B                     	;# 
   485     001C                     	;# 
   486     001D                     	;# 
   487     001E                     	;# 
   488     001F                     	;# 
   489     0081                     	;# 
   490     0085                     	;# 
   491     0086                     	;# 
   492     0087                     	;# 
   493     008C                     	;# 
   494     008D                     	;# 
   495     008E                     	;# 
   496     0091                     	;# 
   497     0092                     	;# 
   498     0093                     	;# 
   499     0094                     	;# 
   500     0098                     	;# 
   501     0099                     	;# 
   502     009C                     	;# 
   503     009D                     	;# 
   504     009E                     	;# 
   505     009F                     	;# 
   506     010C                     	;# 
   507     010D                     	;# 
   508     010E                     	;# 
   509     010F                     	;# 
   510     018C                     	;# 
   511     018D                     	;# 
   512     0015                     _CCPR1L	set	21
   513     0019                     _TXREG	set	25
   514     0018                     _RCSTAbits	set	24
   515     001A                     _RCREG	set	26
   516     0018                     _RCSTA	set	24
   517     0001                     _TMR0	set	1
   518     0007                     _PORTC	set	7
   519     0006                     _PORTB	set	6
   520     0005                     _PORTA	set	5
   521     0005                     _PORTAbits	set	5
   522     0017                     _CCP1CON	set	23
   523     0007                     _PORTCbits	set	7
   524     0006                     _PORTBbits	set	6
   525     0012                     _T2CON	set	18
   526     000C                     _PIR1bits	set	12
   527     000B                     _INTCONbits	set	11
   528     0099                     _SPBRG	set	153
   529     0098                     _TXSTA	set	152
   530     0081                     _OPTION_REG	set	129
   531     009F                     _ADCON1	set	159
   532     0087                     _TRISC	set	135
   533     0086                     _TRISB	set	134
   534     0085                     _TRISA	set	133
   535     0092                     _PR2	set	146
   536     008C                     _PIE1bits	set	140
   537                           
   538                           	psect	cinit
   539     0011                     start_initialization:	
   540                           ; #config settings
   541                           
   542     0011                     __initialization:
   543                           
   544                           ; Clear objects allocated to COMMON
   545     0011  01F6               	clrf	__pbssCOMMON& (0+127)
   546     0012  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   547     0013  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   548     0014  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   549                           
   550                           ; Clear objects allocated to BANK0
   551     0015  1383               	bcf	3,7	;select IRP bank0
   552     0016  3020               	movlw	low __pbssBANK0
   553     0017  0084               	movwf	4
   554     0018  3042               	movlw	low (__pbssBANK0+34)
   555     0019  120A  118A  2746  120A  118A  	fcall	clear_ram0
   556     001E                     end_of_initialization:	
   557                           ;End of C runtime variable initialization code
   558                           
   559     001E                     __end_of__initialization:
   560     001E  0183               	clrf	3
   561     001F  120A  118A  2822   	ljmp	_main	;jump to C main() function
   562                           
   563                           	psect	bssCOMMON
   564     0076                     __pbssCOMMON:
   565     0076                     _estado:
   566     0076                     	ds	2
   567     0078                     _comunicacao:
   568     0078                     	ds	1
   569     0079                     _endereco:
   570     0079                     	ds	1
   571                           
   572                           	psect	bssBANK0
   573     0020                     __pbssBANK0:
   574     0020                     _rxBuffer:
   575     0020                     	ds	3
   576     0023                     _escravo:
   577     0023                     	ds	2
   578     0025                     _pwm_atual:
   579     0025                     	ds	2
   580     0027                     _pwm_setado:
   581     0027                     	ds	2
   582     0029                     _timerpwm:
   583     0029                     	ds	2
   584     002B                     _timer:
   585     002B                     	ds	2
   586     002D                     _timerbotao2:
   587     002D                     	ds	2
   588     002F                     _timerbotao1:
   589     002F                     	ds	2
   590     0031                     _rxCount:
   591     0031                     	ds	1
   592     0032                     _estagio@main$F711:
   593     0032                     	ds	1
   594     0033                     _estagio@main$F561:
   595     0033                     	ds	1
   596     0034                     _estagio@main$F463:
   597     0034                     	ds	1
   598     0035                     _estagio:
   599     0035                     	ds	1
   600     0036                     _ciclos:
   601     0036                     	ds	1
   602     0037                     _addressFail:
   603     0037                     	ds	1
   604     0038                     _countFailRx:
   605     0038                     	ds	1
   606     0039                     _pecaOK:
   607     0039                     	ds	1
   608     003A                     _sincronismo:
   609     003A                     	ds	1
   610     003B                     _naodesliga:
   611     003B                     	ds	1
   612     003C                     _naoliga:
   613     003C                     	ds	1
   614     003D                     _timeoutRx:
   615     003D                     	ds	1
   616     003E                     _timerchavecopo:
   617     003E                     	ds	1
   618     003F                     _timerchaveNA:
   619     003F                     	ds	1
   620     0040                     _timerchaveNF:
   621     0040                     	ds	1
   622     0041                     _timerfimcurso:
   623     0041                     	ds	1
   624                           
   625                           	psect	clrtext
   626     0746                     clear_ram0:	
   627                           ;	Called with FSR containing the base address, and
   628                           ;	W with the last address+1
   629                           
   630     0746  0064               	clrwdt	;clear the watchdog before getting into this loop
   631     0747                     clrloop0:
   632     0747  0180               	clrf	0	;clear RAM location pointed to by FSR
   633     0748  0A84               	incf	4,f	;increment pointer
   634     0749  0604               	xorwf	4,w	;XOR with final address
   635     074A  1903               	btfsc	3,2	;have we reached the end yet?
   636     074B  3400               	retlw	0	;all done for this memory range, return
   637     074C  0604               	xorwf	4,w	;XOR again to restore value
   638     074D  2F47               	goto	clrloop0	;do the next byte
   639                           
   640                           	psect	cstackCOMMON
   641     0070                     __pcstackCOMMON:
   642     0070                     ?_TMR0_ISR:
   643     0070                     ??_TMR0_ISR:	
   644                           ; 1 bytes @ 0x0
   645                           
   646     0070                     ?_USART_RX_ISR:	
   647                           ; 1 bytes @ 0x0
   648                           
   649     0070                     ??_USART_RX_ISR:	
   650                           ; 1 bytes @ 0x0
   651                           
   652     0070                     ?_PinManager_Initialize:	
   653                           ; 1 bytes @ 0x0
   654                           
   655     0070                     ?_PWM_Initialize:	
   656                           ; 1 bytes @ 0x0
   657                           
   658     0070                     ?_TMR0_Initialize:	
   659                           ; 1 bytes @ 0x0
   660                           
   661     0070                     ?_USART_Initialize:	
   662                           ; 1 bytes @ 0x0
   663                           
   664     0070                     ?_USART_Write:	
   665                           ; 1 bytes @ 0x0
   666                           
   667     0070                     ?_USART_RX_Ready:	
   668                           ; 1 bytes @ 0x0
   669                           
   670     0070                     ?_USART_RX_Clear_Buffer:	
   671                           ; 1 bytes @ 0x0
   672                           
   673     0070                     ?_USART_Read:	
   674                           ; 1 bytes @ 0x0
   675                           
   676     0070                     ?_InterruptManager:	
   677                           ; 1 bytes @ 0x0
   678                           
   679     0070                     ?_Interrupt_Enable:	
   680                           ; 1 bytes @ 0x0
   681                           
   682     0070                     ?_main:	
   683                           ; 1 bytes @ 0x0
   684                           
   685                           
   686                           ; 1 bytes @ 0x0
   687     0070                     	ds	1
   688     0071                     ??_InterruptManager:
   689                           
   690                           ; 1 bytes @ 0x1
   691     0071                     	ds	3
   692     0074                     ??_PinManager_Initialize:
   693     0074                     ??_TMR0_Initialize:	
   694                           ; 1 bytes @ 0x4
   695                           
   696     0074                     ??_USART_Initialize:	
   697                           ; 1 bytes @ 0x4
   698                           
   699     0074                     ??_USART_Write:	
   700                           ; 1 bytes @ 0x4
   701                           
   702     0074                     ?_PWM_LoadDutyValue:	
   703                           ; 1 bytes @ 0x4
   704                           
   705     0074                     ??_USART_RX_Ready:	
   706                           ; 1 bytes @ 0x4
   707                           
   708     0074                     ??_USART_RX_Clear_Buffer:	
   709                           ; 1 bytes @ 0x4
   710                           
   711     0074                     ??_USART_Read:	
   712                           ; 1 bytes @ 0x4
   713                           
   714     0074                     ??_Interrupt_Enable:	
   715                           ; 1 bytes @ 0x4
   716                           
   717     0074                     USART_Read@data:	
   718                           ; 1 bytes @ 0x4
   719                           
   720     0074                     USART_Write@data:	
   721                           ; 1 bytes @ 0x4
   722                           
   723     0074                     PWM_LoadDutyValue@dutyValue:	
   724                           ; 1 bytes @ 0x4
   725                           
   726                           
   727                           ; 2 bytes @ 0x4
   728     0074                     	ds	2
   729     0076                     ??_PWM_Initialize:
   730                           
   731                           	psect	cstackBANK0
   732     0042                     __pcstackBANK0:	
   733                           ; 1 bytes @ 0x6
   734                           
   735     0042                     ??_PWM_LoadDutyValue:
   736                           
   737                           ; 1 bytes @ 0x0
   738     0042                     	ds	2
   739     0044                     ??_main:
   740                           
   741                           ; 1 bytes @ 0x2
   742     0044                     	ds	2
   743                           
   744                           	psect	maintext
   745     0022                     __pmaintext:	
   746 ;;
   747 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   748 ;;
   749 ;; *************** function _main *****************
   750 ;; Defined at:
   751 ;;		line 17 in file "main.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;		None
   754 ;; Auto vars:     Size  Location     Type
   755 ;;		None
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : B00/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   765 ;;      Params:         0       0       0       0       0
   766 ;;      Locals:         0       0       0       0       0
   767 ;;      Temps:          0       2       0       0       0
   768 ;;      Totals:         0       2       0       0       0
   769 ;;Total ram usage:        2 bytes
   770 ;; Hardware stack levels required when called: 4
   771 ;; This function calls:
   772 ;;		_Interrupt_Enable
   773 ;;		_PWM_Initialize
   774 ;;		_PWM_LoadDutyValue
   775 ;;		_PinManager_Initialize
   776 ;;		_TMR0_Initialize
   777 ;;		_USART_Initialize
   778 ;;		_USART_RX_Clear_Buffer
   779 ;;		_USART_RX_Ready
   780 ;;		_USART_Read
   781 ;;		_USART_Write
   782 ;; This function is called by:
   783 ;;		Startup code after reset
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787     0022                     _main:	
   788                           ;psect for function _main
   789                           
   790     0022                     l2711:	
   791                           ;incstack = 0
   792                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   793                           
   794                           
   795                           ;main.c: 19:     PinManager_Initialize();
   796     0022  120A  118A  2703  120A  118A  	fcall	_PinManager_Initialize
   797                           
   798                           ;main.c: 20:     PWM_Initialize();
   799     0027  120A  118A  26EE  120A  118A  	fcall	_PWM_Initialize
   800                           
   801                           ;main.c: 21:     TMR0_Initialize();
   802     002C  120A  118A  273C  120A  118A  	fcall	_TMR0_Initialize
   803                           
   804                           ;main.c: 22:     USART_Initialize();
   805     0031  120A  118A  2715  120A  118A  	fcall	_USART_Initialize
   806     0036                     l2713:
   807                           
   808                           ;main.c: 23:     Interrupt_Enable();
   809     0036  120A  118A  2756  120A  118A  	fcall	_Interrupt_Enable
   810                           
   811                           ;main.c: 25:     PR2 = 0xFF;
   812     003B  30FF               	movlw	255
   813     003C  1683               	bsf	3,5	;RP0=1, select bank1
   814     003D  1303               	bcf	3,6	;RP1=0, select bank1
   815     003E  0092               	movwf	18	;volatile
   816                           
   817                           ;main.c: 26:     T2CON = 0b00000111;
   818     003F  3007               	movlw	7
   819     0040  1283               	bcf	3,5	;RP0=0, select bank0
   820     0041  1303               	bcf	3,6	;RP1=0, select bank0
   821     0042  0092               	movwf	18	;volatile
   822     0043                     l2715:
   823                           
   824                           ;main.c: 28:     estagio = INTERROMPIDO;
   825     0043  01B5               	clrf	_estagio
   826     0044                     l2717:
   827                           
   828                           ;main.c: 29:     estado.botao1 = 0;
   829     0044  1076               	bcf	_estado,0
   830     0045                     l2719:
   831                           
   832                           ;main.c: 30:     estado.botao2 = 0;
   833     0045  10F6               	bcf	_estado,1
   834     0046                     l2721:
   835                           
   836                           ;main.c: 31:     estado.fimcurso = 0;
   837     0046  1176               	bcf	_estado,2
   838     0047                     l2723:
   839                           
   840                           ;main.c: 32:     estado.chaveNF = 0;
   841     0047  11F6               	bcf	_estado,3
   842     0048                     l2725:
   843                           
   844                           ;main.c: 33:     estado.chaveNA = 0;
   845     0048  1276               	bcf	_estado,4
   846     0049                     l2727:
   847                           
   848                           ;main.c: 34:     estado.chavecopo = 0;
   849     0049  12F6               	bcf	_estado,5
   850     004A                     l2729:
   851                           
   852                           ;main.c: 35:     timerbotao1 = 0;
   853     004A  01AF               	clrf	_timerbotao1
   854     004B  01B0               	clrf	_timerbotao1+1
   855     004C                     l2731:
   856                           
   857                           ;main.c: 36:     timerbotao2 = 0;
   858     004C  01AD               	clrf	_timerbotao2
   859     004D  01AE               	clrf	_timerbotao2+1
   860     004E                     l2733:
   861                           
   862                           ;main.c: 37:     timerfimcurso = 0;
   863     004E  01C1               	clrf	_timerfimcurso
   864     004F                     l2735:
   865                           
   866                           ;main.c: 38:     timerchaveNF = 0;
   867     004F  01C0               	clrf	_timerchaveNF
   868     0050                     l2737:
   869                           
   870                           ;main.c: 39:     timerchaveNA = 0;
   871     0050  01BF               	clrf	_timerchaveNA
   872     0051                     l2739:
   873                           
   874                           ;main.c: 40:     timerchavecopo = 0;
   875     0051  01BE               	clrf	_timerchavecopo
   876     0052                     l2741:
   877                           
   878                           ;main.c: 41:     timerpwm = 0;
   879     0052  01A9               	clrf	_timerpwm
   880     0053  01AA               	clrf	_timerpwm+1
   881     0054                     l2743:
   882                           
   883                           ;main.c: 42:     pwm_setado = 0;
   884     0054  01A7               	clrf	_pwm_setado
   885     0055  01A8               	clrf	_pwm_setado+1
   886     0056                     l106:	
   887                           ;main.c: 44:     while(1)
   888                           
   889     0056  0064               	clrwdt	;# 
   890     0057                     l2745:
   891                           
   892                           ;main.c: 48:         if(PORTBbits.RB0 == 0)
   893     0057  1283               	bcf	3,5	;RP0=0, select bank0
   894     0058  1303               	bcf	3,6	;RP1=0, select bank0
   895     0059  1806               	btfsc	6,0	;volatile
   896     005A  285C               	goto	u2081
   897     005B  285D               	goto	u2080
   898     005C                     u2081:
   899     005C  286C               	goto	l2753
   900     005D                     u2080:
   901     005D                     l2747:
   902                           
   903                           ;main.c: 49:         {;main.c: 50:             if(estado.botao1 == 0)
   904     005D  1876               	btfsc	_estado,0
   905     005E  2860               	goto	u2091
   906     005F  2861               	goto	u2090
   907     0060                     u2091:
   908     0060  286F               	goto	l2757
   909     0061                     u2090:
   910     0061                     l2749:
   911                           
   912                           ;main.c: 51:             {;main.c: 52:                 if(timerbotao1 > 100)
   913     0061  3000               	movlw	0
   914     0062  0230               	subwf	_timerbotao1+1,w
   915     0063  3065               	movlw	101
   916     0064  1903               	skipnz
   917     0065  022F               	subwf	_timerbotao1,w
   918     0066  1C03               	skipc
   919     0067  2869               	goto	u2101
   920     0068  286A               	goto	u2100
   921     0069                     u2101:
   922     0069  286F               	goto	l2757
   923     006A                     u2100:
   924     006A                     l2751:
   925                           
   926                           ;main.c: 53:                     estado.botao1 = 1;
   927     006A  1476               	bsf	_estado,0
   928     006B  286F               	goto	l2757
   929     006C                     l2753:
   930                           
   931                           ;main.c: 57:         {;main.c: 58:             timerbotao1 = 0;
   932     006C  01AF               	clrf	_timerbotao1
   933     006D  01B0               	clrf	_timerbotao1+1
   934     006E                     l2755:
   935                           
   936                           ;main.c: 59:             estado.botao1 = 0;
   937     006E  1076               	bcf	_estado,0
   938     006F                     l2757:
   939                           
   940                           ;main.c: 62:         if(PORTBbits.RB1 == 0)
   941     006F  1886               	btfsc	6,1	;volatile
   942     0070  2872               	goto	u2111
   943     0071  2873               	goto	u2110
   944     0072                     u2111:
   945     0072  2882               	goto	l2765
   946     0073                     u2110:
   947     0073                     l2759:
   948                           
   949                           ;main.c: 63:         {;main.c: 64:             if(estado.botao2 == 0)
   950     0073  18F6               	btfsc	_estado,1
   951     0074  2876               	goto	u2121
   952     0075  2877               	goto	u2120
   953     0076                     u2121:
   954     0076  2885               	goto	l2769
   955     0077                     u2120:
   956     0077                     l2761:
   957                           
   958                           ;main.c: 65:             {;main.c: 66:                 if(timerbotao2 > 100)
   959     0077  3000               	movlw	0
   960     0078  022E               	subwf	_timerbotao2+1,w
   961     0079  3065               	movlw	101
   962     007A  1903               	skipnz
   963     007B  022D               	subwf	_timerbotao2,w
   964     007C  1C03               	skipc
   965     007D  287F               	goto	u2131
   966     007E  2880               	goto	u2130
   967     007F                     u2131:
   968     007F  2885               	goto	l2769
   969     0080                     u2130:
   970     0080                     l2763:
   971                           
   972                           ;main.c: 67:                     estado.botao2 = 1;
   973     0080  14F6               	bsf	_estado,1
   974     0081  2885               	goto	l2769
   975     0082                     l2765:
   976                           
   977                           ;main.c: 71:         {;main.c: 72:             timerbotao2 = 0;
   978     0082  01AD               	clrf	_timerbotao2
   979     0083  01AE               	clrf	_timerbotao2+1
   980     0084                     l2767:
   981                           
   982                           ;main.c: 73:             estado.botao2 = 0;
   983     0084  10F6               	bcf	_estado,1
   984     0085                     l2769:
   985                           
   986                           ;main.c: 76:         if(PORTBbits.RB2 == 0)
   987     0085  1906               	btfsc	6,2	;volatile
   988     0086  2888               	goto	u2141
   989     0087  2889               	goto	u2140
   990     0088                     u2141:
   991     0088  2895               	goto	l2777
   992     0089                     u2140:
   993     0089                     l2771:
   994                           
   995                           ;main.c: 77:         {;main.c: 78:             if(estado.fimcurso == 0)
   996     0089  1976               	btfsc	_estado,2
   997     008A  288C               	goto	u2151
   998     008B  288D               	goto	u2150
   999     008C                     u2151:
  1000     008C  28A7               	goto	l2793
  1001     008D                     u2150:
  1002     008D                     l2773:
  1003                           
  1004                           ;main.c: 79:             {;main.c: 80:                 if(timerfimcurso > 100)
  1005     008D  3065               	movlw	101
  1006     008E  0241               	subwf	_timerfimcurso,w
  1007     008F  1C03               	skipc
  1008     0090  2892               	goto	u2161
  1009     0091  2893               	goto	u2160
  1010     0092                     u2161:
  1011     0092  28A7               	goto	l2793
  1012     0093                     u2160:
  1013     0093                     l2775:
  1014                           
  1015                           ;main.c: 81:                     estado.fimcurso = 1;
  1016     0093  1576               	bsf	_estado,2
  1017     0094  28A7               	goto	l2793
  1018     0095                     l2777:
  1019                           
  1020                           ;main.c: 85:         {;main.c: 86:             timerfimcurso = 0;
  1021     0095  01C1               	clrf	_timerfimcurso
  1022     0096                     l2779:
  1023                           
  1024                           ;main.c: 87:             estado.fimcurso = 0;
  1025     0096  1176               	bcf	_estado,2
  1026     0097                     l2781:
  1027                           
  1028                           ;main.c: 88:             if(estado.testando == 1)
  1029     0097  1F76               	btfss	_estado,6
  1030     0098  289A               	goto	u2171
  1031     0099  289B               	goto	u2170
  1032     009A                     u2171:
  1033     009A  28A7               	goto	l2793
  1034     009B                     u2170:
  1035     009B                     l2783:
  1036                           
  1037                           ;main.c: 89:             {;main.c: 90:                 estagio = INTERROMPIDO;
  1038     009B  01B5               	clrf	_estagio
  1039     009C                     l2785:
  1040                           
  1041                           ;main.c: 91:                 estado.testando = 0;
  1042     009C  1376               	bcf	_estado,6
  1043     009D                     l2787:
  1044                           
  1045                           ;main.c: 92:                 comunicacao.endereco = 0x0F;
  1046     009D  300F               	movlw	15
  1047     009E  04F8               	iorwf	_comunicacao,f
  1048     009F                     l2789:
  1049                           
  1050                           ;main.c: 93:                 comunicacao.resposta = 0x00;
  1051     009F  300F               	movlw	-241
  1052     00A0  05F8               	andwf	_comunicacao,f
  1053     00A1                     l2791:
  1054                           
  1055                           ;main.c: 94:                 USART_Write(comunicacao.byte);
  1056     00A1  0878               	movf	_comunicacao,w
  1057     00A2  120A  118A  2732  120A  118A  	fcall	_USART_Write
  1058     00A7                     l2793:
  1059                           
  1060                           ;main.c: 98:         if(PORTBbits.RB3 == 0)
  1061     00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1062     00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1063     00A9  1986               	btfsc	6,3	;volatile
  1064     00AA  28AC               	goto	u2181
  1065     00AB  28AD               	goto	u2180
  1066     00AC                     u2181:
  1067     00AC  28BA               	goto	l2801
  1068     00AD                     u2180:
  1069     00AD                     l2795:
  1070                           
  1071                           ;main.c: 99:         {;main.c: 100:             if(estado.chaveNF == 0)
  1072     00AD  19F6               	btfsc	_estado,3
  1073     00AE  28B0               	goto	u2191
  1074     00AF  28B1               	goto	u2190
  1075     00B0                     u2191:
  1076     00B0  28BD               	goto	l2807
  1077     00B1                     u2190:
  1078     00B1                     l2797:
  1079                           
  1080                           ;main.c: 101:             {;main.c: 102:                 if(timerchaveNF > 100)
  1081     00B1  3065               	movlw	101
  1082     00B2  0240               	subwf	_timerchaveNF,w
  1083     00B3  1C03               	skipc
  1084     00B4  28B6               	goto	u2201
  1085     00B5  28B7               	goto	u2200
  1086     00B6                     u2201:
  1087     00B6  28BD               	goto	l2807
  1088     00B7                     u2200:
  1089     00B7                     l2799:
  1090                           
  1091                           ;main.c: 103:                 {;main.c: 104:                     estado.chaveNF = 1;
  1092     00B7  15F6               	bsf	_estado,3
  1093                           
  1094                           ;main.c: 105:                     PORTCbits.RC0 = 1;
  1095     00B8  1407               	bsf	7,0	;volatile
  1096     00B9  28BD               	goto	l2807
  1097     00BA                     l2801:
  1098                           
  1099                           ;main.c: 110:         {;main.c: 111:             timerchaveNF = 0;
  1100     00BA  01C0               	clrf	_timerchaveNF
  1101     00BB                     l2803:
  1102                           
  1103                           ;main.c: 112:             estado.chaveNF = 0;
  1104     00BB  11F6               	bcf	_estado,3
  1105     00BC                     l2805:
  1106                           
  1107                           ;main.c: 113:             PORTCbits.RC0 = 0;
  1108     00BC  1007               	bcf	7,0	;volatile
  1109     00BD                     l2807:
  1110                           
  1111                           ;main.c: 116:         if(PORTBbits.RB4 == 0)
  1112     00BD  1A06               	btfsc	6,4	;volatile
  1113     00BE  28C0               	goto	u2211
  1114     00BF  28C1               	goto	u2210
  1115     00C0                     u2211:
  1116     00C0  28CE               	goto	l2815
  1117     00C1                     u2210:
  1118     00C1                     l2809:
  1119                           
  1120                           ;main.c: 117:         {;main.c: 118:             if(estado.chaveNA == 0)
  1121     00C1  1A76               	btfsc	_estado,4
  1122     00C2  28C4               	goto	u2221
  1123     00C3  28C5               	goto	u2220
  1124     00C4                     u2221:
  1125     00C4  28D1               	goto	l2821
  1126     00C5                     u2220:
  1127     00C5                     l2811:
  1128                           
  1129                           ;main.c: 119:             {;main.c: 120:                 if(timerchaveNA > 100)
  1130     00C5  3065               	movlw	101
  1131     00C6  023F               	subwf	_timerchaveNA,w
  1132     00C7  1C03               	skipc
  1133     00C8  28CA               	goto	u2231
  1134     00C9  28CB               	goto	u2230
  1135     00CA                     u2231:
  1136     00CA  28D1               	goto	l2821
  1137     00CB                     u2230:
  1138     00CB                     l2813:
  1139                           
  1140                           ;main.c: 121:                 {;main.c: 122:                     estado.chaveNA = 1;
  1141     00CB  1676               	bsf	_estado,4
  1142                           
  1143                           ;main.c: 123:                     PORTCbits.RC1 = 1;
  1144     00CC  1487               	bsf	7,1	;volatile
  1145     00CD  28D1               	goto	l2821
  1146     00CE                     l2815:
  1147                           
  1148                           ;main.c: 128:         {;main.c: 129:             timerchaveNA = 0;
  1149     00CE  01BF               	clrf	_timerchaveNA
  1150     00CF                     l2817:
  1151                           
  1152                           ;main.c: 130:             estado.chaveNA = 0;
  1153     00CF  1276               	bcf	_estado,4
  1154     00D0                     l2819:
  1155                           
  1156                           ;main.c: 131:             PORTCbits.RC1 = 0;
  1157     00D0  1087               	bcf	7,1	;volatile
  1158     00D1                     l2821:
  1159                           
  1160                           ;main.c: 134:         if(PORTBbits.RB5 == 0)
  1161     00D1  1A86               	btfsc	6,5	;volatile
  1162     00D2  28D4               	goto	u2241
  1163     00D3  28D5               	goto	u2240
  1164     00D4                     u2241:
  1165     00D4  28E1               	goto	l2829
  1166     00D5                     u2240:
  1167     00D5                     l2823:
  1168                           
  1169                           ;main.c: 135:         {;main.c: 136:             if(estado.chavecopo == 0)
  1170     00D5  1AF6               	btfsc	_estado,5
  1171     00D6  28D8               	goto	u2251
  1172     00D7  28D9               	goto	u2250
  1173     00D8                     u2251:
  1174     00D8  28E3               	goto	l2833
  1175     00D9                     u2250:
  1176     00D9                     l2825:
  1177                           
  1178                           ;main.c: 137:             {;main.c: 138:                 if(timerchavecopo > 100)
  1179     00D9  3065               	movlw	101
  1180     00DA  023E               	subwf	_timerchavecopo,w
  1181     00DB  1C03               	skipc
  1182     00DC  28DE               	goto	u2261
  1183     00DD  28DF               	goto	u2260
  1184     00DE                     u2261:
  1185     00DE  28E3               	goto	l2833
  1186     00DF                     u2260:
  1187     00DF                     l2827:
  1188                           
  1189                           ;main.c: 139:                     estado.chavecopo = 1;
  1190     00DF  16F6               	bsf	_estado,5
  1191     00E0  28E3               	goto	l2833
  1192     00E1                     l2829:
  1193                           
  1194                           ;main.c: 143:         {;main.c: 144:             timerchavecopo = 0;
  1195     00E1  01BE               	clrf	_timerchavecopo
  1196     00E2                     l2831:
  1197                           
  1198                           ;main.c: 145:             estado.chavecopo = 0;
  1199     00E2  12F6               	bcf	_estado,5
  1200     00E3                     l2833:
  1201                           
  1202                           ;main.c: 148:         if(pwm_setado == 105)
  1203     00E3  3069               	movlw	105
  1204     00E4  0627               	xorwf	_pwm_setado,w
  1205     00E5  0428               	iorwf	_pwm_setado+1,w
  1206     00E6  1D03               	btfss	3,2
  1207     00E7  28E9               	goto	u2271
  1208     00E8  28EA               	goto	u2270
  1209     00E9                     u2271:
  1210     00E9  290A               	goto	l2847
  1211     00EA                     u2270:
  1212     00EA                     l2835:
  1213                           
  1214                           ;main.c: 149:         {;main.c: 150:             if(pwm_atual == 0)
  1215     00EA  0825               	movf	_pwm_atual,w
  1216     00EB  0426               	iorwf	_pwm_atual+1,w
  1217     00EC  1D03               	btfss	3,2
  1218     00ED  28EF               	goto	u2281
  1219     00EE  28F0               	goto	u2280
  1220     00EF                     u2281:
  1221     00EF  28F8               	goto	l2841
  1222     00F0                     u2280:
  1223     00F0                     l2837:
  1224                           
  1225                           ;main.c: 151:             {;main.c: 152:                 PORTCbits.RC2 = 1;
  1226     00F0  1507               	bsf	7,2	;volatile
  1227     00F1                     l2839:
  1228                           
  1229                           ;main.c: 153:                 pwm_atual++;
  1230     00F1  3001               	movlw	1
  1231     00F2  07A5               	addwf	_pwm_atual,f
  1232     00F3  1803               	skipnc
  1233     00F4  0AA6               	incf	_pwm_atual+1,f
  1234     00F5  3000               	movlw	0
  1235     00F6  07A6               	addwf	_pwm_atual+1,f
  1236                           
  1237                           ;main.c: 154:             }
  1238     00F7  290A               	goto	l2847
  1239     00F8                     l2841:
  1240                           
  1241                           ;main.c: 156:             {;main.c: 157:                 if(pwm_atual == 105)
  1242     00F8  3069               	movlw	105
  1243     00F9  0625               	xorwf	_pwm_atual,w
  1244     00FA  0426               	iorwf	_pwm_atual+1,w
  1245     00FB  1D03               	btfss	3,2
  1246     00FC  28FE               	goto	u2291
  1247     00FD  28FF               	goto	u2290
  1248     00FE                     u2291:
  1249     00FE  290A               	goto	l2847
  1250     00FF                     u2290:
  1251     00FF                     l2843:
  1252                           
  1253                           ;main.c: 158:                 {;main.c: 159:                     CCP1CON = 0b00001111;
  1254     00FF  300F               	movlw	15
  1255     0100  0097               	movwf	23	;volatile
  1256     0101                     l2845:
  1257                           
  1258                           ;main.c: 160:                     PWM_LoadDutyValue(105);
  1259     0101  3069               	movlw	105
  1260     0102  00F4               	movwf	PWM_LoadDutyValue@dutyValue
  1261     0103  3000               	movlw	0
  1262     0104  00F5               	movwf	PWM_LoadDutyValue@dutyValue+1
  1263     0105  120A  118A  26D3  120A  118A  	fcall	_PWM_LoadDutyValue
  1264     010A                     l2847:
  1265                           
  1266                           ;main.c: 165:         if(pwm_setado == 170)
  1267     010A  30AA               	movlw	170
  1268     010B  1283               	bcf	3,5	;RP0=0, select bank0
  1269     010C  1303               	bcf	3,6	;RP1=0, select bank0
  1270     010D  0627               	xorwf	_pwm_setado,w
  1271     010E  0428               	iorwf	_pwm_setado+1,w
  1272     010F  1D03               	btfss	3,2
  1273     0110  2912               	goto	u2301
  1274     0111  2913               	goto	u2300
  1275     0112                     u2301:
  1276     0112  2933               	goto	l2861
  1277     0113                     u2300:
  1278     0113                     l2849:
  1279                           
  1280                           ;main.c: 166:         {;main.c: 167:             if(pwm_atual == 0)
  1281     0113  0825               	movf	_pwm_atual,w
  1282     0114  0426               	iorwf	_pwm_atual+1,w
  1283     0115  1D03               	btfss	3,2
  1284     0116  2918               	goto	u2311
  1285     0117  2919               	goto	u2310
  1286     0118                     u2311:
  1287     0118  2921               	goto	l2855
  1288     0119                     u2310:
  1289     0119                     l2851:
  1290                           
  1291                           ;main.c: 168:             {;main.c: 169:                 PORTCbits.RC2 = 1;
  1292     0119  1507               	bsf	7,2	;volatile
  1293     011A                     l2853:
  1294                           
  1295                           ;main.c: 170:                 pwm_atual++;
  1296     011A  3001               	movlw	1
  1297     011B  07A5               	addwf	_pwm_atual,f
  1298     011C  1803               	skipnc
  1299     011D  0AA6               	incf	_pwm_atual+1,f
  1300     011E  3000               	movlw	0
  1301     011F  07A6               	addwf	_pwm_atual+1,f
  1302                           
  1303                           ;main.c: 171:             }
  1304     0120  2933               	goto	l2861
  1305     0121                     l2855:
  1306                           
  1307                           ;main.c: 173:             {;main.c: 174:                 if(pwm_atual == 170)
  1308     0121  30AA               	movlw	170
  1309     0122  0625               	xorwf	_pwm_atual,w
  1310     0123  0426               	iorwf	_pwm_atual+1,w
  1311     0124  1D03               	btfss	3,2
  1312     0125  2927               	goto	u2321
  1313     0126  2928               	goto	u2320
  1314     0127                     u2321:
  1315     0127  2933               	goto	l2861
  1316     0128                     u2320:
  1317     0128                     l2857:
  1318                           
  1319                           ;main.c: 175:                 {;main.c: 176:                     CCP1CON = 0b00001111;
  1320     0128  300F               	movlw	15
  1321     0129  0097               	movwf	23	;volatile
  1322     012A                     l2859:
  1323                           
  1324                           ;main.c: 177:                     PWM_LoadDutyValue(170);
  1325     012A  30AA               	movlw	170
  1326     012B  00F4               	movwf	PWM_LoadDutyValue@dutyValue
  1327     012C  3000               	movlw	0
  1328     012D  00F5               	movwf	PWM_LoadDutyValue@dutyValue+1
  1329     012E  120A  118A  26D3  120A  118A  	fcall	_PWM_LoadDutyValue
  1330     0133                     l2861:
  1331                           
  1332                           ;main.c: 182:         if(pwm_setado == 0)
  1333     0133  1283               	bcf	3,5	;RP0=0, select bank0
  1334     0134  1303               	bcf	3,6	;RP1=0, select bank0
  1335     0135  0827               	movf	_pwm_setado,w
  1336     0136  0428               	iorwf	_pwm_setado+1,w
  1337     0137  1D03               	btfss	3,2
  1338     0138  293A               	goto	u2331
  1339     0139  293B               	goto	u2330
  1340     013A                     u2331:
  1341     013A  293F               	goto	l2867
  1342     013B                     u2330:
  1343     013B                     l2863:
  1344                           
  1345                           ;main.c: 183:         {;main.c: 184:             CCP1CON = 0b00000000;
  1346     013B  0197               	clrf	23	;volatile
  1347     013C                     l2865:
  1348                           
  1349                           ;main.c: 185:             PORTCbits.RC2 = 0;
  1350     013C  1107               	bcf	7,2	;volatile
  1351                           
  1352                           ;main.c: 186:             pwm_atual = 0;
  1353     013D  01A5               	clrf	_pwm_atual
  1354     013E  01A6               	clrf	_pwm_atual+1
  1355     013F                     l2867:
  1356                           
  1357                           ;main.c: 189:         if(timerpwm > 10)
  1358     013F  3000               	movlw	0
  1359     0140  022A               	subwf	_timerpwm+1,w
  1360     0141  300B               	movlw	11
  1361     0142  1903               	skipnz
  1362     0143  0229               	subwf	_timerpwm,w
  1363     0144  1C03               	skipc
  1364     0145  2947               	goto	u2341
  1365     0146  2948               	goto	u2340
  1366     0147                     u2341:
  1367     0147  2DF4               	goto	l3285
  1368     0148                     u2340:
  1369     0148                     l2869:
  1370                           
  1371                           ;main.c: 190:         {;main.c: 191:             timerpwm = 0;
  1372     0148  01A9               	clrf	_timerpwm
  1373     0149  01AA               	clrf	_timerpwm+1
  1374     014A                     l2871:
  1375                           
  1376                           ;main.c: 192:             if(pwm_atual != pwm_setado)
  1377     014A  0828               	movf	_pwm_setado+1,w
  1378     014B  0626               	xorwf	_pwm_atual+1,w
  1379     014C  1D03               	skipz
  1380     014D  2950               	goto	u2355
  1381     014E  0827               	movf	_pwm_setado,w
  1382     014F  0625               	xorwf	_pwm_atual,w
  1383     0150                     u2355:
  1384     0150  1903               	skipnz
  1385     0151  2953               	goto	u2351
  1386     0152  2954               	goto	u2350
  1387     0153                     u2351:
  1388     0153  2DF4               	goto	l3285
  1389     0154                     u2350:
  1390     0154                     l2873:
  1391                           
  1392                           ;main.c: 193:             {;main.c: 194:                 if(pwm_atual < pwm_setado)
  1393     0154  0828               	movf	_pwm_setado+1,w
  1394     0155  0226               	subwf	_pwm_atual+1,w
  1395     0156  1D03               	skipz
  1396     0157  295A               	goto	u2365
  1397     0158  0827               	movf	_pwm_setado,w
  1398     0159  0225               	subwf	_pwm_atual,w
  1399     015A                     u2365:
  1400     015A  1803               	skipnc
  1401     015B  295D               	goto	u2361
  1402     015C  295E               	goto	u2360
  1403     015D                     u2361:
  1404     015D  2977               	goto	l2881
  1405     015E                     u2360:
  1406     015E                     l2875:
  1407                           
  1408                           ;main.c: 195:                 {;main.c: 196:                     if(pwm_atual < 1000)
  1409     015E  3003               	movlw	3
  1410     015F  0226               	subwf	_pwm_atual+1,w
  1411     0160  30E8               	movlw	232
  1412     0161  1903               	skipnz
  1413     0162  0225               	subwf	_pwm_atual,w
  1414     0163  1803               	skipnc
  1415     0164  2966               	goto	u2371
  1416     0165  2967               	goto	u2370
  1417     0166                     u2371:
  1418     0166  296D               	goto	l2879
  1419     0167                     u2370:
  1420     0167                     l2877:
  1421                           
  1422                           ;main.c: 197:                         pwm_atual++;
  1423     0167  3001               	movlw	1
  1424     0168  07A5               	addwf	_pwm_atual,f
  1425     0169  1803               	skipnc
  1426     016A  0AA6               	incf	_pwm_atual+1,f
  1427     016B  3000               	movlw	0
  1428     016C  07A6               	addwf	_pwm_atual+1,f
  1429     016D                     l2879:
  1430                           
  1431                           ;main.c: 198:                     PWM_LoadDutyValue(pwm_atual);
  1432     016D  0826               	movf	_pwm_atual+1,w
  1433     016E  00F5               	movwf	PWM_LoadDutyValue@dutyValue+1
  1434     016F  0825               	movf	_pwm_atual,w
  1435     0170  00F4               	movwf	PWM_LoadDutyValue@dutyValue
  1436     0171  120A  118A  26D3  120A  118A  	fcall	_PWM_LoadDutyValue
  1437                           
  1438                           ;main.c: 199:                 }
  1439     0176  2DF4               	goto	l3285
  1440     0177                     l2881:
  1441                           
  1442                           ;main.c: 201:                 {;main.c: 202:                     if(pwm_atual > 0)
  1443     0177  0825               	movf	_pwm_atual,w
  1444     0178  0426               	iorwf	_pwm_atual+1,w
  1445     0179  1903               	btfsc	3,2
  1446     017A  297C               	goto	u2381
  1447     017B  297D               	goto	u2380
  1448     017C                     u2381:
  1449     017C  296D               	goto	l2879
  1450     017D                     u2380:
  1451     017D                     l2883:
  1452                           
  1453                           ;main.c: 203:                         pwm_atual--;
  1454     017D  3001               	movlw	1
  1455     017E  02A5               	subwf	_pwm_atual,f
  1456     017F  3000               	movlw	0
  1457     0180  1C03               	skipc
  1458     0181  03A6               	decf	_pwm_atual+1,f
  1459     0182  02A6               	subwf	_pwm_atual+1,f
  1460     0183  296D               	goto	l2879
  1461     0184                     l2887:
  1462                           
  1463                           ;main.c: 212:             {;main.c: 213:                 if(timer < 500)
  1464     0184  3001               	movlw	1
  1465     0185  022C               	subwf	_timer+1,w
  1466     0186  30F4               	movlw	244
  1467     0187  1903               	skipnz
  1468     0188  022B               	subwf	_timer,w
  1469     0189  1803               	skipnc
  1470     018A  298C               	goto	u2391
  1471     018B  298D               	goto	u2390
  1472     018C                     u2391:
  1473     018C  2991               	goto	l149
  1474     018D                     u2390:
  1475     018D                     l2889:
  1476                           
  1477                           ;main.c: 214:                 {;main.c: 215:                     PORTAbits.RA1 = 1;
  1478     018D  1485               	bsf	5,1	;volatile
  1479                           
  1480                           ;main.c: 216:                     PORTAbits.RA3 = 1;
  1481     018E  1585               	bsf	5,3	;volatile
  1482                           
  1483                           ;main.c: 217:                     PORTAbits.RA2 = 1;
  1484     018F  1505               	bsf	5,2	;volatile
  1485                           
  1486                           ;main.c: 218:                 }
  1487     0190  299F               	goto	l150
  1488     0191                     l149:	
  1489                           ;main.c: 219:                 else
  1490                           
  1491                           
  1492                           ;main.c: 220:                 {;main.c: 221:                     PORTAbits.RA1 = 0;
  1493     0191  1085               	bcf	5,1	;volatile
  1494                           
  1495                           ;main.c: 222:                     PORTAbits.RA3 = 0;
  1496     0192  1185               	bcf	5,3	;volatile
  1497                           
  1498                           ;main.c: 223:                     PORTAbits.RA2 = 0;
  1499     0193  1105               	bcf	5,2	;volatile
  1500     0194                     l2891:
  1501                           
  1502                           ;main.c: 224:                     if(timer > (500*2))
  1503     0194  3003               	movlw	3
  1504     0195  022C               	subwf	_timer+1,w
  1505     0196  30E9               	movlw	233
  1506     0197  1903               	skipnz
  1507     0198  022B               	subwf	_timer,w
  1508     0199  1C03               	skipc
  1509     019A  299C               	goto	u2401
  1510     019B  299D               	goto	u2400
  1511     019C                     u2401:
  1512     019C  299F               	goto	l150
  1513     019D                     u2400:
  1514     019D                     l2893:
  1515                           
  1516                           ;main.c: 225:                         timer = 0;
  1517     019D  01AB               	clrf	_timer
  1518     019E  01AC               	clrf	_timer+1
  1519     019F                     l150:	
  1520                           ;main.c: 226:                 }
  1521                           
  1522                           
  1523                           ;main.c: 227:                 pwm_setado = 0;
  1524     019F  01A7               	clrf	_pwm_setado
  1525     01A0  01A8               	clrf	_pwm_setado+1
  1526     01A1                     l2895:
  1527                           
  1528                           ;main.c: 228:                 PORTCbits.RC5 = 0;
  1529     01A1  1287               	bcf	7,5	;volatile
  1530     01A2                     l2897:
  1531                           
  1532                           ;main.c: 229:                 PORTAbits.RA5 = 0;
  1533     01A2  1285               	bcf	5,5	;volatile
  1534     01A3                     l2899:
  1535                           
  1536                           ;main.c: 230:                 PORTCbits.RC4 = 0;
  1537     01A3  1207               	bcf	7,4	;volatile
  1538     01A4                     l2901:
  1539                           
  1540                           ;main.c: 231:                 if((estado.botao1 == 1) && (estado.botao2 == 1))
  1541     01A4  1C76               	btfss	_estado,0
  1542     01A5  29A7               	goto	u2411
  1543     01A6  29A8               	goto	u2410
  1544     01A7                     u2411:
  1545     01A7  2856               	goto	l106
  1546     01A8                     u2410:
  1547     01A8                     l2903:
  1548     01A8  1CF6               	btfss	_estado,1
  1549     01A9  29AB               	goto	u2421
  1550     01AA  29AC               	goto	u2420
  1551     01AB                     u2421:
  1552     01AB  2856               	goto	l106
  1553     01AC                     u2420:
  1554     01AC                     l2905:
  1555                           
  1556                           ;main.c: 232:                     estagio = TESTE_BOTOES;
  1557     01AC  01B5               	clrf	_estagio
  1558     01AD  0AB5               	incf	_estagio,f
  1559     01AE  2856               	goto	l106
  1560     01AF                     l154:	
  1561                           ;main.c: 236:             case TESTE_BOTOES:
  1562                           
  1563                           
  1564                           ;main.c: 237:             {;main.c: 238:                 if((estado.botao1 == 1) && (est
      +                          ado.botao2 == 1))
  1565     01AF  1C76               	btfss	_estado,0
  1566     01B0  29B2               	goto	u2431
  1567     01B1  29B3               	goto	u2430
  1568     01B2                     u2431:
  1569     01B2  29CB               	goto	l2915
  1570     01B3                     u2430:
  1571     01B3                     l2907:
  1572     01B3  1CF6               	btfss	_estado,1
  1573     01B4  29B6               	goto	u2441
  1574     01B5  29B7               	goto	u2440
  1575     01B6                     u2441:
  1576     01B6  29CB               	goto	l2915
  1577     01B7                     u2440:
  1578     01B7                     l2909:
  1579                           
  1580                           ;main.c: 239:                 {;main.c: 240:                     if((timerbotao1 < 500) 
      +                          && (timerbotao2 < 500))
  1581     01B7  3001               	movlw	1
  1582     01B8  0230               	subwf	_timerbotao1+1,w
  1583     01B9  30F4               	movlw	244
  1584     01BA  1903               	skipnz
  1585     01BB  022F               	subwf	_timerbotao1,w
  1586     01BC  1803               	skipnc
  1587     01BD  29BF               	goto	u2451
  1588     01BE  29C0               	goto	u2450
  1589     01BF                     u2451:
  1590     01BF  29CB               	goto	l2915
  1591     01C0                     u2450:
  1592     01C0                     l2911:
  1593     01C0  3001               	movlw	1
  1594     01C1  022E               	subwf	_timerbotao2+1,w
  1595     01C2  30F4               	movlw	244
  1596     01C3  1903               	skipnz
  1597     01C4  022D               	subwf	_timerbotao2,w
  1598     01C5  1803               	skipnc
  1599     01C6  29C8               	goto	u2461
  1600     01C7  29C9               	goto	u2460
  1601     01C8                     u2461:
  1602     01C8  29CB               	goto	l2915
  1603     01C9                     u2460:
  1604     01C9                     l2913:
  1605                           
  1606                           ;main.c: 241:                         estagio = INICIA_TESTE;
  1607     01C9  3002               	movlw	2
  1608     01CA  00B5               	movwf	_estagio
  1609     01CB                     l2915:
  1610                           
  1611                           ;main.c: 243:                 if(estado.falha == 1)
  1612     01CB  1C77               	btfss	_estado+1,0
  1613     01CC  29CE               	goto	u2471
  1614     01CD  29CF               	goto	u2470
  1615     01CE                     u2471:
  1616     01CE  2856               	goto	l106
  1617     01CF                     u2470:
  1618     01CF                     l2917:
  1619                           
  1620                           ;main.c: 244:                 {;main.c: 245:                     if(addressFail > 0)
  1621     01CF  0837               	movf	_addressFail,w
  1622     01D0  1903               	btfsc	3,2
  1623     01D1  29D3               	goto	u2481
  1624     01D2  29D4               	goto	u2480
  1625     01D3                     u2481:
  1626     01D3  29EE               	goto	l158
  1627     01D4                     u2480:
  1628     01D4                     l2919:
  1629                           
  1630                           ;main.c: 246:                     {;main.c: 247:                         if(timer < 500)
  1631     01D4  3001               	movlw	1
  1632     01D5  022C               	subwf	_timer+1,w
  1633     01D6  30F4               	movlw	244
  1634     01D7  1903               	skipnz
  1635     01D8  022B               	subwf	_timer,w
  1636     01D9  1803               	skipnc
  1637     01DA  29DC               	goto	u2491
  1638     01DB  29DD               	goto	u2490
  1639     01DC                     u2491:
  1640     01DC  29DF               	goto	l159
  1641     01DD                     u2490:
  1642     01DD                     l2921:
  1643                           
  1644                           ;main.c: 248:                             PORTAbits.RA1 = 1;
  1645     01DD  1485               	bsf	5,1	;volatile
  1646     01DE  29E0               	goto	l2923
  1647     01DF                     l159:	
  1648                           ;main.c: 249:                         else
  1649                           
  1650                           
  1651                           ;main.c: 250:                             PORTAbits.RA1 = 0;
  1652     01DF  1085               	bcf	5,1	;volatile
  1653     01E0                     l2923:
  1654                           
  1655                           ;main.c: 251:                         if(timer > (500*2))
  1656     01E0  3003               	movlw	3
  1657     01E1  022C               	subwf	_timer+1,w
  1658     01E2  30E9               	movlw	233
  1659     01E3  1903               	skipnz
  1660     01E4  022B               	subwf	_timer,w
  1661     01E5  1C03               	skipc
  1662     01E6  29E8               	goto	u2501
  1663     01E7  29E9               	goto	u2500
  1664     01E8                     u2501:
  1665     01E8  2856               	goto	l106
  1666     01E9                     u2500:
  1667     01E9                     l2925:
  1668                           
  1669                           ;main.c: 252:                         {;main.c: 253:                             address
      +                          Fail--;
  1670     01E9  3001               	movlw	1
  1671     01EA  02B7               	subwf	_addressFail,f
  1672     01EB                     l2927:
  1673                           
  1674                           ;main.c: 254:                             timer = 0;
  1675     01EB  01AB               	clrf	_timer
  1676     01EC  01AC               	clrf	_timer+1
  1677     01ED  2856               	goto	l106
  1678     01EE                     l158:	
  1679                           ;main.c: 257:                     else
  1680                           
  1681                           
  1682                           ;main.c: 258:                         PORTAbits.RA1 = 1;
  1683     01EE  1485               	bsf	5,1	;volatile
  1684     01EF  2856               	goto	l106
  1685     01F0                     l163:	
  1686                           ;main.c: 263:             case INICIA_TESTE:
  1687                           
  1688                           
  1689                           ;main.c: 264:             {;main.c: 265:                 PORTAbits.RA1 = 0;
  1690     01F0  1085               	bcf	5,1	;volatile
  1691                           
  1692                           ;main.c: 266:                 PORTAbits.RA3 = 0;
  1693     01F1  1185               	bcf	5,3	;volatile
  1694                           
  1695                           ;main.c: 267:                 PORTAbits.RA2 = 1;
  1696     01F2  1505               	bsf	5,2	;volatile
  1697                           
  1698                           ;main.c: 268:                 PORTAbits.RA0 = 0;
  1699     01F3  1005               	bcf	5,0	;volatile
  1700                           
  1701                           ;main.c: 269:                 PORTAbits.RA5 = 1;
  1702     01F4  1685               	bsf	5,5	;volatile
  1703                           
  1704                           ;main.c: 270:                 PORTCbits.RC4 = 1;
  1705     01F5  1607               	bsf	7,4	;volatile
  1706                           
  1707                           ;main.c: 271:                 ciclos = 1;
  1708     01F6  01B6               	clrf	_ciclos
  1709     01F7  0AB6               	incf	_ciclos,f
  1710                           
  1711                           ;main.c: 272:                 estado.reteste = 0;
  1712     01F8  13F6               	bcf	_estado,7
  1713                           
  1714                           ;main.c: 273:                 estado.falha = 0;
  1715     01F9  1077               	bcf	_estado+1,0
  1716     01FA                     l2929:
  1717                           
  1718                           ;main.c: 274:                 endereco = 0;
  1719     01FA  01F9               	clrf	_endereco
  1720                           
  1721                           ;main.c: 275:                 escravo.byte = 0;
  1722     01FB  01A3               	clrf	_escravo
  1723     01FC  01A4               	clrf	_escravo+1
  1724                           
  1725                           ;main.c: 276:                 timer = 0;
  1726     01FD  01AB               	clrf	_timer
  1727     01FE  01AC               	clrf	_timer+1
  1728                           
  1729                           ;main.c: 277:                 naoliga = 0;
  1730     01FF  01BC               	clrf	_naoliga
  1731                           
  1732                           ;main.c: 278:                 naodesliga = 0;
  1733     0200  01BB               	clrf	_naodesliga
  1734                           
  1735                           ;main.c: 279:                 sincronismo = 0;
  1736     0201  01BA               	clrf	_sincronismo
  1737                           
  1738                           ;main.c: 280:                 pecaOK = 0;
  1739     0202  01B9               	clrf	_pecaOK
  1740                           
  1741                           ;main.c: 281:                 addressFail = 0;
  1742     0203  01B7               	clrf	_addressFail
  1743     0204                     l2931:
  1744                           
  1745                           ;main.c: 282:                 estagio = TESTE_TAMPA_FECHADA;
  1746     0204  3003               	movlw	3
  1747     0205  00B5               	movwf	_estagio
  1748                           
  1749                           ;main.c: 283:             };main.c: 284:             break;
  1750     0206  2856               	goto	l106
  1751     0207                     l2933:
  1752                           
  1753                           ;main.c: 287:             {;main.c: 288:                 if(timer > 5000)
  1754     0207  3013               	movlw	19
  1755     0208  022C               	subwf	_timer+1,w
  1756     0209  3089               	movlw	137
  1757     020A  1903               	skipnz
  1758     020B  022B               	subwf	_timer,w
  1759     020C  1C03               	skipc
  1760     020D  2A0F               	goto	u2511
  1761     020E  2A10               	goto	u2510
  1762     020F                     u2511:
  1763     020F  2A13               	goto	l165
  1764     0210                     u2510:
  1765     0210                     l2935:
  1766                           
  1767                           ;main.c: 289:                     estagio = FALHA_FIM_CURSO;
  1768     0210  3011               	movlw	17
  1769     0211  00B5               	movwf	_estagio
  1770     0212  2856               	goto	l106
  1771     0213                     l165:	
  1772                           ;main.c: 290:                 else
  1773                           
  1774                           
  1775                           ;main.c: 291:                 {;main.c: 292:                     if(estado.fimcurso == 1
      +                          )
  1776     0213  1D76               	btfss	_estado,2
  1777     0214  2A16               	goto	u2521
  1778     0215  2A17               	goto	u2520
  1779     0216                     u2521:
  1780     0216  2E3F               	goto	l153
  1781     0217                     u2520:
  1782     0217                     l2937:
  1783                           
  1784                           ;main.c: 293:                     {;main.c: 294:                         timer = 0;
  1785     0217  01AB               	clrf	_timer
  1786     0218  01AC               	clrf	_timer+1
  1787     0219                     l2939:
  1788                           
  1789                           ;main.c: 295:                         estagio = ALIMENTA_PLACA;
  1790     0219  3004               	movlw	4
  1791     021A  00B5               	movwf	_estagio
  1792     021B  2856               	goto	l106
  1793     021C                     l168:	
  1794                           ;main.c: 301:             case ALIMENTA_PLACA:
  1795                           
  1796                           
  1797                           ;main.c: 302:             {;main.c: 303:                 estado.testando = 1;
  1798     021C  1776               	bsf	_estado,6
  1799                           
  1800                           ;main.c: 304:                 if(estado.chaveNA == 1)
  1801     021D  1E76               	btfss	_estado,4
  1802     021E  2A20               	goto	u2531
  1803     021F  2A21               	goto	u2530
  1804     0220                     u2531:
  1805     0220  2A24               	goto	l169
  1806     0221                     u2530:
  1807     0221                     l2941:
  1808                           
  1809                           ;main.c: 305:                     pwm_setado = 0;
  1810     0221  01A7               	clrf	_pwm_setado
  1811     0222  01A8               	clrf	_pwm_setado+1
  1812     0223  2A31               	goto	l170
  1813     0224                     l169:	
  1814                           ;main.c: 306:                 else
  1815                           
  1816                           
  1817                           ;main.c: 307:                 {;main.c: 308:                     if(estado.chavecopo == 
      +                          1)
  1818     0224  1EF6               	btfss	_estado,5
  1819     0225  2A27               	goto	u2541
  1820     0226  2A28               	goto	u2540
  1821     0227                     u2541:
  1822     0227  2A2D               	goto	l2945
  1823     0228                     u2540:
  1824     0228                     l2943:
  1825                           
  1826                           ;main.c: 309:                         pwm_setado = 170;
  1827     0228  30AA               	movlw	170
  1828     0229  00A7               	movwf	_pwm_setado
  1829     022A  3000               	movlw	0
  1830     022B  00A8               	movwf	_pwm_setado+1
  1831     022C  2A31               	goto	l170
  1832     022D                     l2945:
  1833                           
  1834                           ;main.c: 311:                         pwm_setado = 105;
  1835     022D  3069               	movlw	105
  1836     022E  00A7               	movwf	_pwm_setado
  1837     022F  3000               	movlw	0
  1838     0230  00A8               	movwf	_pwm_setado+1
  1839     0231                     l170:	
  1840                           ;main.c: 312:                 }
  1841                           
  1842                           
  1843                           ;main.c: 313:                 if(timer > 2000)
  1844     0231  3007               	movlw	7
  1845     0232  022C               	subwf	_timer+1,w
  1846     0233  30D1               	movlw	209
  1847     0234  1903               	skipnz
  1848     0235  022B               	subwf	_timer,w
  1849     0236  1C03               	skipc
  1850     0237  2A39               	goto	u2551
  1851     0238  2A3A               	goto	u2550
  1852     0239                     u2551:
  1853     0239  2856               	goto	l106
  1854     023A                     u2550:
  1855     023A                     l2947:
  1856                           
  1857                           ;main.c: 314:                 {;main.c: 315:                     PORTCbits.RC5 = 1;
  1858     023A  1687               	bsf	7,5	;volatile
  1859     023B                     l2949:
  1860                           
  1861                           ;main.c: 316:                     comunicacao.endereco = 0x0F;
  1862     023B  300F               	movlw	15
  1863     023C  04F8               	iorwf	_comunicacao,f
  1864     023D                     l2951:
  1865                           
  1866                           ;main.c: 317:                     if(estado.chaveNF == 1)
  1867     023D  1DF6               	btfss	_estado,3
  1868     023E  2A40               	goto	u2561
  1869     023F  2A41               	goto	u2560
  1870     0240                     u2561:
  1871     0240  2A46               	goto	l174
  1872     0241                     u2560:
  1873     0241                     l2953:
  1874                           
  1875                           ;main.c: 318:                         comunicacao.resposta = 0x09;
  1876     0241  0878               	movf	_comunicacao,w
  1877     0242  390F               	andlw	-241
  1878     0243  3890               	iorlw	144
  1879     0244  00F8               	movwf	_comunicacao
  1880     0245  2A53               	goto	l2959
  1881     0246                     l174:	
  1882                           ;main.c: 319:                     else
  1883                           
  1884                           
  1885                           ;main.c: 320:                     {;main.c: 321:                         if(estado.chave
      +                          NA == 1)
  1886     0246  1E76               	btfss	_estado,4
  1887     0247  2A49               	goto	u2571
  1888     0248  2A4A               	goto	u2570
  1889     0249                     u2571:
  1890     0249  2A4F               	goto	l2957
  1891     024A                     u2570:
  1892     024A                     l2955:
  1893                           
  1894                           ;main.c: 322:                             comunicacao.resposta = 0x05;
  1895     024A  0878               	movf	_comunicacao,w
  1896     024B  390F               	andlw	-241
  1897     024C  3850               	iorlw	80
  1898     024D  00F8               	movwf	_comunicacao
  1899     024E  2A53               	goto	l2959
  1900     024F                     l2957:
  1901                           
  1902                           ;main.c: 324:                             comunicacao.resposta = 0x03;
  1903     024F  0878               	movf	_comunicacao,w
  1904     0250  390F               	andlw	-241
  1905     0251  3830               	iorlw	48
  1906     0252  00F8               	movwf	_comunicacao
  1907     0253                     l2959:
  1908                           
  1909                           ;main.c: 326:                     USART_Write(comunicacao.byte);
  1910     0253  0878               	movf	_comunicacao,w
  1911     0254  120A  118A  2732  120A  118A  	fcall	_USART_Write
  1912     0259                     l2961:
  1913                           
  1914                           ;main.c: 327:                     timer = 0;
  1915     0259  1283               	bcf	3,5	;RP0=0, select bank0
  1916     025A  1303               	bcf	3,6	;RP1=0, select bank0
  1917     025B  01AB               	clrf	_timer
  1918     025C  01AC               	clrf	_timer+1
  1919     025D                     l2963:
  1920                           
  1921                           ;main.c: 328:                     estagio = ESTABILIZACAO;
  1922     025D  3005               	movlw	5
  1923     025E  00B5               	movwf	_estagio
  1924     025F  2856               	goto	l106
  1925     0260                     l2965:
  1926                           
  1927                           ;main.c: 334:             {;main.c: 335:                 if(timer > 5000)
  1928     0260  3013               	movlw	19
  1929     0261  022C               	subwf	_timer+1,w
  1930     0262  3089               	movlw	137
  1931     0263  1903               	skipnz
  1932     0264  022B               	subwf	_timer,w
  1933     0265  1C03               	skipc
  1934     0266  2A68               	goto	u2581
  1935     0267  2A69               	goto	u2580
  1936     0268                     u2581:
  1937     0268  2A6B               	goto	l2969
  1938     0269                     u2580:
  1939     0269                     l2967:
  1940                           
  1941                           ;main.c: 336:                     estagio = TESTE_LIGA;
  1942     0269  3006               	movlw	6
  1943     026A  00B5               	movwf	_estagio
  1944     026B                     l2969:
  1945                           
  1946                           ;main.c: 338:                 if(USART_RX_Ready() == 0)
  1947     026B  120A  118A  274E  120A  118A  	fcall	_USART_RX_Ready
  1948     0270  3A00               	xorlw	0
  1949     0271  1D03               	skipz
  1950     0272  2A74               	goto	u2591
  1951     0273  2A75               	goto	u2590
  1952     0274                     u2591:
  1953     0274  2A79               	goto	l2973
  1954     0275                     u2590:
  1955     0275                     l2971:
  1956                           
  1957                           ;main.c: 339:                     timeoutRx = 0;
  1958     0275  1283               	bcf	3,5	;RP0=0, select bank0
  1959     0276  1303               	bcf	3,6	;RP1=0, select bank0
  1960     0277  01BD               	clrf	_timeoutRx
  1961     0278  2A87               	goto	l2979
  1962     0279                     l2973:
  1963                           
  1964                           ;main.c: 341:                 {;main.c: 342:                     if(timeoutRx > 80)
  1965     0279  3051               	movlw	81
  1966     027A  1283               	bcf	3,5	;RP0=0, select bank0
  1967     027B  1303               	bcf	3,6	;RP1=0, select bank0
  1968     027C  023D               	subwf	_timeoutRx,w
  1969     027D  1C03               	skipc
  1970     027E  2A80               	goto	u2601
  1971     027F  2A81               	goto	u2600
  1972     0280                     u2601:
  1973     0280  2A87               	goto	l2979
  1974     0281                     u2600:
  1975     0281                     l2975:
  1976                           
  1977                           ;main.c: 343:                     {;main.c: 344:                         USART_RX_Clear_
      +                          Buffer();
  1978     0281  120A  118A  2752  120A  118A  	fcall	_USART_RX_Clear_Buffer
  1979     0286  2A75               	goto	l2971
  1980     0287                     l2979:
  1981                           
  1982                           ;main.c: 349:                 if(USART_RX_Ready() == 1)
  1983     0287  120A  118A  274E  120A  118A  	fcall	_USART_RX_Ready
  1984     028C  3A01               	xorlw	1
  1985     028D  1D03               	skipz
  1986     028E  2A90               	goto	u2611
  1987     028F  2A91               	goto	u2610
  1988     0290                     u2611:
  1989     0290  2856               	goto	l106
  1990     0291                     u2610:
  1991     0291                     l2981:
  1992                           
  1993                           ;main.c: 350:                 {;main.c: 351:                     comunicacao.byte = USAR
      +                          T_Read();
  1994     0291  120A  118A  2726  120A  118A  	fcall	_USART_Read
  1995     0296  00F8               	movwf	_comunicacao
  1996     0297                     l2983:
  1997                           
  1998                           ;main.c: 352:                     if(comunicacao.endereco == 0x00)
  1999     0297  0878               	movf	_comunicacao,w
  2000     0298  390F               	andlw	15
  2001     0299  3A00               	xorlw	0
  2002     029A  1D03               	skipz
  2003     029B  2A9D               	goto	u2621
  2004     029C  2A9E               	goto	u2620
  2005     029D                     u2621:
  2006     029D  2856               	goto	l106
  2007     029E                     u2620:
  2008     029E                     l2985:
  2009                           
  2010                           ;main.c: 353:                     {;main.c: 354:                         if(comunicacao.
      +                          resposta == 0x0F)
  2011     029E  0E78               	swapf	_comunicacao,w
  2012     029F  390F               	andlw	15
  2013     02A0  3A0F               	xorlw	15
  2014     02A1  1D03               	skipz
  2015     02A2  2AA4               	goto	u2631
  2016     02A3  2AA5               	goto	u2630
  2017     02A4                     u2631:
  2018     02A4  2856               	goto	l106
  2019     02A5                     u2630:
  2020     02A5                     l2987:
  2021                           
  2022                           ;main.c: 355:                         {;main.c: 356:                             estagio
      +                           = FALHA;
  2023     02A5  3012               	movlw	18
  2024     02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2025     02A7  1303               	bcf	3,6	;RP1=0, select bank0
  2026     02A8  00B5               	movwf	_estagio
  2027     02A9                     l2989:
  2028                           
  2029                           ;main.c: 357:                             estado.testando = 0;
  2030     02A9  1376               	bcf	_estado,6
  2031     02AA                     l2991:
  2032                           
  2033                           ;main.c: 358:                             comunicacao.endereco = 0x0F;
  2034     02AA  300F               	movlw	15
  2035     02AB  04F8               	iorwf	_comunicacao,f
  2036     02AC                     l2993:
  2037                           
  2038                           ;main.c: 359:                             comunicacao.resposta = 0x00;
  2039     02AC  300F               	movlw	-241
  2040     02AD  05F8               	andwf	_comunicacao,f
  2041     02AE                     l2995:
  2042                           
  2043                           ;main.c: 360:                             USART_Write(comunicacao.byte);
  2044     02AE  0878               	movf	_comunicacao,w
  2045     02AF  120A  118A  2732  120A  118A  	fcall	_USART_Write
  2046     02B4  2856               	goto	l106
  2047     02B5                     l186:	
  2048                           ;main.c: 367:             case TESTE_LIGA:
  2049                           
  2050                           
  2051                           ;main.c: 368:             {;main.c: 369:                 if(estado.chaveNA == 1)
  2052     02B5  1E76               	btfss	_estado,4
  2053     02B6  2AB8               	goto	u2641
  2054     02B7  2AB9               	goto	u2640
  2055     02B8                     u2641:
  2056     02B8  2ABE               	goto	l2999
  2057     02B9                     u2640:
  2058     02B9                     l2997:
  2059                           
  2060                           ;main.c: 370:                     pwm_setado = 105;
  2061     02B9  3069               	movlw	105
  2062     02BA  00A7               	movwf	_pwm_setado
  2063     02BB  3000               	movlw	0
  2064     02BC  00A8               	movwf	_pwm_setado+1
  2065     02BD  2AC2               	goto	l3001
  2066     02BE                     l2999:
  2067                           
  2068                           ;main.c: 372:                     pwm_setado = 10;
  2069     02BE  300A               	movlw	10
  2070     02BF  00A7               	movwf	_pwm_setado
  2071     02C0  3000               	movlw	0
  2072     02C1  00A8               	movwf	_pwm_setado+1
  2073     02C2                     l3001:
  2074                           
  2075                           ;main.c: 373:                 timer = 0;
  2076     02C2  01AB               	clrf	_timer
  2077     02C3  01AC               	clrf	_timer+1
  2078     02C4                     l3003:
  2079                           
  2080                           ;main.c: 374:                 estagio = AGUARDA_TEMPO_LIGA;
  2081     02C4  3007               	movlw	7
  2082     02C5  1283               	bcf	3,5	;RP0=0, select bank0
  2083     02C6  1303               	bcf	3,6	;RP1=0, select bank0
  2084     02C7  00B5               	movwf	_estagio
  2085                           
  2086                           ;main.c: 375:             };main.c: 376:             break;
  2087     02C8  2856               	goto	l106
  2088     02C9                     l3005:
  2089                           
  2090                           ;main.c: 379:             {;main.c: 380:                 if((timer > 12000) || (escravo.
      +                          byte == 0x03FF))
  2091     02C9  302E               	movlw	46
  2092     02CA  022C               	subwf	_timer+1,w
  2093     02CB  30E1               	movlw	225
  2094     02CC  1903               	skipnz
  2095     02CD  022B               	subwf	_timer,w
  2096     02CE  1803               	skipnc
  2097     02CF  2AD1               	goto	u2651
  2098     02D0  2AD2               	goto	u2650
  2099     02D1                     u2651:
  2100     02D1  2ADA               	goto	l3009
  2101     02D2                     u2650:
  2102     02D2                     l3007:
  2103     02D2  0A23               	incf	_escravo,w
  2104     02D3  3003               	movlw	3
  2105     02D4  1903               	skipnz
  2106     02D5  0624               	xorwf	_escravo+1,w
  2107     02D6  1D03               	btfss	3,2
  2108     02D7  2AD9               	goto	u2661
  2109     02D8  2ADA               	goto	u2660
  2110     02D9                     u2661:
  2111     02D9  2AE9               	goto	l3015
  2112     02DA                     u2660:
  2113     02DA                     l3009:
  2114                           
  2115                           ;main.c: 381:                 {;main.c: 382:                     if(timer > 3000)
  2116     02DA  300B               	movlw	11
  2117     02DB  022C               	subwf	_timer+1,w
  2118     02DC  30B9               	movlw	185
  2119     02DD  1903               	skipnz
  2120     02DE  022B               	subwf	_timer,w
  2121     02DF  1C03               	skipc
  2122     02E0  2AE2               	goto	u2671
  2123     02E1  2AE3               	goto	u2670
  2124     02E2                     u2671:
  2125     02E2  2E3F               	goto	l153
  2126     02E3                     u2670:
  2127     02E3                     l3011:
  2128                           
  2129                           ;main.c: 383:                     {;main.c: 384:                         escravo.byte = 
      +                          0;
  2130     02E3  01A3               	clrf	_escravo
  2131     02E4  01A4               	clrf	_escravo+1
  2132                           
  2133                           ;main.c: 385:                         endereco = 0;
  2134     02E5  01F9               	clrf	_endereco
  2135     02E6                     l3013:
  2136                           
  2137                           ;main.c: 386:                         estagio = TESTE_DESLIGA;
  2138     02E6  300A               	movlw	10
  2139     02E7  00B5               	movwf	_estagio
  2140     02E8  2856               	goto	l106
  2141     02E9                     l3015:
  2142                           
  2143                           ;main.c: 390:                     estagio = VERIFICA_PLACAS_LIGA;
  2144     02E9  3008               	movlw	8
  2145     02EA  00B5               	movwf	_estagio
  2146     02EB  2856               	goto	l106
  2147     02EC                     l3017:
  2148                           
  2149                           ;main.c: 395:             {;main.c: 396:                 endereco++;
  2150     02EC  3001               	movlw	1
  2151     02ED  00C4               	movwf	??_main
  2152     02EE  0844               	movf	??_main,w
  2153     02EF  07F9               	addwf	_endereco,f
  2154     02F0                     l3019:
  2155                           
  2156                           ;main.c: 397:                 if(endereco <= 10)
  2157     02F0  300B               	movlw	11
  2158     02F1  0279               	subwf	_endereco,w
  2159     02F2  1803               	skipnc
  2160     02F3  2AF5               	goto	u2681
  2161     02F4  2AF6               	goto	u2680
  2162     02F5                     u2681:
  2163     02F5  2B0E               	goto	l3033
  2164     02F6                     u2680:
  2165     02F6                     l3021:
  2166                           
  2167                           ;main.c: 398:                 {;main.c: 399:                     timeoutRx = 0;
  2168     02F6  01BD               	clrf	_timeoutRx
  2169     02F7                     l3023:
  2170                           
  2171                           ;main.c: 400:                     USART_RX_Clear_Buffer();
  2172     02F7  120A  118A  2752  120A  118A  	fcall	_USART_RX_Clear_Buffer
  2173     02FC                     l3025:
  2174                           
  2175                           ;main.c: 401:                     comunicacao.endereco = endereco;
  2176     02FC  0878               	movf	_comunicacao,w
  2177     02FD  0679               	xorwf	_endereco,w
  2178     02FE  39F0               	andlw	-16
  2179     02FF  0679               	xorwf	_endereco,w
  2180     0300  00F8               	movwf	_comunicacao
  2181     0301                     l3027:
  2182                           
  2183                           ;main.c: 402:                     comunicacao.resposta = 0x0F;
  2184     0301  30F0               	movlw	240
  2185     0302  04F8               	iorwf	_comunicacao,f
  2186     0303                     l3029:
  2187                           
  2188                           ;main.c: 403:                     USART_Write(comunicacao.byte);
  2189     0303  0878               	movf	_comunicacao,w
  2190     0304  120A  118A  2732  120A  118A  	fcall	_USART_Write
  2191     0309                     l3031:
  2192                           
  2193                           ;main.c: 404:                     estagio = MENSAGEM_RETORNO_PLACAS_LIGA;
  2194     0309  3009               	movlw	9
  2195     030A  1283               	bcf	3,5	;RP0=0, select bank0
  2196     030B  1303               	bcf	3,6	;RP1=0, select bank0
  2197     030C  00B5               	movwf	_estagio
  2198                           
  2199                           ;main.c: 405:                 }
  2200     030D  2856               	goto	l106
  2201     030E                     l3033:
  2202                           
  2203                           ;main.c: 407:                     endereco = 0;
  2204     030E  01F9               	clrf	_endereco
  2205     030F  2856               	goto	l106
  2206     0310                     l3035:
  2207                           
  2208                           ;main.c: 412:             {;main.c: 413:                 if(timeoutRx > 80)
  2209     0310  3051               	movlw	81
  2210     0311  023D               	subwf	_timeoutRx,w
  2211     0312  1C03               	skipc
  2212     0313  2B15               	goto	u2691
  2213     0314  2B16               	goto	u2690
  2214     0315                     u2691:
  2215     0315  2B17               	goto	l3039
  2216     0316                     u2690:
  2217     0316  2AC4               	goto	l3003
  2218     0317                     l3039:
  2219                           
  2220                           ;main.c: 416:                 {;main.c: 417:                     if(USART_RX_Ready() == 
      +                          1)
  2221     0317  120A  118A  274E  120A  118A  	fcall	_USART_RX_Ready
  2222     031C  3A01               	xorlw	1
  2223     031D  1D03               	skipz
  2224     031E  2B20               	goto	u2701
  2225     031F  2B21               	goto	u2700
  2226     0320                     u2701:
  2227     0320  2E3F               	goto	l153
  2228     0321                     u2700:
  2229     0321                     l3041:
  2230                           
  2231                           ;main.c: 418:                     {;main.c: 419:                         comunicacao.byt
      +                          e = USART_Read();
  2232     0321  120A  118A  2726  120A  118A  	fcall	_USART_Read
  2233     0326  00F8               	movwf	_comunicacao
  2234     0327                     l3043:
  2235                           
  2236                           ;main.c: 420:                         if(comunicacao.endereco == endereco)
  2237     0327  0878               	movf	_comunicacao,w
  2238     0328  390F               	andlw	15
  2239     0329  0679               	xorwf	_endereco,w
  2240     032A  1D03               	skipz
  2241     032B  2B2D               	goto	u2711
  2242     032C  2B2E               	goto	u2710
  2243     032D                     u2711:
  2244     032D  2AC4               	goto	l3003
  2245     032E                     u2710:
  2246     032E                     l3045:
  2247                           
  2248                           ;main.c: 421:                         {;main.c: 422:                             if(comu
      +                          nicacao.resposta != 0x00)
  2249     032E  0E78               	swapf	_comunicacao,w
  2250     032F  390F               	andlw	15
  2251     0330  3A00               	xorlw	0
  2252     0331  1903               	skipnz
  2253     0332  2B34               	goto	u2721
  2254     0333  2B35               	goto	u2720
  2255     0334                     u2721:
  2256     0334  2AC4               	goto	l3003
  2257     0335                     u2720:
  2258     0335  2B4A               	goto	l3051
  2259     0336                     l205:	
  2260                           ;main.c: 425:                                 {;main.c: 426:                            
      +                                   case 1:
  2261                           
  2262                           
  2263                           ;main.c: 427:                                         escravo.endereco1 = 1;
  2264     0336  1423               	bsf	_escravo,0
  2265                           
  2266                           ;main.c: 428:                                     break;
  2267     0337  2AC4               	goto	l3003
  2268     0338                     l207:	
  2269                           ;main.c: 429:                                     case 2:
  2270                           
  2271                           
  2272                           ;main.c: 430:                                         escravo.endereco2 = 1;
  2273     0338  14A3               	bsf	_escravo,1
  2274                           
  2275                           ;main.c: 431:                                     break;
  2276     0339  2AC4               	goto	l3003
  2277     033A                     l208:	
  2278                           ;main.c: 432:                                     case 3:
  2279                           
  2280                           
  2281                           ;main.c: 433:                                         escravo.endereco3 = 1;
  2282     033A  1523               	bsf	_escravo,2
  2283                           
  2284                           ;main.c: 434:                                     break;
  2285     033B  2AC4               	goto	l3003
  2286     033C                     l209:	
  2287                           ;main.c: 435:                                     case 4:
  2288                           
  2289                           
  2290                           ;main.c: 436:                                         escravo.endereco4 = 1;
  2291     033C  15A3               	bsf	_escravo,3
  2292                           
  2293                           ;main.c: 437:                                     break;
  2294     033D  2AC4               	goto	l3003
  2295     033E                     l210:	
  2296                           ;main.c: 438:                                     case 5:
  2297                           
  2298                           
  2299                           ;main.c: 439:                                         escravo.endereco5 = 1;
  2300     033E  1623               	bsf	_escravo,4
  2301                           
  2302                           ;main.c: 440:                                     break;
  2303     033F  2AC4               	goto	l3003
  2304     0340                     l211:	
  2305                           ;main.c: 441:                                     case 6:
  2306                           
  2307                           
  2308                           ;main.c: 442:                                         escravo.endereco6 = 1;
  2309     0340  16A3               	bsf	_escravo,5
  2310                           
  2311                           ;main.c: 443:                                     break;
  2312     0341  2AC4               	goto	l3003
  2313     0342                     l212:	
  2314                           ;main.c: 444:                                     case 7:
  2315                           
  2316                           
  2317                           ;main.c: 445:                                         escravo.endereco7 = 1;
  2318     0342  1723               	bsf	_escravo,6
  2319                           
  2320                           ;main.c: 446:                                     break;
  2321     0343  2AC4               	goto	l3003
  2322     0344                     l213:	
  2323                           ;main.c: 447:                                     case 8:
  2324                           
  2325                           
  2326                           ;main.c: 448:                                         escravo.endereco8 = 1;
  2327     0344  17A3               	bsf	_escravo,7
  2328                           
  2329                           ;main.c: 449:                                     break;
  2330     0345  2AC4               	goto	l3003
  2331     0346                     l214:	
  2332                           ;main.c: 450:                                     case 9:
  2333                           
  2334                           
  2335                           ;main.c: 451:                                         escravo.endereco9 = 1;
  2336     0346  1424               	bsf	_escravo+1,0
  2337                           
  2338                           ;main.c: 452:                                     break;
  2339     0347  2AC4               	goto	l3003
  2340     0348                     l215:	
  2341                           ;main.c: 453:                                     case 10:
  2342                           
  2343                           
  2344                           ;main.c: 454:                                         escravo.endereco10 = 1;
  2345     0348  14A4               	bsf	_escravo+1,1
  2346                           
  2347                           ;main.c: 455:                                     break;
  2348     0349  2AC4               	goto	l3003
  2349     034A                     l3051:
  2350     034A  0879               	movf	_endereco,w
  2351     034B  1283               	bcf	3,5	;RP0=0, select bank0
  2352     034C  1303               	bcf	3,6	;RP1=0, select bank0
  2353     034D  00C4               	movwf	??_main
  2354     034E  01C5               	clrf	??_main+1
  2355                           
  2356                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2357                           ; Switch size 1, requested type "simple"
  2358                           ; Number of cases is 1, Range of values is 0 to 0
  2359                           ; switch strategies available:
  2360                           ; Name         Instructions Cycles
  2361                           ; simple_byte            4     3 (average)
  2362                           ; direct_byte           11     8 (fixed)
  2363                           ; jumptable            260     6 (fixed)
  2364                           ;	Chosen strategy is simple_byte
  2365     034F  0845               	movf	??_main+1,w
  2366     0350  3A00               	xorlw	0	; case 0
  2367     0351  1903               	skipnz
  2368     0352  2B54               	goto	l3395
  2369     0353  2AC4               	goto	l3003
  2370     0354                     l3395:
  2371                           
  2372                           ; Switch size 1, requested type "simple"
  2373                           ; Number of cases is 10, Range of values is 1 to 10
  2374                           ; switch strategies available:
  2375                           ; Name         Instructions Cycles
  2376                           ; simple_byte           31    16 (average)
  2377                           ; direct_byte           41    11 (fixed)
  2378                           ; jumptable            263     9 (fixed)
  2379                           ;	Chosen strategy is simple_byte
  2380     0354  0844               	movf	??_main,w
  2381     0355  3A01               	xorlw	1	; case 1
  2382     0356  1903               	skipnz
  2383     0357  2B36               	goto	l205
  2384     0358  3A03               	xorlw	3	; case 2
  2385     0359  1903               	skipnz
  2386     035A  2B38               	goto	l207
  2387     035B  3A01               	xorlw	1	; case 3
  2388     035C  1903               	skipnz
  2389     035D  2B3A               	goto	l208
  2390     035E  3A07               	xorlw	7	; case 4
  2391     035F  1903               	skipnz
  2392     0360  2B3C               	goto	l209
  2393     0361  3A01               	xorlw	1	; case 5
  2394     0362  1903               	skipnz
  2395     0363  2B3E               	goto	l210
  2396     0364  3A03               	xorlw	3	; case 6
  2397     0365  1903               	skipnz
  2398     0366  2B40               	goto	l211
  2399     0367  3A01               	xorlw	1	; case 7
  2400     0368  1903               	skipnz
  2401     0369  2B42               	goto	l212
  2402     036A  3A0F               	xorlw	15	; case 8
  2403     036B  1903               	skipnz
  2404     036C  2B44               	goto	l213
  2405     036D  3A01               	xorlw	1	; case 9
  2406     036E  1903               	skipnz
  2407     036F  2B46               	goto	l214
  2408     0370  3A03               	xorlw	3	; case 10
  2409     0371  1903               	skipnz
  2410     0372  2B48               	goto	l215
  2411     0373  2AC4               	goto	l3003
  2412     0374                     l216:	
  2413                           ;main.c: 465:             case TESTE_DESLIGA:
  2414                           
  2415                           
  2416                           ;main.c: 466:             {;main.c: 467:                 if(estado.chaveNA == 1)
  2417     0374  1E76               	btfss	_estado,4
  2418     0375  2B77               	goto	u2731
  2419     0376  2B78               	goto	u2730
  2420     0377                     u2731:
  2421     0377  2B7D               	goto	l217
  2422     0378                     u2730:
  2423     0378                     l3055:
  2424                           
  2425                           ;main.c: 468:                     pwm_setado = 10;
  2426     0378  300A               	movlw	10
  2427     0379  00A7               	movwf	_pwm_setado
  2428     037A  3000               	movlw	0
  2429     037B  00A8               	movwf	_pwm_setado+1
  2430     037C  2B8A               	goto	l3061
  2431     037D                     l217:	
  2432                           ;main.c: 469:                 else
  2433                           
  2434                           
  2435                           ;main.c: 470:                 {;main.c: 471:                     if(estado.chavecopo == 
      +                          1)
  2436     037D  1EF6               	btfss	_estado,5
  2437     037E  2B80               	goto	u2741
  2438     037F  2B81               	goto	u2740
  2439     0380                     u2741:
  2440     0380  2B86               	goto	l3059
  2441     0381                     u2740:
  2442     0381                     l3057:
  2443                           
  2444                           ;main.c: 472:                         pwm_setado = 170;
  2445     0381  30AA               	movlw	170
  2446     0382  00A7               	movwf	_pwm_setado
  2447     0383  3000               	movlw	0
  2448     0384  00A8               	movwf	_pwm_setado+1
  2449     0385  2B8A               	goto	l3061
  2450     0386                     l3059:
  2451                           
  2452                           ;main.c: 474:                         pwm_setado = 105;
  2453     0386  3069               	movlw	105
  2454     0387  00A7               	movwf	_pwm_setado
  2455     0388  3000               	movlw	0
  2456     0389  00A8               	movwf	_pwm_setado+1
  2457     038A                     l3061:
  2458                           
  2459                           ;main.c: 476:                 timer = 0;
  2460     038A  01AB               	clrf	_timer
  2461     038B  01AC               	clrf	_timer+1
  2462     038C                     l3063:
  2463                           
  2464                           ;main.c: 477:                 estagio = AGUARDA_TEMPO_DESLIGA;
  2465     038C  300B               	movlw	11
  2466     038D  00B5               	movwf	_estagio
  2467     038E                     l3065:
  2468                           
  2469                           ;main.c: 478:                 comunicacao.endereco = 0x0F;
  2470     038E  300F               	movlw	15
  2471     038F  04F8               	iorwf	_comunicacao,f
  2472     0390                     l3067:
  2473                           
  2474                           ;main.c: 479:                 comunicacao.resposta = 0x07;
  2475     0390  0878               	movf	_comunicacao,w
  2476     0391  390F               	andlw	-241
  2477     0392  3870               	iorlw	112
  2478     0393  00F8               	movwf	_comunicacao
  2479     0394                     l3069:
  2480                           
  2481                           ;main.c: 480:                 USART_Write(comunicacao.byte);
  2482     0394  0878               	movf	_comunicacao,w
  2483     0395  120A  118A  2732  120A  118A  	fcall	_USART_Write
  2484                           
  2485                           ;main.c: 481:             };main.c: 482:             break;
  2486     039A  2856               	goto	l106
  2487     039B                     l3071:
  2488                           
  2489                           ;main.c: 485:             {;main.c: 486:                 if((timer > 10000) || (escravo.
      +                          byte == 0x03FF))
  2490     039B  3027               	movlw	39
  2491     039C  022C               	subwf	_timer+1,w
  2492     039D  3011               	movlw	17
  2493     039E  1903               	skipnz
  2494     039F  022B               	subwf	_timer,w
  2495     03A0  1803               	skipnc
  2496     03A1  2BA3               	goto	u2751
  2497     03A2  2BA4               	goto	u2750
  2498     03A3                     u2751:
  2499     03A3  2BAC               	goto	l3075
  2500     03A4                     u2750:
  2501     03A4                     l3073:
  2502     03A4  0A23               	incf	_escravo,w
  2503     03A5  3003               	movlw	3
  2504     03A6  1903               	skipnz
  2505     03A7  0624               	xorwf	_escravo+1,w
  2506     03A8  1D03               	btfss	3,2
  2507     03A9  2BAB               	goto	u2761
  2508     03AA  2BAC               	goto	u2760
  2509     03AB                     u2761:
  2510     03AB  2BCD               	goto	l3089
  2511     03AC                     u2760:
  2512     03AC                     l3075:
  2513                           
  2514                           ;main.c: 487:                 {;main.c: 488:                     if(ciclos >= 4)
  2515     03AC  3004               	movlw	4
  2516     03AD  0236               	subwf	_ciclos,w
  2517     03AE  1C03               	skipc
  2518     03AF  2BB1               	goto	u2771
  2519     03B0  2BB2               	goto	u2770
  2520     03B1                     u2771:
  2521     03B1  2BBA               	goto	l3081
  2522     03B2                     u2770:
  2523     03B2                     l3077:
  2524                           
  2525                           ;main.c: 489:                     {;main.c: 490:                         escravo.byte = 
      +                          0;
  2526     03B2  01A3               	clrf	_escravo
  2527     03B3  01A4               	clrf	_escravo+1
  2528                           
  2529                           ;main.c: 491:                         endereco = 0;
  2530     03B4  01F9               	clrf	_endereco
  2531     03B5                     l3079:
  2532                           
  2533                           ;main.c: 492:                         estagio = VERIFICA_PLACAS;
  2534     03B5  300F               	movlw	15
  2535     03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2536     03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2537     03B8  00B5               	movwf	_estagio
  2538                           
  2539                           ;main.c: 493:                     }
  2540     03B9  2856               	goto	l106
  2541     03BA                     l3081:
  2542                           
  2543                           ;main.c: 495:                     {;main.c: 496:                         if(timer > 8000
      +                          )
  2544     03BA  301F               	movlw	31
  2545     03BB  022C               	subwf	_timer+1,w
  2546     03BC  3041               	movlw	65
  2547     03BD  1903               	skipnz
  2548     03BE  022B               	subwf	_timer,w
  2549     03BF  1C03               	skipc
  2550     03C0  2BC2               	goto	u2781
  2551     03C1  2BC3               	goto	u2780
  2552     03C2                     u2781:
  2553     03C2  2856               	goto	l106
  2554     03C3                     u2780:
  2555     03C3                     l3083:
  2556                           
  2557                           ;main.c: 497:                         {;main.c: 498:                             escravo
      +                          .byte = 0;
  2558     03C3  01A3               	clrf	_escravo
  2559     03C4  01A4               	clrf	_escravo+1
  2560                           
  2561                           ;main.c: 499:                             endereco = 0;
  2562     03C5  01F9               	clrf	_endereco
  2563                           
  2564                           ;main.c: 500:                             timer = 0;
  2565     03C6  01AB               	clrf	_timer
  2566     03C7  01AC               	clrf	_timer+1
  2567     03C8                     l3085:
  2568                           
  2569                           ;main.c: 501:                             comunicacao.resposta = 0;
  2570     03C8  300F               	movlw	-241
  2571     03C9  05F8               	andwf	_comunicacao,f
  2572     03CA                     l3087:
  2573                           
  2574                           ;main.c: 502:                             estagio = RETESTE;
  2575     03CA  300E               	movlw	14
  2576     03CB  00B5               	movwf	_estagio
  2577     03CC  2856               	goto	l106
  2578     03CD                     l3089:
  2579                           
  2580                           ;main.c: 507:                     estagio = VERIFICA_PLACAS_DESLIGA;
  2581     03CD  300C               	movlw	12
  2582     03CE  00B5               	movwf	_estagio
  2583     03CF  2856               	goto	l106
  2584     03D0                     l3091:
  2585                           
  2586                           ;main.c: 512:             {;main.c: 513:                 endereco++;
  2587     03D0  3001               	movlw	1
  2588     03D1  00C4               	movwf	??_main
  2589     03D2  0844               	movf	??_main,w
  2590     03D3  07F9               	addwf	_endereco,f
  2591     03D4                     l3093:
  2592                           
  2593                           ;main.c: 514:                 if(endereco <= 10)
  2594     03D4  300B               	movlw	11
  2595     03D5  0279               	subwf	_endereco,w
  2596     03D6  1803               	skipnc
  2597     03D7  2BD9               	goto	u2791
  2598     03D8  2BDA               	goto	u2790
  2599     03D9                     u2791:
  2600     03D9  2B0E               	goto	l3033
  2601     03DA                     u2790:
  2602     03DA                     l3095:
  2603                           
  2604                           ;main.c: 515:                 {;main.c: 516:                     timeoutRx = 0;
  2605     03DA  01BD               	clrf	_timeoutRx
  2606     03DB                     l3097:
  2607                           
  2608                           ;main.c: 517:                     USART_RX_Clear_Buffer();
  2609     03DB  120A  118A  2752  120A  118A  	fcall	_USART_RX_Clear_Buffer
  2610     03E0                     l3099:
  2611                           
  2612                           ;main.c: 518:                     comunicacao.endereco = endereco;
  2613     03E0  0878               	movf	_comunicacao,w
  2614     03E1  0679               	xorwf	_endereco,w
  2615     03E2  39F0               	andlw	-16
  2616     03E3  0679               	xorwf	_endereco,w
  2617     03E4  00F8               	movwf	_comunicacao
  2618     03E5                     l3101:
  2619                           
  2620                           ;main.c: 519:                     comunicacao.resposta = 0x0F;
  2621     03E5  30F0               	movlw	240
  2622     03E6  04F8               	iorwf	_comunicacao,f
  2623     03E7                     l3103:
  2624                           
  2625                           ;main.c: 520:                     USART_Write(comunicacao.byte);
  2626     03E7  0878               	movf	_comunicacao,w
  2627     03E8  120A  118A  2732  120A  118A  	fcall	_USART_Write
  2628     03ED                     l3105:
  2629                           
  2630                           ;main.c: 521:                     estagio = MENSAGEM_RETORNO_PLACAS_DESLIGA;
  2631     03ED  300D               	movlw	13
  2632     03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2633     03EF  1303               	bcf	3,6	;RP1=0, select bank0
  2634     03F0  00B5               	movwf	_estagio
  2635                           
  2636                           ;main.c: 522:                 }
  2637     03F1  2856               	goto	l106
  2638     03F2                     l3109:
  2639                           
  2640                           ;main.c: 529:             {;main.c: 530:                 if(timeoutRx > 80)
  2641     03F2  3051               	movlw	81
  2642     03F3  023D               	subwf	_timeoutRx,w
  2643     03F4  1C03               	skipc
  2644     03F5  2BF7               	goto	u2801
  2645     03F6  2BF8               	goto	u2800
  2646     03F7                     u2801:
  2647     03F7  2BFD               	goto	l3113
  2648     03F8                     u2800:
  2649     03F8                     l3111:
  2650                           
  2651                           ;main.c: 531:                     estagio = AGUARDA_TEMPO_DESLIGA;
  2652     03F8  300B               	movlw	11
  2653     03F9  1283               	bcf	3,5	;RP0=0, select bank0
  2654     03FA  1303               	bcf	3,6	;RP1=0, select bank0
  2655     03FB  00B5               	movwf	_estagio
  2656     03FC  2856               	goto	l106
  2657     03FD                     l3113:
  2658                           
  2659                           ;main.c: 533:                 {;main.c: 534:                     if(USART_RX_Ready() == 
      +                          1)
  2660     03FD  120A  118A  274E  120A  118A  	fcall	_USART_RX_Ready
  2661     0402  3A01               	xorlw	1
  2662     0403  1D03               	skipz
  2663     0404  2C06               	goto	u2811
  2664     0405  2C07               	goto	u2810
  2665     0406                     u2811:
  2666     0406  2E3F               	goto	l153
  2667     0407                     u2810:
  2668     0407                     l3115:
  2669                           
  2670                           ;main.c: 535:                     {;main.c: 536:                         comunicacao.byt
      +                          e = USART_Read();
  2671     0407  120A  118A  2726  120A  118A  	fcall	_USART_Read
  2672     040C  00F8               	movwf	_comunicacao
  2673     040D                     l3117:
  2674                           
  2675                           ;main.c: 537:                         if(comunicacao.endereco == endereco)
  2676     040D  0878               	movf	_comunicacao,w
  2677     040E  390F               	andlw	15
  2678     040F  0679               	xorwf	_endereco,w
  2679     0410  1D03               	skipz
  2680     0411  2C13               	goto	u2821
  2681     0412  2C14               	goto	u2820
  2682     0413                     u2821:
  2683     0413  2BF8               	goto	l3111
  2684     0414                     u2820:
  2685     0414                     l3119:
  2686                           
  2687                           ;main.c: 538:                         {;main.c: 539:                             if(comu
      +                          nicacao.resposta != 0x00)
  2688     0414  0E78               	swapf	_comunicacao,w
  2689     0415  390F               	andlw	15
  2690     0416  3A00               	xorlw	0
  2691     0417  1903               	skipnz
  2692     0418  2C1A               	goto	u2831
  2693     0419  2C1B               	goto	u2830
  2694     041A                     u2831:
  2695     041A  2BF8               	goto	l3111
  2696     041B                     u2830:
  2697     041B  2C30               	goto	l3125
  2698     041C                     l239:	
  2699                           ;main.c: 542:                                 {;main.c: 543:                            
      +                                   case 1:
  2700                           
  2701                           
  2702                           ;main.c: 544:                                         escravo.endereco1 = 1;
  2703     041C  1423               	bsf	_escravo,0
  2704                           
  2705                           ;main.c: 545:                                     break;
  2706     041D  2BF8               	goto	l3111
  2707     041E                     l241:	
  2708                           ;main.c: 546:                                     case 2:
  2709                           
  2710                           
  2711                           ;main.c: 547:                                         escravo.endereco2 = 1;
  2712     041E  14A3               	bsf	_escravo,1
  2713                           
  2714                           ;main.c: 548:                                     break;
  2715     041F  2BF8               	goto	l3111
  2716     0420                     l242:	
  2717                           ;main.c: 549:                                     case 3:
  2718                           
  2719                           
  2720                           ;main.c: 550:                                         escravo.endereco3 = 1;
  2721     0420  1523               	bsf	_escravo,2
  2722                           
  2723                           ;main.c: 551:                                     break;
  2724     0421  2BF8               	goto	l3111
  2725     0422                     l243:	
  2726                           ;main.c: 552:                                     case 4:
  2727                           
  2728                           
  2729                           ;main.c: 553:                                         escravo.endereco4 = 1;
  2730     0422  15A3               	bsf	_escravo,3
  2731                           
  2732                           ;main.c: 554:                                     break;
  2733     0423  2BF8               	goto	l3111
  2734     0424                     l244:	
  2735                           ;main.c: 555:                                     case 5:
  2736                           
  2737                           
  2738                           ;main.c: 556:                                         escravo.endereco5 = 1;
  2739     0424  1623               	bsf	_escravo,4
  2740                           
  2741                           ;main.c: 557:                                     break;
  2742     0425  2BF8               	goto	l3111
  2743     0426                     l245:	
  2744                           ;main.c: 558:                                     case 6:
  2745                           
  2746                           
  2747                           ;main.c: 559:                                         escravo.endereco6 = 1;
  2748     0426  16A3               	bsf	_escravo,5
  2749                           
  2750                           ;main.c: 560:                                     break;
  2751     0427  2BF8               	goto	l3111
  2752     0428                     l246:	
  2753                           ;main.c: 561:                                     case 7:
  2754                           
  2755                           
  2756                           ;main.c: 562:                                         escravo.endereco7 = 1;
  2757     0428  1723               	bsf	_escravo,6
  2758                           
  2759                           ;main.c: 563:                                     break;
  2760     0429  2BF8               	goto	l3111
  2761     042A                     l247:	
  2762                           ;main.c: 564:                                     case 8:
  2763                           
  2764                           
  2765                           ;main.c: 565:                                         escravo.endereco8 = 1;
  2766     042A  17A3               	bsf	_escravo,7
  2767                           
  2768                           ;main.c: 566:                                     break;
  2769     042B  2BF8               	goto	l3111
  2770     042C                     l248:	
  2771                           ;main.c: 567:                                     case 9:
  2772                           
  2773                           
  2774                           ;main.c: 568:                                         escravo.endereco9 = 1;
  2775     042C  1424               	bsf	_escravo+1,0
  2776                           
  2777                           ;main.c: 569:                                     break;
  2778     042D  2BF8               	goto	l3111
  2779     042E                     l249:	
  2780                           ;main.c: 570:                                     case 10:
  2781                           
  2782                           
  2783                           ;main.c: 571:                                         escravo.endereco10 = 1;
  2784     042E  14A4               	bsf	_escravo+1,1
  2785                           
  2786                           ;main.c: 572:                                     break;
  2787     042F  2BF8               	goto	l3111
  2788     0430                     l3125:
  2789     0430  0879               	movf	_endereco,w
  2790     0431  1283               	bcf	3,5	;RP0=0, select bank0
  2791     0432  1303               	bcf	3,6	;RP1=0, select bank0
  2792     0433  00C4               	movwf	??_main
  2793     0434  01C5               	clrf	??_main+1
  2794                           
  2795                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2796                           ; Switch size 1, requested type "simple"
  2797                           ; Number of cases is 1, Range of values is 0 to 0
  2798                           ; switch strategies available:
  2799                           ; Name         Instructions Cycles
  2800                           ; simple_byte            4     3 (average)
  2801                           ; direct_byte           11     8 (fixed)
  2802                           ; jumptable            260     6 (fixed)
  2803                           ;	Chosen strategy is simple_byte
  2804     0435  0845               	movf	??_main+1,w
  2805     0436  3A00               	xorlw	0	; case 0
  2806     0437  1903               	skipnz
  2807     0438  2C3A               	goto	l3397
  2808     0439  2BF8               	goto	l3111
  2809     043A                     l3397:
  2810                           
  2811                           ; Switch size 1, requested type "simple"
  2812                           ; Number of cases is 10, Range of values is 1 to 10
  2813                           ; switch strategies available:
  2814                           ; Name         Instructions Cycles
  2815                           ; simple_byte           31    16 (average)
  2816                           ; direct_byte           41    11 (fixed)
  2817                           ; jumptable            263     9 (fixed)
  2818                           ;	Chosen strategy is simple_byte
  2819     043A  0844               	movf	??_main,w
  2820     043B  3A01               	xorlw	1	; case 1
  2821     043C  1903               	skipnz
  2822     043D  2C1C               	goto	l239
  2823     043E  3A03               	xorlw	3	; case 2
  2824     043F  1903               	skipnz
  2825     0440  2C1E               	goto	l241
  2826     0441  3A01               	xorlw	1	; case 3
  2827     0442  1903               	skipnz
  2828     0443  2C20               	goto	l242
  2829     0444  3A07               	xorlw	7	; case 4
  2830     0445  1903               	skipnz
  2831     0446  2C22               	goto	l243
  2832     0447  3A01               	xorlw	1	; case 5
  2833     0448  1903               	skipnz
  2834     0449  2C24               	goto	l244
  2835     044A  3A03               	xorlw	3	; case 6
  2836     044B  1903               	skipnz
  2837     044C  2C26               	goto	l245
  2838     044D  3A01               	xorlw	1	; case 7
  2839     044E  1903               	skipnz
  2840     044F  2C28               	goto	l246
  2841     0450  3A0F               	xorlw	15	; case 8
  2842     0451  1903               	skipnz
  2843     0452  2C2A               	goto	l247
  2844     0453  3A01               	xorlw	1	; case 9
  2845     0454  1903               	skipnz
  2846     0455  2C2C               	goto	l248
  2847     0456  3A03               	xorlw	3	; case 10
  2848     0457  1903               	skipnz
  2849     0458  2C2E               	goto	l249
  2850     0459  2BF8               	goto	l3111
  2851     045A                     l3129:
  2852                           
  2853                           ;main.c: 583:             {;main.c: 584:                 ciclos++;
  2854     045A  3001               	movlw	1
  2855     045B  00C4               	movwf	??_main
  2856     045C  0844               	movf	??_main,w
  2857     045D  07B6               	addwf	_ciclos,f
  2858     045E                     l3131:
  2859                           
  2860                           ;main.c: 585:                 if(ciclos >= 4)
  2861     045E  3004               	movlw	4
  2862     045F  0236               	subwf	_ciclos,w
  2863     0460  1C03               	skipc
  2864     0461  2C63               	goto	u2841
  2865     0462  2C64               	goto	u2840
  2866     0463                     u2841:
  2867     0463  2C65               	goto	l251
  2868     0464                     u2840:
  2869     0464                     l3133:
  2870                           
  2871                           ;main.c: 586:                     PORTCbits.RC4 = 0;
  2872     0464  1207               	bcf	7,4	;volatile
  2873     0465                     l251:
  2874                           
  2875                           ;main.c: 587:                 estado.reteste = 1;
  2876     0465  17F6               	bsf	_estado,7
  2877     0466                     l3135:
  2878                           
  2879                           ;main.c: 588:                 estagio = TESTE_LIGA;
  2880     0466  3006               	movlw	6
  2881     0467  00B5               	movwf	_estagio
  2882     0468                     l3137:
  2883                           
  2884                           ;main.c: 589:                 comunicacao.endereco = 0x0F;
  2885     0468  300F               	movlw	15
  2886     0469  04F8               	iorwf	_comunicacao,f
  2887     046A                     l3139:
  2888                           
  2889                           ;main.c: 590:                 comunicacao.resposta = 0x0C;
  2890     046A  0878               	movf	_comunicacao,w
  2891     046B  390F               	andlw	-241
  2892     046C  38C0               	iorlw	192
  2893     046D  00F8               	movwf	_comunicacao
  2894     046E                     l3141:
  2895                           
  2896                           ;main.c: 591:                 USART_Write(comunicacao.byte);
  2897     046E  0878               	movf	_comunicacao,w
  2898     046F  120A  118A  2732  120A  118A  	fcall	_USART_Write
  2899                           
  2900                           ;main.c: 592:             };main.c: 593:             break;
  2901     0474  2856               	goto	l106
  2902     0475                     l3143:
  2903                           
  2904                           ;main.c: 596:             {;main.c: 597:                 endereco++;
  2905     0475  3001               	movlw	1
  2906     0476  00C4               	movwf	??_main
  2907     0477  0844               	movf	??_main,w
  2908     0478  07F9               	addwf	_endereco,f
  2909     0479                     l3145:
  2910                           
  2911                           ;main.c: 598:                 if(endereco <= 10)
  2912     0479  300B               	movlw	11
  2913     047A  0279               	subwf	_endereco,w
  2914     047B  1803               	skipnc
  2915     047C  2C7E               	goto	u2851
  2916     047D  2C7F               	goto	u2850
  2917     047E                     u2851:
  2918     047E  2C98               	goto	l253
  2919     047F                     u2850:
  2920     047F                     l3147:
  2921                           
  2922                           ;main.c: 599:                 {;main.c: 600:                     countFailRx = 0;
  2923     047F  01B8               	clrf	_countFailRx
  2924                           
  2925                           ;main.c: 601:                     timeoutRx = 0;
  2926     0480  01BD               	clrf	_timeoutRx
  2927     0481                     l3149:
  2928                           
  2929                           ;main.c: 602:                     USART_RX_Clear_Buffer();
  2930     0481  120A  118A  2752  120A  118A  	fcall	_USART_RX_Clear_Buffer
  2931     0486                     l3151:
  2932                           
  2933                           ;main.c: 603:                     comunicacao.endereco = endereco;
  2934     0486  0878               	movf	_comunicacao,w
  2935     0487  0679               	xorwf	_endereco,w
  2936     0488  39F0               	andlw	-16
  2937     0489  0679               	xorwf	_endereco,w
  2938     048A  00F8               	movwf	_comunicacao
  2939     048B                     l3153:
  2940                           
  2941                           ;main.c: 604:                     comunicacao.resposta = 0x0F;
  2942     048B  30F0               	movlw	240
  2943     048C  04F8               	iorwf	_comunicacao,f
  2944     048D                     l3155:
  2945                           
  2946                           ;main.c: 605:                     USART_Write(comunicacao.byte);
  2947     048D  0878               	movf	_comunicacao,w
  2948     048E  120A  118A  2732  120A  118A  	fcall	_USART_Write
  2949     0493                     l3157:
  2950                           
  2951                           ;main.c: 606:                     estagio = MENSAGEM_RETORNO_PLACAS;
  2952     0493  3010               	movlw	16
  2953     0494  1283               	bcf	3,5	;RP0=0, select bank0
  2954     0495  1303               	bcf	3,6	;RP1=0, select bank0
  2955     0496  00B5               	movwf	_estagio
  2956                           
  2957                           ;main.c: 607:                 }
  2958     0497  2856               	goto	l106
  2959     0498                     l253:	
  2960                           ;main.c: 608:                 else
  2961                           
  2962                           
  2963                           ;main.c: 609:                 {;main.c: 610:                     if(estado.falha == 1)
  2964     0498  1C77               	btfss	_estado+1,0
  2965     0499  2C9B               	goto	u2861
  2966     049A  2C9C               	goto	u2860
  2967     049B                     u2861:
  2968     049B  2C9F               	goto	l3161
  2969     049C                     u2860:
  2970     049C                     l3159:
  2971                           
  2972                           ;main.c: 611:                         estagio = FALHA;
  2973     049C  3012               	movlw	18
  2974     049D  00B5               	movwf	_estagio
  2975     049E  2856               	goto	l106
  2976     049F                     l3161:
  2977                           
  2978                           ;main.c: 613:                         estagio = OK;
  2979     049F  3013               	movlw	19
  2980     04A0  00B5               	movwf	_estagio
  2981     04A1  2856               	goto	l106
  2982     04A2                     l3163:
  2983                           
  2984                           ;main.c: 619:             {;main.c: 620:                 if(timeoutRx > 80)
  2985     04A2  3051               	movlw	81
  2986     04A3  023D               	subwf	_timeoutRx,w
  2987     04A4  1C03               	skipc
  2988     04A5  2CA7               	goto	u2871
  2989     04A6  2CA8               	goto	u2870
  2990     04A7                     u2871:
  2991     04A7  2CCC               	goto	l3183
  2992     04A8                     u2870:
  2993     04A8                     l3165:
  2994                           
  2995                           ;main.c: 621:                 {;main.c: 622:                     if(countFailRx < 3)
  2996     04A8  3003               	movlw	3
  2997     04A9  0238               	subwf	_countFailRx,w
  2998     04AA  1803               	skipnc
  2999     04AB  2CAD               	goto	u2881
  3000     04AC  2CAE               	goto	u2880
  3001     04AD                     u2881:
  3002     04AD  2CC6               	goto	l259
  3003     04AE                     u2880:
  3004     04AE                     l3167:
  3005                           
  3006                           ;main.c: 623:                     {;main.c: 624:                         countFailRx++;
  3007     04AE  3001               	movlw	1
  3008     04AF  00C4               	movwf	??_main
  3009     04B0  0844               	movf	??_main,w
  3010     04B1  07B8               	addwf	_countFailRx,f
  3011     04B2                     l3169:
  3012                           
  3013                           ;main.c: 625:                         timeoutRx = 0;
  3014     04B2  01BD               	clrf	_timeoutRx
  3015     04B3                     l3171:
  3016                           
  3017                           ;main.c: 626:                         USART_RX_Clear_Buffer();
  3018     04B3  120A  118A  2752  120A  118A  	fcall	_USART_RX_Clear_Buffer
  3019     04B8                     l3173:
  3020                           
  3021                           ;main.c: 627:                         comunicacao.endereco = endereco;
  3022     04B8  0878               	movf	_comunicacao,w
  3023     04B9  0679               	xorwf	_endereco,w
  3024     04BA  39F0               	andlw	-16
  3025     04BB  0679               	xorwf	_endereco,w
  3026     04BC  00F8               	movwf	_comunicacao
  3027     04BD                     l3175:
  3028                           
  3029                           ;main.c: 628:                         comunicacao.resposta = 0x0F;
  3030     04BD  30F0               	movlw	240
  3031     04BE  04F8               	iorwf	_comunicacao,f
  3032     04BF                     l3177:
  3033                           
  3034                           ;main.c: 629:                         USART_Write(comunicacao.byte);
  3035     04BF  0878               	movf	_comunicacao,w
  3036     04C0  120A  118A  2732  120A  118A  	fcall	_USART_Write
  3037     04C5  2C93               	goto	l3157
  3038     04C6                     l259:	
  3039                           ;main.c: 632:                     else
  3040                           
  3041                           
  3042                           ;main.c: 633:                     {;main.c: 634:                         estado.falha = 
      +                          1;
  3043     04C6  1477               	bsf	_estado+1,0
  3044     04C7                     l3181:
  3045                           
  3046                           ;main.c: 635:                         addressFail = endereco;
  3047     04C7  0879               	movf	_endereco,w
  3048     04C8  00B7               	movwf	_addressFail
  3049                           
  3050                           ;main.c: 636:                         estagio = VERIFICA_PLACAS;
  3051     04C9  300F               	movlw	15
  3052     04CA  00B5               	movwf	_estagio
  3053     04CB  2856               	goto	l106
  3054     04CC                     l3183:
  3055                           
  3056                           ;main.c: 640:                 {;main.c: 641:                     if(USART_RX_Ready() == 
      +                          1)
  3057     04CC  120A  118A  274E  120A  118A  	fcall	_USART_RX_Ready
  3058     04D1  3A01               	xorlw	1
  3059     04D2  1D03               	skipz
  3060     04D3  2CD5               	goto	u2891
  3061     04D4  2CD6               	goto	u2890
  3062     04D5                     u2891:
  3063     04D5  2E3F               	goto	l153
  3064     04D6                     u2890:
  3065     04D6                     l3185:
  3066                           
  3067                           ;main.c: 642:                     {;main.c: 643:                         comunicacao.byt
      +                          e = USART_Read();
  3068     04D6  120A  118A  2726  120A  118A  	fcall	_USART_Read
  3069     04DB  00F8               	movwf	_comunicacao
  3070     04DC                     l3187:
  3071                           
  3072                           ;main.c: 644:                         if(comunicacao.endereco == endereco)
  3073     04DC  0878               	movf	_comunicacao,w
  3074     04DD  390F               	andlw	15
  3075     04DE  0679               	xorwf	_endereco,w
  3076     04DF  1D03               	skipz
  3077     04E0  2CE2               	goto	u2901
  3078     04E1  2CE3               	goto	u2900
  3079     04E2                     u2901:
  3080     04E2  2D2B               	goto	l3201
  3081     04E3                     u2900:
  3082     04E3                     l3189:
  3083                           
  3084                           ;main.c: 645:                         {;main.c: 646:                             if(comu
      +                          nicacao.resposta == 0x02)
  3085     04E3  0E78               	swapf	_comunicacao,w
  3086     04E4  390F               	andlw	15
  3087     04E5  3A02               	xorlw	2
  3088     04E6  1D03               	skipz
  3089     04E7  2CE9               	goto	u2911
  3090     04E8  2CEA               	goto	u2910
  3091     04E9                     u2911:
  3092     04E9  2CF0               	goto	l264
  3093     04EA                     u2910:
  3094     04EA                     l3191:
  3095                           
  3096                           ;main.c: 647:                                 naodesliga++;
  3097     04EA  3001               	movlw	1
  3098     04EB  1283               	bcf	3,5	;RP0=0, select bank0
  3099     04EC  1303               	bcf	3,6	;RP1=0, select bank0
  3100     04ED  00C4               	movwf	??_main
  3101     04EE  0844               	movf	??_main,w
  3102     04EF  07BB               	addwf	_naodesliga,f
  3103     04F0                     l264:
  3104                           
  3105                           ;main.c: 648:                             if(comunicacao.resposta == 0x03)
  3106     04F0  0E78               	swapf	_comunicacao,w
  3107     04F1  390F               	andlw	15
  3108     04F2  3A03               	xorlw	3
  3109     04F3  1D03               	skipz
  3110     04F4  2CF6               	goto	u2921
  3111     04F5  2CF7               	goto	u2920
  3112     04F6                     u2921:
  3113     04F6  2CFD               	goto	l265
  3114     04F7                     u2920:
  3115     04F7                     l3193:
  3116                           
  3117                           ;main.c: 649:                                 naoliga++;
  3118     04F7  3001               	movlw	1
  3119     04F8  1283               	bcf	3,5	;RP0=0, select bank0
  3120     04F9  1303               	bcf	3,6	;RP1=0, select bank0
  3121     04FA  00C4               	movwf	??_main
  3122     04FB  0844               	movf	??_main,w
  3123     04FC  07BC               	addwf	_naoliga,f
  3124     04FD                     l265:
  3125                           
  3126                           ;main.c: 650:                             if(comunicacao.resposta == 0x04)
  3127     04FD  0E78               	swapf	_comunicacao,w
  3128     04FE  390F               	andlw	15
  3129     04FF  3A04               	xorlw	4
  3130     0500  1D03               	skipz
  3131     0501  2D03               	goto	u2931
  3132     0502  2D04               	goto	u2930
  3133     0503                     u2931:
  3134     0503  2D0A               	goto	l266
  3135     0504                     u2930:
  3136     0504                     l3195:
  3137                           
  3138                           ;main.c: 651:                                 sincronismo++;
  3139     0504  3001               	movlw	1
  3140     0505  1283               	bcf	3,5	;RP0=0, select bank0
  3141     0506  1303               	bcf	3,6	;RP1=0, select bank0
  3142     0507  00C4               	movwf	??_main
  3143     0508  0844               	movf	??_main,w
  3144     0509  07BA               	addwf	_sincronismo,f
  3145     050A                     l266:
  3146                           
  3147                           ;main.c: 652:                             if(comunicacao.resposta == 0x08)
  3148     050A  0E78               	swapf	_comunicacao,w
  3149     050B  390F               	andlw	15
  3150     050C  3A08               	xorlw	8
  3151     050D  1D03               	skipz
  3152     050E  2D10               	goto	u2941
  3153     050F  2D11               	goto	u2940
  3154     0510                     u2941:
  3155     0510  2D17               	goto	l267
  3156     0511                     u2940:
  3157     0511                     l3197:
  3158                           
  3159                           ;main.c: 653:                                 pecaOK++;
  3160     0511  3001               	movlw	1
  3161     0512  1283               	bcf	3,5	;RP0=0, select bank0
  3162     0513  1303               	bcf	3,6	;RP1=0, select bank0
  3163     0514  00C4               	movwf	??_main
  3164     0515  0844               	movf	??_main,w
  3165     0516  07B9               	addwf	_pecaOK,f
  3166     0517                     l267:
  3167                           
  3168                           ;main.c: 654:                             if(comunicacao.resposta == 0x0F)
  3169     0517  0E78               	swapf	_comunicacao,w
  3170     0518  390F               	andlw	15
  3171     0519  3A0F               	xorlw	15
  3172     051A  1D03               	skipz
  3173     051B  2D1D               	goto	u2951
  3174     051C  2D1E               	goto	u2950
  3175     051D                     u2951:
  3176     051D  2D24               	goto	l268
  3177     051E                     u2950:
  3178     051E                     l3199:
  3179                           
  3180                           ;main.c: 655:                                 sincronismo++;
  3181     051E  3001               	movlw	1
  3182     051F  1283               	bcf	3,5	;RP0=0, select bank0
  3183     0520  1303               	bcf	3,6	;RP1=0, select bank0
  3184     0521  00C4               	movwf	??_main
  3185     0522  0844               	movf	??_main,w
  3186     0523  07BA               	addwf	_sincronismo,f
  3187     0524                     l268:
  3188                           
  3189                           ;main.c: 656:                             if(comunicacao.resposta != 0x08)
  3190     0524  0E78               	swapf	_comunicacao,w
  3191     0525  390F               	andlw	15
  3192     0526  3A08               	xorlw	8
  3193     0527  1903               	skipnz
  3194     0528  2D2A               	goto	u2961
  3195     0529  2D2B               	goto	u2960
  3196     052A                     u2961:
  3197     052A  2BB5               	goto	l3079
  3198     052B                     u2960:
  3199     052B                     l3201:
  3200                           
  3201                           ;main.c: 657:                                 estado.falha = 1;
  3202     052B  1477               	bsf	_estado+1,0
  3203     052C  2BB5               	goto	l3079
  3204     052D                     l3205:
  3205                           
  3206                           ;main.c: 668:             {;main.c: 669:                 comunicacao.endereco = 0x0F;
  3207     052D  300F               	movlw	15
  3208     052E  04F8               	iorwf	_comunicacao,f
  3209                           
  3210                           ;main.c: 670:                 comunicacao.resposta = 0x00;
  3211     052F  300F               	movlw	-241
  3212     0530  05F8               	andwf	_comunicacao,f
  3213     0531                     l3207:
  3214                           
  3215                           ;main.c: 671:                 USART_Write(comunicacao.byte);
  3216     0531  0878               	movf	_comunicacao,w
  3217     0532  120A  118A  2732  120A  118A  	fcall	_USART_Write
  3218     0537                     l3209:
  3219                           
  3220                           ;main.c: 672:                 pwm_setado = 0;
  3221     0537  1283               	bcf	3,5	;RP0=0, select bank0
  3222     0538  1303               	bcf	3,6	;RP1=0, select bank0
  3223     0539  01A7               	clrf	_pwm_setado
  3224     053A  01A8               	clrf	_pwm_setado+1
  3225     053B                     l3211:
  3226                           
  3227                           ;main.c: 673:                 PORTAbits.RA1 = 1;
  3228     053B  1485               	bsf	5,1	;volatile
  3229     053C                     l3213:
  3230                           
  3231                           ;main.c: 674:                 PORTAbits.RA0 = 1;
  3232     053C  1405               	bsf	5,0	;volatile
  3233     053D                     l3215:
  3234                           
  3235                           ;main.c: 675:                 timer = 0;
  3236     053D  01AB               	clrf	_timer
  3237     053E  01AC               	clrf	_timer+1
  3238     053F                     l3217:
  3239                           
  3240                           ;main.c: 676:                 estagio = TESTE_FINALIZADO;
  3241     053F  3014               	movlw	20
  3242     0540  00B5               	movwf	_estagio
  3243                           
  3244                           ;main.c: 677:             };main.c: 678:             break;
  3245     0541  2856               	goto	l106
  3246     0542                     l3219:
  3247                           
  3248                           ;main.c: 681:             {;main.c: 682:                 pwm_setado = 0;
  3249     0542  01A7               	clrf	_pwm_setado
  3250     0543  01A8               	clrf	_pwm_setado+1
  3251     0544                     l3221:
  3252                           
  3253                           ;main.c: 683:                 PORTAbits.RA1 = 1;
  3254     0544  1485               	bsf	5,1	;volatile
  3255     0545                     l3223:
  3256                           
  3257                           ;main.c: 684:                 PORTAbits.RA0 = 1;
  3258     0545  1405               	bsf	5,0	;volatile
  3259                           
  3260                           ;main.c: 685:                 timer = 0;
  3261     0546  01AB               	clrf	_timer
  3262     0547  01AC               	clrf	_timer+1
  3263     0548  2D3F               	goto	l3217
  3264     0549                     l3227:
  3265                           
  3266                           ;main.c: 691:             {;main.c: 692:                 pwm_setado = 0;
  3267     0549  01A7               	clrf	_pwm_setado
  3268     054A  01A8               	clrf	_pwm_setado+1
  3269     054B                     l3229:
  3270                           
  3271                           ;main.c: 693:                 PORTAbits.RA3 = 1;
  3272     054B  1585               	bsf	5,3	;volatile
  3273     054C  2D3F               	goto	l3217
  3274     054D                     l3233:
  3275                           
  3276                           ;main.c: 699:             {;main.c: 700:                 if(timer > 2000)
  3277     054D  3007               	movlw	7
  3278     054E  022C               	subwf	_timer+1,w
  3279     054F  30D1               	movlw	209
  3280     0550  1903               	skipnz
  3281     0551  022B               	subwf	_timer,w
  3282     0552  1C03               	skipc
  3283     0553  2D55               	goto	u2971
  3284     0554  2D56               	goto	u2970
  3285     0555                     u2971:
  3286     0555  2DEF               	goto	l3275
  3287     0556                     u2970:
  3288     0556                     l3235:
  3289                           
  3290                           ;main.c: 701:                 {;main.c: 702:                     PORTAbits.RA0 = 0;
  3291     0556  1005               	bcf	5,0	;volatile
  3292     0557                     l3237:
  3293                           
  3294                           ;main.c: 703:                     comunicacao.endereco = 0x0B;
  3295     0557  0878               	movf	_comunicacao,w
  3296     0558  39F0               	andlw	-16
  3297     0559  380B               	iorlw	11
  3298     055A  00F8               	movwf	_comunicacao
  3299                           
  3300                           ;main.c: 704:                     comunicacao.resposta = naoliga;
  3301     055B  083C               	movf	_naoliga,w
  3302     055C  00C4               	movwf	??_main
  3303     055D  0EC4               	swapf	??_main,f
  3304     055E  0878               	movf	_comunicacao,w
  3305     055F  0644               	xorwf	??_main,w
  3306     0560  390F               	andlw	-241
  3307     0561  0644               	xorwf	??_main,w
  3308     0562  00F8               	movwf	_comunicacao
  3309     0563                     l3239:
  3310                           
  3311                           ;main.c: 705:                     USART_Write(comunicacao.byte);
  3312     0563  0878               	movf	_comunicacao,w
  3313     0564  120A  118A  2732  120A  118A  	fcall	_USART_Write
  3314     0569                     l3241:
  3315                           
  3316                           ;main.c: 706:                     comunicacao.endereco = 0x0C;
  3317     0569  0878               	movf	_comunicacao,w
  3318     056A  39F0               	andlw	-16
  3319     056B  380C               	iorlw	12
  3320     056C  00F8               	movwf	_comunicacao
  3321     056D                     l3243:
  3322                           
  3323                           ;main.c: 707:                     comunicacao.resposta = naodesliga;
  3324     056D  1283               	bcf	3,5	;RP0=0, select bank0
  3325     056E  1303               	bcf	3,6	;RP1=0, select bank0
  3326     056F  083B               	movf	_naodesliga,w
  3327     0570  00C4               	movwf	??_main
  3328     0571  0EC4               	swapf	??_main,f
  3329     0572  0878               	movf	_comunicacao,w
  3330     0573  0644               	xorwf	??_main,w
  3331     0574  390F               	andlw	-241
  3332     0575  0644               	xorwf	??_main,w
  3333     0576  00F8               	movwf	_comunicacao
  3334     0577                     l3245:
  3335                           
  3336                           ;main.c: 708:                     USART_Write(comunicacao.byte);
  3337     0577  0878               	movf	_comunicacao,w
  3338     0578  120A  118A  2732  120A  118A  	fcall	_USART_Write
  3339                           
  3340                           ;main.c: 709:                     comunicacao.endereco = 0x0D;
  3341     057D  0878               	movf	_comunicacao,w
  3342     057E  39F0               	andlw	-16
  3343     057F  380D               	iorlw	13
  3344     0580  00F8               	movwf	_comunicacao
  3345                           
  3346                           ;main.c: 710:                     comunicacao.resposta = sincronismo;
  3347     0581  1283               	bcf	3,5	;RP0=0, select bank0
  3348     0582  1303               	bcf	3,6	;RP1=0, select bank0
  3349     0583  083A               	movf	_sincronismo,w
  3350     0584  00C4               	movwf	??_main
  3351     0585  0EC4               	swapf	??_main,f
  3352     0586  0878               	movf	_comunicacao,w
  3353     0587  0644               	xorwf	??_main,w
  3354     0588  390F               	andlw	-241
  3355     0589  0644               	xorwf	??_main,w
  3356     058A  00F8               	movwf	_comunicacao
  3357     058B                     l3247:
  3358                           
  3359                           ;main.c: 711:                     USART_Write(comunicacao.byte);
  3360     058B  0878               	movf	_comunicacao,w
  3361     058C  120A  118A  2732  120A  118A  	fcall	_USART_Write
  3362     0591                     l3249:
  3363                           
  3364                           ;main.c: 712:                     comunicacao.endereco = 0x0E;
  3365     0591  0878               	movf	_comunicacao,w
  3366     0592  39F0               	andlw	-16
  3367     0593  380E               	iorlw	14
  3368     0594  00F8               	movwf	_comunicacao
  3369     0595                     l3251:
  3370                           
  3371                           ;main.c: 713:                     comunicacao.resposta = pecaOK;
  3372     0595  1283               	bcf	3,5	;RP0=0, select bank0
  3373     0596  1303               	bcf	3,6	;RP1=0, select bank0
  3374     0597  0839               	movf	_pecaOK,w
  3375     0598  00C4               	movwf	??_main
  3376     0599  0EC4               	swapf	??_main,f
  3377     059A  0878               	movf	_comunicacao,w
  3378     059B  0644               	xorwf	??_main,w
  3379     059C  390F               	andlw	-241
  3380     059D  0644               	xorwf	??_main,w
  3381     059E  00F8               	movwf	_comunicacao
  3382     059F                     l3253:
  3383                           
  3384                           ;main.c: 714:                     USART_Write(comunicacao.byte);
  3385     059F  0878               	movf	_comunicacao,w
  3386     05A0  120A  118A  2732  120A  118A  	fcall	_USART_Write
  3387                           
  3388                           ;main.c: 715:                     comunicacao.endereco = 0x00;
  3389     05A5  30F0               	movlw	-16
  3390     05A6  05F8               	andwf	_comunicacao,f
  3391     05A7                     l3255:
  3392                           
  3393                           ;main.c: 716:                     if(estado.chavecopo == 1)
  3394     05A7  1EF6               	btfss	_estado,5
  3395     05A8  2DAA               	goto	u2981
  3396     05A9  2DAB               	goto	u2980
  3397     05AA                     u2981:
  3398     05AA  2DB0               	goto	l3259
  3399     05AB                     u2980:
  3400     05AB                     l3257:
  3401                           
  3402                           ;main.c: 717:                         comunicacao.resposta = 1;
  3403     05AB  0878               	movf	_comunicacao,w
  3404     05AC  390F               	andlw	-241
  3405     05AD  3810               	iorlw	16
  3406     05AE  00F8               	movwf	_comunicacao
  3407     05AF  2DB2               	goto	l3261
  3408     05B0                     l3259:
  3409                           
  3410                           ;main.c: 719:                         comunicacao.resposta = 0;
  3411     05B0  300F               	movlw	-241
  3412     05B1  05F8               	andwf	_comunicacao,f
  3413     05B2                     l3261:
  3414                           
  3415                           ;main.c: 720:                     if(estado.chaveNF == 1)
  3416     05B2  1DF6               	btfss	_estado,3
  3417     05B3  2DB5               	goto	u2991
  3418     05B4  2DB6               	goto	u2990
  3419     05B5                     u2991:
  3420     05B5  2DC4               	goto	l278
  3421     05B6                     u2990:
  3422     05B6                     l3263:
  3423                           
  3424                           ;main.c: 721:                         comunicacao.resposta += 0x02;
  3425     05B6  0E78               	swapf	_comunicacao,w
  3426     05B7  390F               	andlw	15
  3427     05B8  1283               	bcf	3,5	;RP0=0, select bank0
  3428     05B9  1303               	bcf	3,6	;RP1=0, select bank0
  3429     05BA  00C4               	movwf	??_main
  3430     05BB  3002               	movlw	2
  3431     05BC  07C4               	addwf	??_main,f
  3432     05BD  0EC4               	swapf	??_main,f
  3433     05BE  0878               	movf	_comunicacao,w
  3434     05BF  0644               	xorwf	??_main,w
  3435     05C0  390F               	andlw	-241
  3436     05C1  0644               	xorwf	??_main,w
  3437     05C2  00F8               	movwf	_comunicacao
  3438     05C3  2DE3               	goto	l3269
  3439     05C4                     l278:	
  3440                           ;main.c: 722:                     else
  3441                           
  3442                           
  3443                           ;main.c: 723:                     {;main.c: 724:                         if(estado.chave
      +                          NA == 1)
  3444     05C4  1E76               	btfss	_estado,4
  3445     05C5  2DC7               	goto	u3001
  3446     05C6  2DC8               	goto	u3000
  3447     05C7                     u3001:
  3448     05C7  2DD6               	goto	l3267
  3449     05C8                     u3000:
  3450     05C8                     l3265:
  3451                           
  3452                           ;main.c: 725:                             comunicacao.resposta += 0x08;
  3453     05C8  0E78               	swapf	_comunicacao,w
  3454     05C9  390F               	andlw	15
  3455     05CA  1283               	bcf	3,5	;RP0=0, select bank0
  3456     05CB  1303               	bcf	3,6	;RP1=0, select bank0
  3457     05CC  00C4               	movwf	??_main
  3458     05CD  3008               	movlw	8
  3459     05CE  07C4               	addwf	??_main,f
  3460     05CF  0EC4               	swapf	??_main,f
  3461     05D0  0878               	movf	_comunicacao,w
  3462     05D1  0644               	xorwf	??_main,w
  3463     05D2  390F               	andlw	-241
  3464     05D3  0644               	xorwf	??_main,w
  3465     05D4  00F8               	movwf	_comunicacao
  3466     05D5  2DE3               	goto	l3269
  3467     05D6                     l3267:
  3468                           
  3469                           ;main.c: 727:                             comunicacao.resposta += 0x04;
  3470     05D6  0E78               	swapf	_comunicacao,w
  3471     05D7  390F               	andlw	15
  3472     05D8  1283               	bcf	3,5	;RP0=0, select bank0
  3473     05D9  1303               	bcf	3,6	;RP1=0, select bank0
  3474     05DA  00C4               	movwf	??_main
  3475     05DB  3004               	movlw	4
  3476     05DC  07C4               	addwf	??_main,f
  3477     05DD  0EC4               	swapf	??_main,f
  3478     05DE  0878               	movf	_comunicacao,w
  3479     05DF  0644               	xorwf	??_main,w
  3480     05E0  390F               	andlw	-241
  3481     05E1  0644               	xorwf	??_main,w
  3482     05E2  00F8               	movwf	_comunicacao
  3483     05E3                     l3269:
  3484                           
  3485                           ;main.c: 729:                     USART_Write(comunicacao.byte);
  3486     05E3  0878               	movf	_comunicacao,w
  3487     05E4  120A  118A  2732  120A  118A  	fcall	_USART_Write
  3488     05E9                     l3271:
  3489                           
  3490                           ;main.c: 730:                     timer = 0;
  3491     05E9  1283               	bcf	3,5	;RP0=0, select bank0
  3492     05EA  1303               	bcf	3,6	;RP1=0, select bank0
  3493     05EB  01AB               	clrf	_timer
  3494     05EC  01AC               	clrf	_timer+1
  3495     05ED                     l3273:
  3496                           
  3497                           ;main.c: 731:                     estagio = TESTE_BOTOES;
  3498     05ED  01B5               	clrf	_estagio
  3499     05EE  0AB5               	incf	_estagio,f
  3500     05EF                     l3275:
  3501                           
  3502                           ;main.c: 733:                 PORTAbits.RA2 = 0;
  3503     05EF  1105               	bcf	5,2	;volatile
  3504     05F0                     l3277:
  3505                           
  3506                           ;main.c: 734:                 PORTCbits.RC5 = 0;
  3507     05F0  1287               	bcf	7,5	;volatile
  3508     05F1                     l3279:
  3509                           
  3510                           ;main.c: 735:                 PORTAbits.RA5 = 0;
  3511     05F1  1285               	bcf	5,5	;volatile
  3512     05F2                     l3281:
  3513                           
  3514                           ;main.c: 736:                 estado.testando = 0;
  3515     05F2  1376               	bcf	_estado,6
  3516                           
  3517                           ;main.c: 737:             };main.c: 738:             break;
  3518     05F3  2856               	goto	l106
  3519     05F4                     l3285:
  3520     05F4  1283               	bcf	3,5	;RP0=0, select bank0
  3521     05F5  1303               	bcf	3,6	;RP1=0, select bank0
  3522     05F6  0835               	movf	_estagio,w
  3523     05F7  00C4               	movwf	??_main
  3524     05F8  01C5               	clrf	??_main+1
  3525                           
  3526                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3527                           ; Switch size 1, requested type "simple"
  3528                           ; Number of cases is 1, Range of values is 0 to 0
  3529                           ; switch strategies available:
  3530                           ; Name         Instructions Cycles
  3531                           ; simple_byte            4     3 (average)
  3532                           ; direct_byte           11     8 (fixed)
  3533                           ; jumptable            260     6 (fixed)
  3534                           ;	Chosen strategy is simple_byte
  3535     05F9  0845               	movf	??_main+1,w
  3536     05FA  3A00               	xorlw	0	; case 0
  3537     05FB  1903               	skipnz
  3538     05FC  2DFE               	goto	l3399
  3539     05FD  2856               	goto	l106
  3540     05FE                     l3399:
  3541                           
  3542                           ; Switch size 1, requested type "simple"
  3543                           ; Number of cases is 21, Range of values is 0 to 20
  3544                           ; switch strategies available:
  3545                           ; Name         Instructions Cycles
  3546                           ; simple_byte           64    33 (average)
  3547                           ; direct_byte           71     8 (fixed)
  3548                           ; jumptable            260     6 (fixed)
  3549                           ;	Chosen strategy is simple_byte
  3550     05FE  0844               	movf	??_main,w
  3551     05FF  3A00               	xorlw	0	; case 0
  3552     0600  1903               	skipnz
  3553     0601  2984               	goto	l2887
  3554     0602  3A01               	xorlw	1	; case 1
  3555     0603  1903               	skipnz
  3556     0604  29AF               	goto	l154
  3557     0605  3A03               	xorlw	3	; case 2
  3558     0606  1903               	skipnz
  3559     0607  29F0               	goto	l163
  3560     0608  3A01               	xorlw	1	; case 3
  3561     0609  1903               	skipnz
  3562     060A  2A07               	goto	l2933
  3563     060B  3A07               	xorlw	7	; case 4
  3564     060C  1903               	skipnz
  3565     060D  2A1C               	goto	l168
  3566     060E  3A01               	xorlw	1	; case 5
  3567     060F  1903               	skipnz
  3568     0610  2A60               	goto	l2965
  3569     0611  3A03               	xorlw	3	; case 6
  3570     0612  1903               	skipnz
  3571     0613  2AB5               	goto	l186
  3572     0614  3A01               	xorlw	1	; case 7
  3573     0615  1903               	skipnz
  3574     0616  2AC9               	goto	l3005
  3575     0617  3A0F               	xorlw	15	; case 8
  3576     0618  1903               	skipnz
  3577     0619  2AEC               	goto	l3017
  3578     061A  3A01               	xorlw	1	; case 9
  3579     061B  1903               	skipnz
  3580     061C  2B10               	goto	l3035
  3581     061D  3A03               	xorlw	3	; case 10
  3582     061E  1903               	skipnz
  3583     061F  2B74               	goto	l216
  3584     0620  3A01               	xorlw	1	; case 11
  3585     0621  1903               	skipnz
  3586     0622  2B9B               	goto	l3071
  3587     0623  3A07               	xorlw	7	; case 12
  3588     0624  1903               	skipnz
  3589     0625  2BD0               	goto	l3091
  3590     0626  3A01               	xorlw	1	; case 13
  3591     0627  1903               	skipnz
  3592     0628  2BF2               	goto	l3109
  3593     0629  3A03               	xorlw	3	; case 14
  3594     062A  1903               	skipnz
  3595     062B  2C5A               	goto	l3129
  3596     062C  3A01               	xorlw	1	; case 15
  3597     062D  1903               	skipnz
  3598     062E  2C75               	goto	l3143
  3599     062F  3A1F               	xorlw	31	; case 16
  3600     0630  1903               	skipnz
  3601     0631  2CA2               	goto	l3163
  3602     0632  3A01               	xorlw	1	; case 17
  3603     0633  1903               	skipnz
  3604     0634  2D2D               	goto	l3205
  3605     0635  3A03               	xorlw	3	; case 18
  3606     0636  1903               	skipnz
  3607     0637  2D42               	goto	l3219
  3608     0638  3A01               	xorlw	1	; case 19
  3609     0639  1903               	skipnz
  3610     063A  2D49               	goto	l3227
  3611     063B  3A07               	xorlw	7	; case 20
  3612     063C  1903               	skipnz
  3613     063D  2D4D               	goto	l3233
  3614     063E  2856               	goto	l106
  3615     063F                     l153:
  3616     063F  2856               	goto	l106
  3617     0640  120A  118A  280E   	ljmp	start
  3618     0643                     __end_of_main:
  3619                           
  3620                           	psect	text1
  3621     0732                     __ptext1:	
  3622 ;; *************** function _USART_Write *****************
  3623 ;; Defined at:
  3624 ;;		line 51 in file "usart.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;  data            1    wreg     unsigned char 
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;  data            1    4[COMMON] unsigned char 
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  1    wreg      void 
  3631 ;; Registers used:
  3632 ;;		wreg
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3638 ;;      Params:         0       0       0       0       0
  3639 ;;      Locals:         1       0       0       0       0
  3640 ;;      Temps:          0       0       0       0       0
  3641 ;;      Totals:         1       0       0       0       0
  3642 ;;Total ram usage:        1 bytes
  3643 ;; Hardware stack levels used: 1
  3644 ;; Hardware stack levels required when called: 2
  3645 ;; This function calls:
  3646 ;;		Nothing
  3647 ;; This function is called by:
  3648 ;;		_main
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652     0732                     _USART_Write:	
  3653                           ;psect for function _USART_Write
  3654                           
  3655                           
  3656                           ;incstack = 0
  3657                           ; Regs used in _USART_Write: [wreg]
  3658                           ;USART_Write@data stored from wreg
  3659     0732  00F4               	movwf	USART_Write@data
  3660     0733                     l1955:
  3661     0733                     l493:	
  3662                           ;usart.c: 54:     {;usart.c: 55:     }
  3663                           
  3664                           
  3665                           ;usart.c: 53:     while(PIR1bits.TXIF == 0)
  3666     0733  1283               	bcf	3,5	;RP0=0, select bank0
  3667     0734  1303               	bcf	3,6	;RP1=0, select bank0
  3668     0735  1E0C               	btfss	12,4	;volatile
  3669     0736  2F38               	goto	u1091
  3670     0737  2F39               	goto	u1090
  3671     0738                     u1091:
  3672     0738  2F33               	goto	l493
  3673     0739                     u1090:
  3674     0739                     l1957:
  3675                           
  3676                           ;usart.c: 56:     TXREG = data;
  3677     0739  0874               	movf	USART_Write@data,w
  3678     073A  0099               	movwf	25	;volatile
  3679     073B                     l496:
  3680     073B  0008               	return
  3681     073C                     __end_of_USART_Write:
  3682                           
  3683                           	psect	text2
  3684     0726                     __ptext2:	
  3685 ;; *************** function _USART_Read *****************
  3686 ;; Defined at:
  3687 ;;		line 42 in file "usart.c"
  3688 ;; Parameters:    Size  Location     Type
  3689 ;;		None
  3690 ;; Auto vars:     Size  Location     Type
  3691 ;;  data            1    4[COMMON] unsigned char 
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  1    wreg      unsigned char 
  3694 ;; Registers used:
  3695 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3701 ;;      Params:         0       0       0       0       0
  3702 ;;      Locals:         1       0       0       0       0
  3703 ;;      Temps:          0       0       0       0       0
  3704 ;;      Totals:         1       0       0       0       0
  3705 ;;Total ram usage:        1 bytes
  3706 ;; Hardware stack levels used: 1
  3707 ;; Hardware stack levels required when called: 2
  3708 ;; This function calls:
  3709 ;;		Nothing
  3710 ;; This function is called by:
  3711 ;;		_main
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715     0726                     _USART_Read:	
  3716                           ;psect for function _USART_Read
  3717                           
  3718     0726                     l1965:	
  3719                           ;incstack = 0
  3720                           ; Regs used in _USART_Read: [wreg-fsr0h+status,2+status,0]
  3721                           
  3722                           
  3723                           ;usart.c: 44:     unsigned char data;;usart.c: 46:     rxCount--;
  3724     0726  3001               	movlw	1
  3725     0727  1283               	bcf	3,5	;RP0=0, select bank0
  3726     0728  1303               	bcf	3,6	;RP1=0, select bank0
  3727     0729  02B1               	subwf	_rxCount,f	;volatile
  3728     072A                     l1967:
  3729                           
  3730                           ;usart.c: 47:     data = rxBuffer[rxCount];
  3731     072A  0831               	movf	_rxCount,w
  3732     072B  3E20               	addlw	(low (_rxBuffer| 0))& (0+255)
  3733     072C  0084               	movwf	4
  3734     072D  1383               	bcf	3,7	;select IRP bank0
  3735     072E  0800               	movf	0,w
  3736     072F  00F4               	movwf	USART_Read@data
  3737     0730                     l1969:
  3738                           
  3739                           ;usart.c: 48:     return data;
  3740     0730  0874               	movf	USART_Read@data,w
  3741     0731                     l490:
  3742     0731  0008               	return
  3743     0732                     __end_of_USART_Read:
  3744                           
  3745                           	psect	text3
  3746     074E                     __ptext3:	
  3747 ;; *************** function _USART_RX_Ready *****************
  3748 ;; Defined at:
  3749 ;;		line 37 in file "usart.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;		None
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;		None
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  1    wreg      unsigned char 
  3756 ;; Registers used:
  3757 ;;		wreg
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3763 ;;      Params:         0       0       0       0       0
  3764 ;;      Locals:         0       0       0       0       0
  3765 ;;      Temps:          0       0       0       0       0
  3766 ;;      Totals:         0       0       0       0       0
  3767 ;;Total ram usage:        0 bytes
  3768 ;; Hardware stack levels used: 1
  3769 ;; Hardware stack levels required when called: 2
  3770 ;; This function calls:
  3771 ;;		Nothing
  3772 ;; This function is called by:
  3773 ;;		_main
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777     074E                     _USART_RX_Ready:	
  3778                           ;psect for function _USART_RX_Ready
  3779                           
  3780     074E                     l1959:	
  3781                           ;incstack = 0
  3782                           ; Regs used in _USART_RX_Ready: [wreg]
  3783                           
  3784                           
  3785                           ;usart.c: 39:     return rxCount;
  3786     074E  1283               	bcf	3,5	;RP0=0, select bank0
  3787     074F  1303               	bcf	3,6	;RP1=0, select bank0
  3788     0750  0831               	movf	_rxCount,w	;volatile
  3789     0751                     l487:
  3790     0751  0008               	return
  3791     0752                     __end_of_USART_RX_Ready:
  3792                           
  3793                           	psect	text4
  3794     0752                     __ptext4:	
  3795 ;; *************** function _USART_RX_Clear_Buffer *****************
  3796 ;; Defined at:
  3797 ;;		line 59 in file "usart.c"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;		None
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;		None
  3802 ;; Return value:  Size  Location     Type
  3803 ;;                  1    wreg      void 
  3804 ;; Registers used:
  3805 ;;		status,2
  3806 ;; Tracked objects:
  3807 ;;		On entry : 0/0
  3808 ;;		On exit  : 0/0
  3809 ;;		Unchanged: 0/0
  3810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3811 ;;      Params:         0       0       0       0       0
  3812 ;;      Locals:         0       0       0       0       0
  3813 ;;      Temps:          0       0       0       0       0
  3814 ;;      Totals:         0       0       0       0       0
  3815 ;;Total ram usage:        0 bytes
  3816 ;; Hardware stack levels used: 1
  3817 ;; Hardware stack levels required when called: 2
  3818 ;; This function calls:
  3819 ;;		Nothing
  3820 ;; This function is called by:
  3821 ;;		_main
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825     0752                     _USART_RX_Clear_Buffer:	
  3826                           ;psect for function _USART_RX_Clear_Buffer
  3827                           
  3828     0752                     l1963:	
  3829                           ;incstack = 0
  3830                           ; Regs used in _USART_RX_Clear_Buffer: [status,2]
  3831                           
  3832                           
  3833                           ;usart.c: 61:     rxCount = 0;
  3834     0752  1283               	bcf	3,5	;RP0=0, select bank0
  3835     0753  1303               	bcf	3,6	;RP1=0, select bank0
  3836     0754  01B1               	clrf	_rxCount	;volatile
  3837     0755                     l499:
  3838     0755  0008               	return
  3839     0756                     __end_of_USART_RX_Clear_Buffer:
  3840                           
  3841                           	psect	text5
  3842     0715                     __ptext5:	
  3843 ;; *************** function _USART_Initialize *****************
  3844 ;; Defined at:
  3845 ;;		line 9 in file "usart.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;		None
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;		None
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  1    wreg      void 
  3852 ;; Registers used:
  3853 ;;		wreg, status,2
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3859 ;;      Params:         0       0       0       0       0
  3860 ;;      Locals:         0       0       0       0       0
  3861 ;;      Temps:          0       0       0       0       0
  3862 ;;      Totals:         0       0       0       0       0
  3863 ;;Total ram usage:        0 bytes
  3864 ;; Hardware stack levels used: 1
  3865 ;; Hardware stack levels required when called: 2
  3866 ;; This function calls:
  3867 ;;		Nothing
  3868 ;; This function is called by:
  3869 ;;		_main
  3870 ;; This function uses a non-reentrant model
  3871 ;;
  3872                           
  3873     0715                     _USART_Initialize:	
  3874                           ;psect for function _USART_Initialize
  3875                           
  3876     0715                     l1949:	
  3877                           ;incstack = 0
  3878                           ; Regs used in _USART_Initialize: [wreg+status,2]
  3879                           
  3880                           
  3881                           ;usart.c: 11:     RCSTA = 0b10010000;
  3882     0715  3090               	movlw	144
  3883     0716  1283               	bcf	3,5	;RP0=0, select bank0
  3884     0717  1303               	bcf	3,6	;RP1=0, select bank0
  3885     0718  0098               	movwf	24	;volatile
  3886                           
  3887                           ;usart.c: 12:     TXSTA = 0b00100000;
  3888     0719  3020               	movlw	32
  3889     071A  1683               	bsf	3,5	;RP0=1, select bank1
  3890     071B  1303               	bcf	3,6	;RP1=0, select bank1
  3891     071C  0098               	movwf	24	;volatile
  3892                           
  3893                           ;usart.c: 15:     SPBRG = 0x81;
  3894     071D  3081               	movlw	129
  3895     071E  0099               	movwf	25	;volatile
  3896     071F                     l1951:
  3897                           
  3898                           ;usart.c: 17:     rxCount = 0;
  3899     071F  1283               	bcf	3,5	;RP0=0, select bank0
  3900     0720  1303               	bcf	3,6	;RP1=0, select bank0
  3901     0721  01B1               	clrf	_rxCount	;volatile
  3902     0722                     l1953:
  3903                           
  3904                           ;usart.c: 19:     PIE1bits.RCIE = 1;
  3905     0722  1683               	bsf	3,5	;RP0=1, select bank1
  3906     0723  1303               	bcf	3,6	;RP1=0, select bank1
  3907     0724  168C               	bsf	12,5	;volatile
  3908     0725                     l479:
  3909     0725  0008               	return
  3910     0726                     __end_of_USART_Initialize:
  3911                           
  3912                           	psect	text6
  3913     073C                     __ptext6:	
  3914 ;; *************** function _TMR0_Initialize *****************
  3915 ;; Defined at:
  3916 ;;		line 5 in file "tmr0.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;		None
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;		None
  3921 ;; Return value:  Size  Location     Type
  3922 ;;                  1    wreg      void 
  3923 ;; Registers used:
  3924 ;;		wreg
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3930 ;;      Params:         0       0       0       0       0
  3931 ;;      Locals:         0       0       0       0       0
  3932 ;;      Temps:          0       0       0       0       0
  3933 ;;      Totals:         0       0       0       0       0
  3934 ;;Total ram usage:        0 bytes
  3935 ;; Hardware stack levels used: 1
  3936 ;; Hardware stack levels required when called: 2
  3937 ;; This function calls:
  3938 ;;		Nothing
  3939 ;; This function is called by:
  3940 ;;		_main
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944     073C                     _TMR0_Initialize:	
  3945                           ;psect for function _TMR0_Initialize
  3946                           
  3947     073C                     l1945:	
  3948                           ;incstack = 0
  3949                           ; Regs used in _TMR0_Initialize: [wreg]
  3950                           
  3951                           
  3952                           ;tmr0.c: 8:     OPTION_REG = 0b00000100;
  3953     073C  3004               	movlw	4
  3954     073D  1683               	bsf	3,5	;RP0=1, select bank1
  3955     073E  1303               	bcf	3,6	;RP1=0, select bank1
  3956     073F  0081               	movwf	1	;volatile
  3957                           
  3958                           ;tmr0.c: 9:     TMR0 = 0x64;
  3959     0740  3064               	movlw	100
  3960     0741  1283               	bcf	3,5	;RP0=0, select bank0
  3961     0742  1303               	bcf	3,6	;RP1=0, select bank0
  3962     0743  0081               	movwf	1	;volatile
  3963     0744                     l1947:
  3964                           
  3965                           ;tmr0.c: 11:     INTCONbits.T0IE = 1;
  3966     0744  168B               	bsf	11,5	;volatile
  3967     0745                     l405:
  3968     0745  0008               	return
  3969     0746                     __end_of_TMR0_Initialize:
  3970                           
  3971                           	psect	text7
  3972     0703                     __ptext7:	
  3973 ;; *************** function _PinManager_Initialize *****************
  3974 ;; Defined at:
  3975 ;;		line 3 in file "pin_manager.c"
  3976 ;; Parameters:    Size  Location     Type
  3977 ;;		None
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;		None
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  1    wreg      void 
  3982 ;; Registers used:
  3983 ;;		wreg, status,2
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3989 ;;      Params:         0       0       0       0       0
  3990 ;;      Locals:         0       0       0       0       0
  3991 ;;      Temps:          0       0       0       0       0
  3992 ;;      Totals:         0       0       0       0       0
  3993 ;;Total ram usage:        0 bytes
  3994 ;; Hardware stack levels used: 1
  3995 ;; Hardware stack levels required when called: 2
  3996 ;; This function calls:
  3997 ;;		Nothing
  3998 ;; This function is called by:
  3999 ;;		_main
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003     0703                     _PinManager_Initialize:	
  4004                           ;psect for function _PinManager_Initialize
  4005                           
  4006     0703                     l1929:	
  4007                           ;incstack = 0
  4008                           ; Regs used in _PinManager_Initialize: [wreg+status,2]
  4009                           
  4010                           
  4011                           ;pin_manager.c: 5:     PORTA = 0b00000000;
  4012     0703  1283               	bcf	3,5	;RP0=0, select bank0
  4013     0704  1303               	bcf	3,6	;RP1=0, select bank0
  4014     0705  0185               	clrf	5	;volatile
  4015                           
  4016                           ;pin_manager.c: 6:     PORTB = 0b00000000;
  4017     0706  0186               	clrf	6	;volatile
  4018                           
  4019                           ;pin_manager.c: 7:     PORTC = 0b00000000;
  4020     0707  0187               	clrf	7	;volatile
  4021     0708                     l1931:
  4022                           
  4023                           ;pin_manager.c: 9:     TRISA = 0b11010000;
  4024     0708  30D0               	movlw	208
  4025     0709  1683               	bsf	3,5	;RP0=1, select bank1
  4026     070A  1303               	bcf	3,6	;RP1=0, select bank1
  4027     070B  0085               	movwf	5	;volatile
  4028     070C                     l1933:
  4029                           
  4030                           ;pin_manager.c: 10:     TRISB = 0b11111111;
  4031     070C  30FF               	movlw	255
  4032     070D  0086               	movwf	6	;volatile
  4033     070E                     l1935:
  4034                           
  4035                           ;pin_manager.c: 11:     TRISC = 0b10000000;
  4036     070E  3080               	movlw	128
  4037     070F  0087               	movwf	7	;volatile
  4038     0710                     l1937:
  4039                           
  4040                           ;pin_manager.c: 13:     ADCON1 = 0b00000110;
  4041     0710  3006               	movlw	6
  4042     0711  009F               	movwf	31	;volatile
  4043     0712                     l1939:
  4044                           
  4045                           ;pin_manager.c: 15:     OPTION_REG = 0b00000100;
  4046     0712  3004               	movlw	4
  4047     0713  0081               	movwf	1	;volatile
  4048     0714                     l350:
  4049     0714  0008               	return
  4050     0715                     __end_of_PinManager_Initialize:
  4051                           
  4052                           	psect	text8
  4053     06EE                     __ptext8:	
  4054 ;; *************** function _PWM_Initialize *****************
  4055 ;; Defined at:
  4056 ;;		line 3 in file "pwm.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;		None
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;		None
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  1    wreg      void 
  4063 ;; Registers used:
  4064 ;;		wreg, status,2, status,0, pclath, cstack
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4070 ;;      Params:         0       0       0       0       0
  4071 ;;      Locals:         0       0       0       0       0
  4072 ;;      Temps:          0       0       0       0       0
  4073 ;;      Totals:         0       0       0       0       0
  4074 ;;Total ram usage:        0 bytes
  4075 ;; Hardware stack levels used: 1
  4076 ;; Hardware stack levels required when called: 3
  4077 ;; This function calls:
  4078 ;;		_PWM_LoadDutyValue
  4079 ;; This function is called by:
  4080 ;;		_main
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084     06EE                     _PWM_Initialize:	
  4085                           ;psect for function _PWM_Initialize
  4086                           
  4087     06EE                     l2707:	
  4088                           ;incstack = 0
  4089                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4090                           
  4091                           
  4092                           ;pwm.c: 5:  CCP1CON = 0b00001111;
  4093     06EE  300F               	movlw	15
  4094     06EF  1283               	bcf	3,5	;RP0=0, select bank0
  4095     06F0  1303               	bcf	3,6	;RP1=0, select bank0
  4096     06F1  0097               	movwf	23	;volatile
  4097                           
  4098                           ;pwm.c: 8:     PR2 = 0xFF;
  4099     06F2  30FF               	movlw	255
  4100     06F3  1683               	bsf	3,5	;RP0=1, select bank1
  4101     06F4  1303               	bcf	3,6	;RP1=0, select bank1
  4102     06F5  0092               	movwf	18	;volatile
  4103                           
  4104                           ;pwm.c: 9:     T2CON = 0b00000111;
  4105     06F6  3007               	movlw	7
  4106     06F7  1283               	bcf	3,5	;RP0=0, select bank0
  4107     06F8  1303               	bcf	3,6	;RP1=0, select bank0
  4108     06F9  0092               	movwf	18	;volatile
  4109     06FA                     l2709:
  4110                           
  4111                           ;pwm.c: 11:     PWM_LoadDutyValue(0);
  4112     06FA  3000               	movlw	0
  4113     06FB  00F4               	movwf	PWM_LoadDutyValue@dutyValue
  4114     06FC  00F5               	movwf	PWM_LoadDutyValue@dutyValue+1
  4115     06FD  120A  118A  26D3  120A  118A  	fcall	_PWM_LoadDutyValue
  4116     0702                     l512:
  4117     0702  0008               	return
  4118     0703                     __end_of_PWM_Initialize:
  4119                           
  4120                           	psect	text9
  4121     06D3                     __ptext9:	
  4122 ;; *************** function _PWM_LoadDutyValue *****************
  4123 ;; Defined at:
  4124 ;;		line 14 in file "pwm.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;  dutyValue       2    4[COMMON] unsigned int 
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;		None
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  1    wreg      void 
  4131 ;; Registers used:
  4132 ;;		wreg, status,2, status,0
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4138 ;;      Params:         2       0       0       0       0
  4139 ;;      Locals:         0       0       0       0       0
  4140 ;;      Temps:          0       2       0       0       0
  4141 ;;      Totals:         2       2       0       0       0
  4142 ;;Total ram usage:        4 bytes
  4143 ;; Hardware stack levels used: 1
  4144 ;; Hardware stack levels required when called: 2
  4145 ;; This function calls:
  4146 ;;		Nothing
  4147 ;; This function is called by:
  4148 ;;		_main
  4149 ;;		_PWM_Initialize
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153     06D3                     _PWM_LoadDutyValue:	
  4154                           ;psect for function _PWM_LoadDutyValue
  4155                           
  4156     06D3                     l2705:	
  4157                           ;incstack = 0
  4158                           ; Regs used in _PWM_LoadDutyValue: [wreg+status,2+status,0]
  4159                           
  4160                           
  4161                           ;pwm.c: 14: void PWM_LoadDutyValue(unsigned int dutyValue);pwm.c: 15: {;pwm.c: 16:     C
      +                          CPR1L = (unsigned char)(dutyValue >> 2);
  4162     06D3  0875               	movf	PWM_LoadDutyValue@dutyValue+1,w
  4163     06D4  1283               	bcf	3,5	;RP0=0, select bank0
  4164     06D5  1303               	bcf	3,6	;RP1=0, select bank0
  4165     06D6  00C3               	movwf	??_PWM_LoadDutyValue+1
  4166     06D7  0874               	movf	PWM_LoadDutyValue@dutyValue,w
  4167     06D8  00C2               	movwf	??_PWM_LoadDutyValue
  4168     06D9  1003               	clrc
  4169     06DA  0CC3               	rrf	??_PWM_LoadDutyValue+1,f
  4170     06DB  0CC2               	rrf	??_PWM_LoadDutyValue,f
  4171     06DC  1003               	clrc
  4172     06DD  0CC3               	rrf	??_PWM_LoadDutyValue+1,f
  4173     06DE  0CC2               	rrf	??_PWM_LoadDutyValue,f
  4174     06DF  0842               	movf	??_PWM_LoadDutyValue,w
  4175     06E0  0095               	movwf	21	;volatile
  4176                           
  4177                           ;pwm.c: 17:     CCP1CON = (unsigned char)(CCP1CON | (dutyValue << 4));
  4178     06E1  0874               	movf	PWM_LoadDutyValue@dutyValue,w
  4179     06E2  00C2               	movwf	??_PWM_LoadDutyValue
  4180     06E3  3003               	movlw	3
  4181     06E4                     u2075:
  4182     06E4  1003               	clrc
  4183     06E5  0DC2               	rlf	??_PWM_LoadDutyValue,f
  4184     06E6  3EFF               	addlw	-1
  4185     06E7  1D03               	skipz
  4186     06E8  2EE4               	goto	u2075
  4187     06E9  1003               	clrc
  4188     06EA  0D42               	rlf	??_PWM_LoadDutyValue,w
  4189     06EB  0417               	iorwf	23,w
  4190     06EC  0097               	movwf	23	;volatile
  4191     06ED                     l515:
  4192     06ED  0008               	return
  4193     06EE                     __end_of_PWM_LoadDutyValue:
  4194                           
  4195                           	psect	text10
  4196     0756                     __ptext10:	
  4197 ;; *************** function _Interrupt_Enable *****************
  4198 ;; Defined at:
  4199 ;;		line 15 in file "interrupt_manager.c"
  4200 ;; Parameters:    Size  Location     Type
  4201 ;;		None
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;		None
  4204 ;; Return value:  Size  Location     Type
  4205 ;;                  1    wreg      void 
  4206 ;; Registers used:
  4207 ;;		None
  4208 ;; Tracked objects:
  4209 ;;		On entry : 0/0
  4210 ;;		On exit  : 0/0
  4211 ;;		Unchanged: 0/0
  4212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4213 ;;      Params:         0       0       0       0       0
  4214 ;;      Locals:         0       0       0       0       0
  4215 ;;      Temps:          0       0       0       0       0
  4216 ;;      Totals:         0       0       0       0       0
  4217 ;;Total ram usage:        0 bytes
  4218 ;; Hardware stack levels used: 1
  4219 ;; Hardware stack levels required when called: 2
  4220 ;; This function calls:
  4221 ;;		Nothing
  4222 ;; This function is called by:
  4223 ;;		_main
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226                           
  4227     0756                     _Interrupt_Enable:	
  4228                           ;psect for function _Interrupt_Enable
  4229                           
  4230     0756                     l1927:	
  4231                           ;incstack = 0
  4232                           ; Regs used in _Interrupt_Enable: []
  4233                           
  4234                           
  4235                           ;interrupt_manager.c: 17:     INTCONbits.GIE = 1;
  4236     0756  178B               	bsf	11,7	;volatile
  4237                           
  4238                           ;interrupt_manager.c: 18:     INTCONbits.PEIE = 1;
  4239     0757  170B               	bsf	11,6	;volatile
  4240     0758                     l20:
  4241     0758  0008               	return
  4242     0759                     __end_of_Interrupt_Enable:
  4243                           
  4244                           	psect	text11
  4245     068F                     __ptext11:	
  4246 ;; *************** function _InterruptManager *****************
  4247 ;; Defined at:
  4248 ;;		line 6 in file "interrupt_manager.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;		None
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;		None
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  1    wreg      void 
  4255 ;; Registers used:
  4256 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4262 ;;      Params:         0       0       0       0       0
  4263 ;;      Locals:         0       0       0       0       0
  4264 ;;      Temps:          3       0       0       0       0
  4265 ;;      Totals:         3       0       0       0       0
  4266 ;;Total ram usage:        3 bytes
  4267 ;; Hardware stack levels used: 1
  4268 ;; Hardware stack levels required when called: 1
  4269 ;; This function calls:
  4270 ;;		_TMR0_ISR
  4271 ;;		_USART_RX_ISR
  4272 ;; This function is called by:
  4273 ;;		Interrupt level 1
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277     068F                     _InterruptManager:	
  4278                           ;psect for function _InterruptManager
  4279                           
  4280     068F                     i1l1973:
  4281                           
  4282                           ;interrupt_manager.c: 8:     if(INTCONbits.T0IE == 1 && INTCONbits.T0IF == 1)
  4283     068F  1E8B               	btfss	11,5	;volatile
  4284     0690  2E92               	goto	u110_21
  4285     0691  2E93               	goto	u110_20
  4286     0692                     u110_21:
  4287     0692  2E9C               	goto	i1l1979
  4288     0693                     u110_20:
  4289     0693                     i1l1975:
  4290     0693  1D0B               	btfss	11,2	;volatile
  4291     0694  2E96               	goto	u111_21
  4292     0695  2E97               	goto	u111_20
  4293     0696                     u111_21:
  4294     0696  2E9C               	goto	i1l1979
  4295     0697                     u111_20:
  4296     0697                     i1l1977:
  4297                           
  4298                           ;interrupt_manager.c: 9:         TMR0_ISR();
  4299     0697  120A  118A  2643  120A  118A  	fcall	_TMR0_ISR
  4300     069C                     i1l1979:
  4301                           
  4302                           ;interrupt_manager.c: 11:     if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  4303     069C  1683               	bsf	3,5	;RP0=1, select bank1
  4304     069D  1303               	bcf	3,6	;RP1=0, select bank1
  4305     069E  1E8C               	btfss	12,5	;volatile
  4306     069F  2EA1               	goto	u112_21
  4307     06A0  2EA2               	goto	u112_20
  4308     06A1                     u112_21:
  4309     06A1  2EAD               	goto	i1l17
  4310     06A2                     u112_20:
  4311     06A2                     i1l1981:
  4312     06A2  1283               	bcf	3,5	;RP0=0, select bank0
  4313     06A3  1303               	bcf	3,6	;RP1=0, select bank0
  4314     06A4  1E8C               	btfss	12,5	;volatile
  4315     06A5  2EA7               	goto	u113_21
  4316     06A6  2EA8               	goto	u113_20
  4317     06A7                     u113_21:
  4318     06A7  2EAD               	goto	i1l17
  4319     06A8                     u113_20:
  4320     06A8                     i1l1983:
  4321                           
  4322                           ;interrupt_manager.c: 12:         USART_RX_ISR();
  4323     06A8  120A  118A  26B6  120A  118A  	fcall	_USART_RX_ISR
  4324     06AD                     i1l17:
  4325     06AD  0873               	movf	??_InterruptManager+2,w
  4326     06AE  008A               	movwf	10
  4327     06AF  0872               	movf	??_InterruptManager+1,w
  4328     06B0  0084               	movwf	4
  4329     06B1  0E71               	swapf	??_InterruptManager,w
  4330     06B2  0083               	movwf	3
  4331     06B3  0EFE               	swapf	btemp,f
  4332     06B4  0E7E               	swapf	btemp,w
  4333     06B5  0009               	retfie
  4334     06B6                     __end_of_InterruptManager:
  4335                           
  4336                           	psect	intentry
  4337     0004                     __pintentry:	
  4338                           ;incstack = 0
  4339                           ; Regs used in _InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4340                           
  4341     0004                     interrupt_function:
  4342     007E                     saved_w	set	btemp
  4343     0004  00FE               	movwf	btemp
  4344     0005  0E03               	swapf	3,w
  4345     0006  00F1               	movwf	??_InterruptManager
  4346     0007  0804               	movf	4,w
  4347     0008  00F2               	movwf	??_InterruptManager+1
  4348     0009  080A               	movf	10,w
  4349     000A  00F3               	movwf	??_InterruptManager+2
  4350     000B  120A  118A  2E8F   	ljmp	_InterruptManager
  4351                           
  4352                           	psect	text12
  4353     06B6                     __ptext12:	
  4354 ;; *************** function _USART_RX_ISR *****************
  4355 ;; Defined at:
  4356 ;;		line 22 in file "usart.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;		None
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;		None
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  1    wreg      void 
  4363 ;; Registers used:
  4364 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4370 ;;      Params:         0       0       0       0       0
  4371 ;;      Locals:         0       0       0       0       0
  4372 ;;      Temps:          1       0       0       0       0
  4373 ;;      Totals:         1       0       0       0       0
  4374 ;;Total ram usage:        1 bytes
  4375 ;; Hardware stack levels used: 1
  4376 ;; This function calls:
  4377 ;;		Nothing
  4378 ;; This function is called by:
  4379 ;;		_InterruptManager
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383     06B6                     _USART_RX_ISR:	
  4384                           ;psect for function _USART_RX_ISR
  4385                           
  4386     06B6                     i1l1911:	
  4387                           ;incstack = 0
  4388                           ; Regs used in _USART_RX_ISR: [wreg-fsr0h+status,2+status,0]
  4389                           
  4390                           
  4391                           ;usart.c: 24:     rxBuffer[rxCount] = RCREG;
  4392     06B6  1283               	bcf	3,5	;RP0=0, select bank0
  4393     06B7  1303               	bcf	3,6	;RP1=0, select bank0
  4394     06B8  0831               	movf	_rxCount,w
  4395     06B9  3E20               	addlw	(low (_rxBuffer| 0))& (0+255)
  4396     06BA  0084               	movwf	4
  4397     06BB  081A               	movf	26,w	;volatile
  4398     06BC  1383               	bcf	3,7	;select IRP bank0
  4399     06BD  0080               	movwf	0
  4400     06BE                     i1l1913:
  4401                           
  4402                           ;usart.c: 25:     rxCount++;
  4403     06BE  3001               	movlw	1
  4404     06BF  00F0               	movwf	??_USART_RX_ISR
  4405     06C0  0870               	movf	??_USART_RX_ISR,w
  4406     06C1  07B1               	addwf	_rxCount,f	;volatile
  4407     06C2                     i1l1915:
  4408                           
  4409                           ;usart.c: 26:     if(rxCount >= 3)
  4410     06C2  3003               	movlw	3
  4411     06C3  0231               	subwf	_rxCount,w	;volatile
  4412     06C4  1C03               	skipc
  4413     06C5  2EC7               	goto	u107_21
  4414     06C6  2EC8               	goto	u107_20
  4415     06C7                     u107_21:
  4416     06C7  2ECA               	goto	i1l1919
  4417     06C8                     u107_20:
  4418     06C8                     i1l1917:
  4419                           
  4420                           ;usart.c: 27:         rxCount = 3 - 1;
  4421     06C8  3002               	movlw	2
  4422     06C9  00B1               	movwf	_rxCount	;volatile
  4423     06CA                     i1l1919:
  4424                           
  4425                           ;usart.c: 28:     if(RCSTAbits.OERR == 1)
  4426     06CA  1C98               	btfss	24,1	;volatile
  4427     06CB  2ECD               	goto	u108_21
  4428     06CC  2ECE               	goto	u108_20
  4429     06CD                     u108_21:
  4430     06CD  2ED1               	goto	i1l1925
  4431     06CE                     u108_20:
  4432     06CE                     i1l1921:
  4433                           
  4434                           ;usart.c: 29:     {;usart.c: 30:         RCSTAbits.CREN = 0;
  4435     06CE  1218               	bcf	24,4	;volatile
  4436                           
  4437                           ;usart.c: 31:         RCSTAbits.CREN = 1;
  4438     06CF  1618               	bsf	24,4	;volatile
  4439     06D0                     i1l1923:
  4440                           
  4441                           ;usart.c: 32:         rxCount = 0;
  4442     06D0  01B1               	clrf	_rxCount	;volatile
  4443     06D1                     i1l1925:
  4444                           
  4445                           ;usart.c: 34:     PIR1bits.RCIF = 0;
  4446     06D1  128C               	bcf	12,5	;volatile
  4447     06D2                     i1l484:
  4448     06D2  0008               	return
  4449     06D3                     __end_of_USART_RX_ISR:
  4450                           
  4451                           	psect	text13
  4452     0643                     __ptext13:	
  4453 ;; *************** function _TMR0_ISR *****************
  4454 ;; Defined at:
  4455 ;;		line 14 in file "tmr0.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;		None
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;		None
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  1    wreg      void 
  4462 ;; Registers used:
  4463 ;;		wreg, status,2, status,0
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4469 ;;      Params:         0       0       0       0       0
  4470 ;;      Locals:         0       0       0       0       0
  4471 ;;      Temps:          1       0       0       0       0
  4472 ;;      Totals:         1       0       0       0       0
  4473 ;;Total ram usage:        1 bytes
  4474 ;; Hardware stack levels used: 1
  4475 ;; This function calls:
  4476 ;;		Nothing
  4477 ;; This function is called by:
  4478 ;;		_InterruptManager
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482     0643                     _TMR0_ISR:	
  4483                           ;psect for function _TMR0_ISR
  4484                           
  4485     0643                     i1l1891:	
  4486                           ;incstack = 0
  4487                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0]
  4488                           
  4489                           
  4490                           ;tmr0.c: 16:     timerbotao1++;
  4491     0643  3001               	movlw	1
  4492     0644  1283               	bcf	3,5	;RP0=0, select bank0
  4493     0645  1303               	bcf	3,6	;RP1=0, select bank0
  4494     0646  07AF               	addwf	_timerbotao1,f
  4495     0647  1803               	skipnc
  4496     0648  0AB0               	incf	_timerbotao1+1,f
  4497     0649  3000               	movlw	0
  4498     064A  07B0               	addwf	_timerbotao1+1,f
  4499                           
  4500                           ;tmr0.c: 17:     if(timerbotao1 > 1000)
  4501     064B  3003               	movlw	3
  4502     064C  0230               	subwf	_timerbotao1+1,w
  4503     064D  30E9               	movlw	233
  4504     064E  1903               	skipnz
  4505     064F  022F               	subwf	_timerbotao1,w
  4506     0650  1C03               	skipc
  4507     0651  2E53               	goto	u105_21
  4508     0652  2E54               	goto	u105_20
  4509     0653                     u105_21:
  4510     0653  2E58               	goto	i1l408
  4511     0654                     u105_20:
  4512     0654                     i1l1893:
  4513                           
  4514                           ;tmr0.c: 18:         timerbotao1 = 1000;
  4515     0654  30E8               	movlw	232
  4516     0655  00AF               	movwf	_timerbotao1
  4517     0656  3003               	movlw	3
  4518     0657  00B0               	movwf	_timerbotao1+1
  4519     0658                     i1l408:
  4520                           
  4521                           ;tmr0.c: 19:     timerbotao2++;
  4522     0658  3001               	movlw	1
  4523     0659  07AD               	addwf	_timerbotao2,f
  4524     065A  1803               	skipnc
  4525     065B  0AAE               	incf	_timerbotao2+1,f
  4526     065C  3000               	movlw	0
  4527     065D  07AE               	addwf	_timerbotao2+1,f
  4528                           
  4529                           ;tmr0.c: 20:     if(timerbotao2 > 1000)
  4530     065E  3003               	movlw	3
  4531     065F  022E               	subwf	_timerbotao2+1,w
  4532     0660  30E9               	movlw	233
  4533     0661  1903               	skipnz
  4534     0662  022D               	subwf	_timerbotao2,w
  4535     0663  1C03               	skipc
  4536     0664  2E66               	goto	u106_21
  4537     0665  2E67               	goto	u106_20
  4538     0666                     u106_21:
  4539     0666  2E6B               	goto	i1l1897
  4540     0667                     u106_20:
  4541     0667                     i1l1895:
  4542                           
  4543                           ;tmr0.c: 21:         timerbotao2 = 1000;
  4544     0667  30E8               	movlw	232
  4545     0668  00AD               	movwf	_timerbotao2
  4546     0669  3003               	movlw	3
  4547     066A  00AE               	movwf	_timerbotao2+1
  4548     066B                     i1l1897:
  4549                           
  4550                           ;tmr0.c: 22:     timerfimcurso++;
  4551     066B  3001               	movlw	1
  4552     066C  00F0               	movwf	??_TMR0_ISR
  4553     066D  0870               	movf	??_TMR0_ISR,w
  4554     066E  07C1               	addwf	_timerfimcurso,f
  4555     066F                     i1l1899:
  4556                           
  4557                           ;tmr0.c: 23:     timerchaveNF++;
  4558     066F  3001               	movlw	1
  4559     0670  00F0               	movwf	??_TMR0_ISR
  4560     0671  0870               	movf	??_TMR0_ISR,w
  4561     0672  07C0               	addwf	_timerchaveNF,f
  4562     0673                     i1l1901:
  4563                           
  4564                           ;tmr0.c: 24:     timerchaveNA++;
  4565     0673  3001               	movlw	1
  4566     0674  00F0               	movwf	??_TMR0_ISR
  4567     0675  0870               	movf	??_TMR0_ISR,w
  4568     0676  07BF               	addwf	_timerchaveNA,f
  4569     0677                     i1l1903:
  4570                           
  4571                           ;tmr0.c: 25:     timerchavecopo++;
  4572     0677  3001               	movlw	1
  4573     0678  00F0               	movwf	??_TMR0_ISR
  4574     0679  0870               	movf	??_TMR0_ISR,w
  4575     067A  07BE               	addwf	_timerchavecopo,f
  4576                           
  4577                           ;tmr0.c: 26:     timer++;
  4578     067B  3001               	movlw	1
  4579     067C  07AB               	addwf	_timer,f
  4580     067D  1803               	skipnc
  4581     067E  0AAC               	incf	_timer+1,f
  4582     067F  3000               	movlw	0
  4583     0680  07AC               	addwf	_timer+1,f
  4584                           
  4585                           ;tmr0.c: 27:     timerpwm++;
  4586     0681  3001               	movlw	1
  4587     0682  07A9               	addwf	_timerpwm,f
  4588     0683  1803               	skipnc
  4589     0684  0AAA               	incf	_timerpwm+1,f
  4590     0685  3000               	movlw	0
  4591     0686  07AA               	addwf	_timerpwm+1,f
  4592     0687                     i1l1905:
  4593                           
  4594                           ;tmr0.c: 28:     timeoutRx++;
  4595     0687  3001               	movlw	1
  4596     0688  00F0               	movwf	??_TMR0_ISR
  4597     0689  0870               	movf	??_TMR0_ISR,w
  4598     068A  07BD               	addwf	_timeoutRx,f
  4599     068B                     i1l1907:
  4600                           
  4601                           ;tmr0.c: 30:     TMR0 = 0x64;
  4602     068B  3064               	movlw	100
  4603     068C  0081               	movwf	1	;volatile
  4604     068D                     i1l1909:
  4605                           
  4606                           ;tmr0.c: 31:     INTCONbits.T0IF = 0;
  4607     068D  110B               	bcf	11,2	;volatile
  4608     068E                     i1l410:
  4609     068E  0008               	return
  4610     068F                     __end_of_TMR0_ISR:
  4611     007E                     btemp	set	126	;btemp
  4612     007E                     wtemp0	set	126
  4613                           
  4614                           	psect	idloc
  4615                           
  4616                           ;Config register IDLOC0 @ 0x2000
  4617                           ;	unspecified, using default values
  4618     2000                     	org	8192
  4619     2000  3FFF               	dw	16383
  4620                           
  4621                           ;Config register IDLOC1 @ 0x2001
  4622                           ;	unspecified, using default values
  4623     2001                     	org	8193
  4624     2001  3FFF               	dw	16383
  4625                           
  4626                           ;Config register IDLOC2 @ 0x2002
  4627                           ;	unspecified, using default values
  4628     2002                     	org	8194
  4629     2002  3FFF               	dw	16383
  4630                           
  4631                           ;Config register IDLOC3 @ 0x2003
  4632                           ;	unspecified, using default values
  4633     2003                     	org	8195
  4634     2003  3FFF               	dw	16383
  4635                           
  4636                           	psect	config
  4637                           
  4638                           ;Config register CONFIG @ 0x2007
  4639                           ;	Oscillator Selection bits
  4640                           ;	FOSC = HS, HS oscillator
  4641                           ;	Watchdog Timer Enable bit
  4642                           ;	WDTE = ON, WDT enabled
  4643                           ;	Power-up Timer Enable bit
  4644                           ;	PWRTE = ON, PWRT enabled
  4645                           ;	Brown-out Reset Enable bit
  4646                           ;	BOREN = ON, BOR enabled
  4647                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4648                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4649                           ;	Data EEPROM Memory Code Protection bit
  4650                           ;	CPD = ON, Data EEPROM code-protected
  4651                           ;	Flash Program Memory Write Enable bits
  4652                           ;	WRT = HALF, 0000h to 0FFFh write-protected; 1000h to 1FFFh may be written to by EECON 
      +                          control
  4653                           ;	In-Circuit Debugger Mode bit
  4654                           ;	DEBUG = 0x1, unprogrammed default
  4655                           ;	Flash Program Memory Code Protection bit
  4656                           ;	CP = ON, All program memory code-protected
  4657     2007                     	org	8199
  4658     2007  1876               	dw	6262

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      4      38
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM_LoadDutyValue
    _PWM_Initialize->_PWM_LoadDutyValue

Critical Paths under _InterruptManager in COMMON

    _InterruptManager->_TMR0_ISR
    _InterruptManager->_USART_RX_ISR

Critical Paths under _main in BANK0

    _main->_PWM_LoadDutyValue
    _PWM_Initialize->_PWM_LoadDutyValue

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1069
                                              2 BANK0      2     2      0
                   _Interrupt_Enable
                     _PWM_Initialize
                  _PWM_LoadDutyValue
              _PinManager_Initialize
                    _TMR0_Initialize
                   _USART_Initialize
              _USART_RX_Clear_Buffer
                     _USART_RX_Ready
                         _USART_Read
                        _USART_Write
 ---------------------------------------------------------------------------------
 (1) _USART_Write                                          1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Read                                           1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_RX_Ready                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_RX_Clear_Buffer                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PinManager_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Initialize                                       0     0      0     512
                  _PWM_LoadDutyValue
 ---------------------------------------------------------------------------------
 (1) _PWM_LoadDutyValue                                    4     2      2     512
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Interrupt_Enable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _InterruptManager                                     3     3      0       0
                                              1 COMMON     3     3      0
                           _TMR0_ISR
                       _USART_RX_ISR
 ---------------------------------------------------------------------------------
 (4) _USART_RX_ISR                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _TMR0_ISR                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupt_Enable
   _PWM_Initialize
     _PWM_LoadDutyValue
   _PWM_LoadDutyValue
   _PinManager_Initialize
   _TMR0_Initialize
   _USART_Initialize
   _USART_RX_Clear_Buffer
   _USART_RX_Ready
   _USART_Read
   _USART_Write

 _InterruptManager (ROOT)
   _TMR0_ISR
   _USART_RX_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      30       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4      26       5       47.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      30      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Sep 13 10:33:23 2024

           ??_InterruptManager 0071             ??_Interrupt_Enable 0074                             l20 0758  
                           fsr 0004       __end_of_USART_Initialize 0726                            l210 033E  
                          l106 0056                            l211 0340                            l212 0342  
                          l213 0344                            l205 0336                            l214 0346  
                          l150 019F                            l215 0348                            l207 0338  
                          l216 0374                            l208 033A                            l241 041E  
                          l217 037D                            l209 033C                            l153 063F  
                          l242 0420                            l170 0231                            l154 01AF  
                          l251 0465                            l243 0422                            l163 01F0  
                          l244 0424                            l405 0745                            l253 0498  
                          l245 0426                            l165 0213                            l149 0191  
                          l350 0714                            l246 0428                            l174 0246  
                          l158 01EE                            l247 042A                            l239 041C  
                          l159 01DF                            l512 0702                            l264 04F0  
                          l248 042C                            l168 021C                            l265 04FD  
                          l249 042E                            l169 0224                            l266 050A  
                          l186 02B5                            l515 06ED                            l267 0517  
                          l259 04C6                            l268 0524                            l278 05C4  
                          l490 0731                            l493 0733                            l479 0725  
                          l487 0751                            l496 073B                            l499 0755  
                          _PR2 0092                            fsr0 0004                            indf 0000  
                         l3001 02C2                           l3011 02E3                           l3003 02C4  
                         l3101 03E5                           l3021 02F6                           l3013 02E6  
                         l3005 02C9                           l3111 03F8                           l3103 03E7  
                         l3031 0309                           l3023 02F7                           l3015 02E9  
                         l3007 02D2                           l3201 052B                           l3113 03FD  
                         l3105 03ED                           l3041 0321                           l3025 02FC  
                         l3033 030E                           l3017 02EC                           l3009 02DA  
                         l3211 053B                           l3131 045E                           l3115 0407  
                         l3051 034A                           l3043 0327                           l3035 0310  
                         l3027 0301                           l3019 02F0                           l3221 0544  
                         l3213 053C                           l3205 052D                           l3141 046E  
                         l3133 0464                           l3125 0430                           l3117 040D  
                         l3109 03F2                           l3061 038A                           l3045 032E  
                         l3029 0303                           l3223 0545                           l3215 053D  
                         l3207 0531                           l3151 0486                           l3143 0475  
                         l3135 0466                           l3119 0414                           l3071 039B  
                         l3063 038C                           l3055 0378                           l3039 0317  
                         l3241 0569                           l3233 054D                           l3217 053F  
                         l3209 0537                           l3161 049F                           l3153 048B  
                         l3145 0479                           l3137 0468                           l3129 045A  
                         l3081 03BA                           l3073 03A4                           l3065 038E  
                         l3057 0381                           l3251 0595                           l3243 056D  
                         l3235 0556                           l3227 0549                           l3219 0542  
                         l3171 04B3                           l3163 04A2                           l3155 048D  
                         l3147 047F                           l3139 046A                           l3091 03D0  
                         l3083 03C3                           l3075 03AC                           l3067 0390  
                         l3059 0386                           l3261 05B2                           l3253 059F  
                         l3245 0577                           l3237 0557                           l3229 054B  
                         l3181 04C7                           l3173 04B8                           l3165 04A8  
                         l3157 0493                           l3149 0481                           l3093 03D4  
                         l3085 03C8                           l3077 03B2                           l3069 0394  
                         l3271 05E9                           l3263 05B6                           l3255 05A7  
                         l3247 058B                           l3239 0563                           l3191 04EA  
                         l3175 04BD                           l3167 04AE                           l3183 04CC  
                         l3159 049C                           l3095 03DA                           l3087 03CA  
                         l3079 03B5                           l2711 0022                           l2705 06D3  
                         l3281 05F2                           l3273 05ED                           l3265 05C8  
                         l3257 05AB                           l3249 0591                           l3193 04F7  
                         l3185 04D6                           l3177 04BF                           l3169 04B2  
                         l3097 03DB                           l3089 03CD                           l2801 00BA  
                         l2721 0046                           l2713 0036                           l2707 06EE  
                         l1931 0708                           l3267 05D6                           l3259 05B0  
                         l3275 05EF                           l3195 0504                           l3187 04DC  
                         l3099 03E0                           l2811 00C5                           l2803 00BB  
                         l2731 004C                           l2723 0047                           l2715 0043  
                         l2709 06FA                           l1933 070C                           l3277 05F0  
                         l3269 05E3                           l3197 0511                           l3189 04E3  
                         l2901 01A4                           l3285 05F4                           l2813 00CB  
                         l2821 00D1                           l2805 00BC                           l2741 0052  
                         l2733 004E                           l2725 0048                           l2717 0044  
                         l1927 0756                           l1935 070E                           l1951 071F  
                         l3279 05F1                           l3199 051E                           l2911 01C0  
                         l2903 01A8                           l2831 00E2                           l2823 00D5  
                         l2815 00CE                           l2807 00BD                           l2751 006A  
                         l2743 0054                           l2735 004F                           l2727 0049  
                         l2719 0045                           l1937 0710                           l1929 0703  
                         l1945 073C                           l1953 0722                           l2921 01DD  
                         l2913 01C9                           l2905 01AC                           l2841 00F8  
                         l2825 00D9                           l2833 00E3                           l2817 00CF  
                         l2809 00C1                           l2761 0077                           l2753 006C  
                         l2745 0057                           l2737 0050                           l2729 004A  
                         l1939 0712                           l1947 0744                           l1963 0752  
                         l1955 0733                           l3395 0354                           l2931 0204  
                         l2923 01E0                           l2907 01B3                           l2915 01CB  
                         l2851 0119                           l2843 00FF                           l2835 00EA  
                         l2827 00DF                           l2819 00D0                           l2771 0089  
                         l2763 0080                           l2755 006E                           l2747 005D  
                         l2739 0051                           l1949 0715                           l1965 0726  
                         l1957 0739                           l3397 043A                           l2941 0221  
                         l2933 0207                           l2925 01E9                           l2917 01CF  
                         l2909 01B7                           l2853 011A                           l2861 0133  
                         l2845 0101                           l2837 00F0                           l2829 00E1  
                         l2781 0097                           l2773 008D                           l2765 0082  
                         l2749 0061                           l2757 006F                           l1959 074E  
                         l1967 072A                           l3399 05FE                           l2951 023D  
                         l2943 0228                           l2935 0210                           l2927 01EB  
                         l2919 01D4                           l2871 014A                           l2863 013B  
                         l2855 0121                           l2839 00F1                           l2847 010A  
                         l2791 00A1                           l2783 009B                           l2775 0093  
                         l2767 0084                           l2759 0073                           l1969 0730  
                         l2961 0259                           l2953 0241                           l2945 022D  
                         l2937 0217                           l2929 01FA                           l2881 0177  
                         l2873 0154                           l2865 013C                           l2857 0128  
                         l2849 0113                           l2785 009C                           l2793 00A7  
                         l2777 0095                           l2769 0085                           l2971 0275  
                         l2963 025D                           l2955 024A                           l2947 023A  
                         l2939 0219                           l2891 0194                           l2883 017D  
                         l2875 015E                           l2867 013F                           l2859 012A  
                         l2795 00AD                           l2787 009D                           l2779 0096  
                         l2981 0291                           l2973 0279                           l2965 0260  
                         l2957 024F                           l2949 023B                           l2893 019D  
                         l2877 0167                           l2869 0148                           l2797 00B1  
                         l2789 009F                           l2991 02AA                           l2983 0297  
                         l2975 0281                           l2967 0269                           l2959 0253  
                         l2895 01A1                           l2887 0184                           l2879 016D  
                         l2799 00B7                           l2993 02AC                           l2985 029E  
                         l2969 026B                           l2897 01A2                           l2889 018D  
                         l2995 02AE                           l2987 02A5                           l2979 0287  
                         l2899 01A3                           l2997 02B9                           l2989 02A9  
                         l2999 02BE                           u2100 006A                           u2101 0069  
                         u2110 0073                           u2111 0072                           u3000 05C8  
                         u2200 00B7                           u2120 0077                           u3001 05C7  
                         u2201 00B6                           u2121 0076                           u1090 0739  
                         u2210 00C1                           u2130 0080                           u1091 0738  
                         u2211 00C0                           u2131 007F                           u2300 0113  
                         u2220 00C5                           u2140 0089                           u2301 0112  
                         u2221 00C4                           u2141 0088                           u2310 0119  
                         u2230 00CB                           u2150 008D                           u2311 0118  
                         u2231 00CA                           u2151 008C                           u2400 019D  
                         u2320 0128                           u2240 00D5                           u2160 0093  
                         u2080 005D                           u2401 019C                           u2321 0127  
                         u2241 00D4                           u2161 0092                           u2081 005C  
                         u2410 01A8                           u2330 013B                           u2250 00D9  
                         u2170 009B                           u2090 0061                           u2075 06E4  
                         u2411 01A7                           u2331 013A                           u2251 00D8  
                         u2171 009A                           u2091 0060                           u2500 01E9  
                         u2420 01AC                           u2340 0148                           u2260 00DF  
                         u2180 00AD                           u2501 01E8                           u2421 01AB  
                         u2341 0147                           u2261 00DE                           u2181 00AC  
                         u2510 0210                           u2430 01B3                           u2350 0154  
                         u2270 00EA                           u2190 00B1                           u2511 020F  
                         u2431 01B2                           u2351 0153                           u2271 00E9  
                         u2191 00B0                           u2600 0281                           u2520 0217  
                         u2440 01B7                           u2360 015E                           u2280 00F0  
                         u2601 0280                           u2521 0216                           u2441 01B6  
                         u2361 015D                           u2281 00EF                           u2610 0291  
                         u2530 0221                           u2450 01C0                           u2370 0167  
                         u2290 00FF                           u2611 0290                           u2531 0220  
                         u2451 01BF                           u2371 0166                           u2355 0150  
                         u2291 00FE                           u2700 0321                           u2620 029E  
                         u2540 0228                           u2460 01C9                           u2380 017D  
                         u2701 0320                           u2621 029D                           u2541 0227  
                         u2461 01C8                           u2381 017C                           u2365 015A  
                         u2710 032E                           u2630 02A5                           u2550 023A  
                         u2470 01CF                           u2390 018D                           u2711 032D  
                         u2631 02A4                           u2551 0239                           u2471 01CE  
                         u2391 018C                           u2800 03F8                           u2720 0335  
                         u2640 02B9                           u2560 0241                           u2480 01D4  
                         u2801 03F7                           u2721 0334                           u2641 02B8  
                         u2561 0240                           u2481 01D3                           u2810 0407  
                         u2730 0378                           u2650 02D2                           u2570 024A  
                         u2490 01DD                           u2811 0406                           u2731 0377  
                         u2651 02D1                           u2571 0249                           u2491 01DC  
                         u2900 04E3                           u2820 0414                           u2740 0381  
                         u2660 02DA                           u2580 0269                           u2901 04E2  
                         u2821 0413                           u2741 0380                           u2661 02D9  
                         u2581 0268                           u2910 04EA                           u2830 041B  
                         u2750 03A4                           u2670 02E3                           u2590 0275  
                         u2911 04E9                           u2831 041A                           u2751 03A3  
                         u2671 02E2                           u2591 0274                           u2920 04F7  
                         u2840 0464                           u2760 03AC                           u2680 02F6  
                         u2921 04F6                           u2841 0463                           u2761 03AB  
                         u2681 02F5                           u2930 0504                           u2850 047F  
                         u2770 03B2                           u2690 0316                           u2931 0503  
                         u2851 047E                           u2771 03B1                           u2691 0315  
                         u2940 0511                           u2860 049C                           u2780 03C3  
                         u2941 0510                           u2861 049B                           u2781 03C2  
                         u2950 051E                           u2870 04A8                           u2790 03DA  
                         u2951 051D                           u2871 04A7                           u2791 03D9  
                         u2960 052B                           u2880 04AE                           i1l17 06AD  
                         u2961 052A                           u2881 04AD                           u2970 0556  
                         u2890 04D6                           u2971 0555                           u2891 04D5  
                         u2980 05AB                           u2981 05AA                           u2990 05B6  
                         u2991 05B5                           _TMR0 0001                           _main 0022  
              ?_USART_RX_Ready 0070                           btemp 007E                           start 000E  
__end_of_PinManager_Initialize 0715        __end_of_TMR0_Initialize 0746                          ?_main 0070  
                        _T2CON 0012                          i1l410 068E                          i1l408 0658  
                        i1l484 06D2                          _RCREG 001A                          _RCSTA 0018  
                        _SPBRG 0099                          _PORTA 0005                          _PORTB 0006  
                        _PORTC 0007                          _TRISA 0085                          _TRISB 0086  
                        _TRISC 0087                          _TXREG 0019                          _TXSTA 0098  
             __end_of_TMR0_ISR 068F                          _timer 002B                          pclath 000A  
                        status 0003                          wtemp0 007E                    ?_USART_Read 0070  
              __initialization 0011                   __end_of_main 0643                         ??_main 0044  
                       _ADCON1 009F                         _CCPR1L 0015                         u110_20 0693  
                       u110_21 0692                         u111_20 0697                         u111_21 0696  
                       u112_20 06A2                         u112_21 06A1                         u105_20 0654  
                       u113_20 06A8                         u105_21 0653                         u113_21 06A7  
                       i1l1901 0673                         i1l1903 0677                         i1l1911 06B6  
                       u106_20 0667                         i1l1905 0687                         u106_21 0666  
                       i1l1921 06CE                         i1l1913 06BE                         i1l1907 068B  
                       i1l1923 06D0                         i1l1915 06C2                         i1l1909 068D  
                       i1l1925 06D1                         i1l1917 06C8                         i1l1919 06CA  
                       u107_20 06C8                         u107_21 06C7                         i1l1891 0643  
                       i1l1893 0654                         i1l1981 06A2                         i1l1973 068F  
                       i1l1895 0667                         i1l1983 06A8                         i1l1975 0693  
                       u108_20 06CE                         i1l1897 066B                         u108_21 06CD  
                       i1l1977 0697                         i1l1899 066F                         i1l1979 069C  
               _PWM_Initialize 06EE                         _ciclos 0036                         _pecaOK 0039  
                       _estado 0076               ?_TMR0_Initialize 0070                         saved_w 007E  
      __end_of__initialization 001E                   ?_USART_Write 0070         __end_of_PWM_Initialize 0703  
               __pcstackCOMMON 0070                      ?_TMR0_ISR 0070              ?_USART_Initialize 0070  
           ??_USART_Initialize 0074               ??_USART_RX_Ready 0074                     __pbssBANK0 0020  
        _USART_RX_Clear_Buffer 0752                ?_PWM_Initialize 0070                     __pmaintext 0022  
                   ??_TMR0_ISR 0070                     __pintentry 0004                        _CCP1CON 0017  
                 ??_USART_Read 0074                     _naodesliga 003B          _PinManager_Initialize 0703  
                      __ptext1 0732                        __ptext2 0726                        __ptext3 074E  
                      __ptext4 0752                        __ptext5 0715                        __ptext6 073C  
                      __ptext7 0703                        __ptext8 06EE                        __ptext9 06D3  
                      _escravo 0023                 USART_Read@data 0074                        _naoliga 003C  
                      _estagio 0035                        _rxCount 0031             __end_of_USART_Read 0732  
                      clrloop0 0747           end_of_initialization 001E         ?_USART_RX_Clear_Buffer 0070  
                    _RCSTAbits 0018                      _PORTAbits 0005                      _PORTBbits 0006  
                    _PORTCbits 0007               _InterruptManager 068F               _Interrupt_Enable 0756  
                   _pwm_setado 0027                  ?_USART_RX_ISR 0070              _PWM_LoadDutyValue 06D3  
           ?_PWM_LoadDutyValue 0074            ??_PWM_LoadDutyValue 0042         ?_PinManager_Initialize 0070  
          start_initialization 0011                 ??_USART_RX_ISR 0070      __end_of_PWM_LoadDutyValue 06EE  
             ??_PWM_Initialize 0076                    _addressFail 0037                    __pbssCOMMON 0076  
                    ___latbits 0002                  __pcstackBANK0 0042        ??_USART_RX_Clear_Buffer 0074  
            ??_TMR0_Initialize 0074              interrupt_function 0004       __end_of_InterruptManager 06B6  
                    clear_ram0 0746                       _PIE1bits 008C       __end_of_Interrupt_Enable 0759  
                     _PIR1bits 000C                       _TMR0_ISR 0643                      _timeoutRx 003D  
         __end_of_USART_RX_ISR 06D3                      _pwm_atual 0025                    _comunicacao 0078  
               _timerchavecopo 003E                    _countFailRx 0038               _USART_Initialize 0715  
                ??_USART_Write 0074     PWM_LoadDutyValue@dutyValue 0074        ??_PinManager_Initialize 0074  
                     __ptext10 0756                       __ptext11 068F                       __ptext12 06B6  
                     __ptext13 0643                       _endereco 0079                       _rxBuffer 0020  
                     _timerpwm 0029            __end_of_USART_Write 073C                     _INTCONbits 000B  
                _timerfimcurso 0041                       intlevel1 0000              _estagio@main$F463 0034  
            _estagio@main$F711 0032              _estagio@main$F561 0033                 _USART_RX_Ready 074E  
                 _timerchaveNA 003F                   _timerchaveNF 0040                     _OPTION_REG 0081  
              _TMR0_Initialize 073C                    _sincronismo 003A                    _timerbotao1 002F  
                  _timerbotao2 002D                   _USART_RX_ISR 06B6  __end_of_USART_RX_Clear_Buffer 0756  
       __end_of_USART_RX_Ready 0752                USART_Write@data 0074              ?_InterruptManager 0070  
                   _USART_Read 0726                    _USART_Write 0732              ?_Interrupt_Enable 0070  
